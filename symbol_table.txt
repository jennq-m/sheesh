Lexical Analysis of syntax_file.shs:

Line 1: Lexeme: toptier         Token: TOPTIER
Line 1: Lexeme: (               Token: DELIM_O_PAREN
Line 1: Lexeme: )               Token: DELIM_C_PAREN
Line 1: Lexeme: {               Token: DELIM_O_BRACE
Line 2: Lexeme: average         Token: IDENTIFIER
Line 2: Lexeme: =               Token: =
Line 2: Lexeme: (               Token: DELIM_O_PAREN
Line 2: Lexeme: math_grade      Token: IDENTIFIER
Line 2: Lexeme: +               Token: +
Line 2: Lexeme: science_grade   Token: IDENTIFIER
Line 2: Lexeme: +               Token: +
Line 2: Lexeme: english_grade   Token: IDENTIFIER
Line 2: Lexeme: )               Token: DELIM_C_PAREN
Line 2: Lexeme: /               Token: /
Line 2: Lexeme: 3               Token: CONSTANT_NUM
Line 2: Lexeme: ;               Token: DELIM_SEMCOL
Line 3: Lexeme: !               Token: !
Line 3: Lexeme: (               Token: DELIM_O_PAREN
Line 3: Lexeme: true            Token: IDENTIFIER
Line 3: Lexeme: +               Token: +
Line 3: Lexeme: true            Token: IDENTIFIER
Line 3: Lexeme: )               Token: DELIM_C_PAREN
Line 3: Lexeme: ;               Token: DELIM_SEMCOL
Line 4: Lexeme: (               Token: DELIM_O_PAREN
Line 4: Lexeme: expression      Token: IDENTIFIER
Line 4: Lexeme: )               Token: DELIM_C_PAREN
Line 4: Lexeme: ;               Token: DELIM_SEMCOL
Line 5: Lexeme: this            Token: IDENTIFIER
Line 5: Lexeme: ||              Token: ||
Line 5: Lexeme: that            Token: IDENTIFIER
Line 5: Lexeme: ;               Token: DELIM_SEMCOL
Line 6: Lexeme: this            Token: IDENTIFIER
Line 6: Lexeme: &&              Token: &&
Line 6: Lexeme: that            Token: IDENTIFIER
Line 6: Lexeme: ;               Token: DELIM_SEMCOL
Line 7: Lexeme: this            Token: IDENTIFIER
Line 7: Lexeme: ==              Token: ==
Line 7: Lexeme: that            Token: IDENTIFIER
Line 7: Lexeme: ;               Token: DELIM_SEMCOL
Line 8: Lexeme: this            Token: IDENTIFIER
Line 8: Lexeme: >=              Token: >=
Line 8: Lexeme: that            Token: IDENTIFIER
Line 8: Lexeme: ;               Token: DELIM_SEMCOL
Line 9: Lexeme: this            Token: IDENTIFIER
Line 9: Lexeme: +               Token: +
Line 9: Lexeme: that            Token: IDENTIFIER
Line 9: Lexeme: ;               Token: DELIM_SEMCOL
Line 10: Lexeme: this            Token: IDENTIFIER
Line 10: Lexeme: *               Token: *
Line 10: Lexeme: that            Token: IDENTIFIER
Line 10: Lexeme: ;               Token: DELIM_SEMCOL
Line 11: Lexeme: !               Token: !
Line 11: Lexeme: cap             Token: CONSTANT_LEGIT
Line 11: Lexeme: ;               Token: DELIM_SEMCOL
Line 12: Lexeme: i               Token: IDENTIFIER
Line 12: Lexeme: ++              Token: ++
Line 12: Lexeme: ;               Token: DELIM_SEMCOL
Line 14: Lexeme: //              Token: COMMENT
Line 15: Lexeme: input           Token: INPUT          
Line 15: Lexeme: (               Token: DELIM_O_PAREN
Line 15: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 15: Lexeme: ,               Token: DELIM_COMMA
Line 15: Lexeme: &               Token: &
Line 15: Lexeme: age             Token: IDENTIFIER
Line 15: Lexeme: )               Token: DELIM_C_PAREN
Line 15: Lexeme: ;               Token: DELIM_SEMCOL
Line 16: Lexeme: input           Token: INPUT          
Line 16: Lexeme: (               Token: DELIM_O_PAREN
Line 16: Lexeme: "%f"            Token: CONSTANT_TXTFS
Line 16: Lexeme: ,               Token: DELIM_COMMA
Line 16: Lexeme: &               Token: &
Line 16: Lexeme: float_a         Token: IDENTIFIER
Line 16: Lexeme: )               Token: DELIM_C_PAREN
Line 16: Lexeme: ;               Token: DELIM_SEMCOL
Line 17: Lexeme: input           Token: INPUT          
Line 17: Lexeme: (               Token: DELIM_O_PAREN
Line 17: Lexeme: "%s"            Token: CONSTANT_TXTFS
Line 17: Lexeme: ,               Token: DELIM_COMMA
Line 17: Lexeme: &               Token: &
Line 17: Lexeme: vibe_a          Token: IDENTIFIER
Line 17: Lexeme: )               Token: DELIM_C_PAREN
Line 17: Lexeme: ;               Token: DELIM_SEMCOL
Line 18: Lexeme: input           Token: INPUT          
Line 18: Lexeme: (               Token: DELIM_O_PAREN
Line 18: Lexeme: "%c"            Token: CONSTANT_TXTFS
Line 18: Lexeme: ,               Token: DELIM_COMMA
Line 18: Lexeme: &               Token: &
Line 18: Lexeme: letter          Token: IDENTIFIER
Line 18: Lexeme: )               Token: DELIM_C_PAREN
Line 18: Lexeme: ;               Token: DELIM_SEMCOL
Line 20: Lexeme: //              Token: COMMENT
Line 21: Lexeme: out             Token: OUTPUT         
Line 21: Lexeme: (               Token: DELIM_O_PAREN
Line 21: Lexeme: "String"        Token: CONSTANT_TEXT
Line 21: Lexeme: )               Token: DELIM_C_PAREN
Line 21: Lexeme: ;               Token: DELIM_SEMCOL
Line 22: Lexeme: out             Token: OUTPUT         
Line 22: Lexeme: (               Token: DELIM_O_PAREN
Line 22: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 22: Lexeme: ,               Token: DELIM_COMMA
Line 22: Lexeme: identifier      Token: IDENTIFIER
Line 22: Lexeme: )               Token: DELIM_C_PAREN
Line 22: Lexeme: ;               Token: DELIM_SEMCOL
Line 23: Lexeme: out             Token: OUTPUT         
Line 23: Lexeme: (               Token: DELIM_O_PAREN
Line 23: Lexeme: "Num: %d"       Token: CONSTANT_TXTFS
Line 23: Lexeme: ,               Token: DELIM_COMMA
Line 23: Lexeme: integer         Token: IDENTIFIER
Line 23: Lexeme: )               Token: DELIM_C_PAREN
Line 23: Lexeme: ;               Token: DELIM_SEMCOL
Line 25: Lexeme: out             Token: OUTPUT         
Line 25: Lexeme: (               Token: DELIM_O_PAREN
Line 25: Lexeme: "Age: %d"       Token: CONSTANT_TXTFS
Line 25: Lexeme: ,               Token: DELIM_COMMA
Line 25: Lexeme: age             Token: IDENTIFIER
Line 25: Lexeme: )               Token: DELIM_C_PAREN
Line 25: Lexeme: ;               Token: DELIM_SEMCOL
Line 26: Lexeme: out             Token: OUTPUT         
Line 26: Lexeme: (               Token: DELIM_O_PAREN
Line 26: Lexeme: "Float: %f"     Token: CONSTANT_TXTFS
Line 26: Lexeme: ,               Token: DELIM_COMMA
Line 26: Lexeme: float_a         Token: IDENTIFIER
Line 26: Lexeme: )               Token: DELIM_C_PAREN
Line 26: Lexeme: ;               Token: DELIM_SEMCOL
Line 27: Lexeme: out             Token: OUTPUT         
Line 27: Lexeme: (               Token: DELIM_O_PAREN
Line 27: Lexeme: "Text: %s"      Token: CONSTANT_TXTFS
Line 27: Lexeme: ,               Token: DELIM_COMMA
Line 27: Lexeme: text_a          Token: IDENTIFIER
Line 27: Lexeme: )               Token: DELIM_C_PAREN
Line 27: Lexeme: ;               Token: DELIM_SEMCOL
Line 28: Lexeme: out             Token: OUTPUT         
Line 28: Lexeme: (               Token: DELIM_O_PAREN
Line 28: Lexeme: "Letter: %c"    Token: CONSTANT_TXTFS
Line 28: Lexeme: ,               Token: DELIM_COMMA
Line 28: Lexeme: letter          Token: IDENTIFIER
Line 28: Lexeme: )               Token: DELIM_C_PAREN
Line 28: Lexeme: ;               Token: DELIM_SEMCOL
Line 30: Lexeme: //              Token: COMMENT
Line 31: Lexeme: decimal         Token: IDENTIFIER
Line 31: Lexeme: =               Token: =
Line 31: Lexeme: 89.70           Token: CONSTANT_DRIFT
Line 31: Lexeme: ;               Token: DELIM_SEMCOL
Line 32: Lexeme: count           Token: IDENTIFIER
Line 32: Lexeme: +=              Token: +=
Line 32: Lexeme: test_var        Token: IDENTIFIER
Line 32: Lexeme: ;               Token: DELIM_SEMCOL
Line 33: Lexeme: count           Token: IDENTIFIER
Line 33: Lexeme: *=              Token: *=
Line 33: Lexeme: test_var        Token: IDENTIFIER
Line 33: Lexeme: ;               Token: DELIM_SEMCOL
Line 34: Lexeme: count           Token: IDENTIFIER
Line 34: Lexeme: -=              Token: -=
Line 34: Lexeme: test_var        Token: IDENTIFIER
Line 34: Lexeme: ;               Token: DELIM_SEMCOL
Line 35: Lexeme: count           Token: IDENTIFIER
Line 35: Lexeme: |=              Token: |=
Line 35: Lexeme: test_var        Token: IDENTIFIER
Line 35: Lexeme: ;               Token: DELIM_SEMCOL
Line 36: Lexeme: count           Token: IDENTIFIER
Line 36: Lexeme: %=              Token: %=
Line 36: Lexeme: test_var        Token: IDENTIFIER
Line 36: Lexeme: ;               Token: DELIM_SEMCOL
Line 37: Lexeme: average         Token: IDENTIFIER
Line 37: Lexeme: =               Token: =
Line 37: Lexeme: (               Token: DELIM_O_PAREN
Line 37: Lexeme: math_grade      Token: IDENTIFIER
Line 37: Lexeme: +               Token: +
Line 37: Lexeme: science_grade   Token: IDENTIFIER
Line 37: Lexeme: +               Token: +
Line 37: Lexeme: english_grade   Token: IDENTIFIER
Line 37: Lexeme: )               Token: DELIM_C_PAREN
Line 37: Lexeme: /               Token: /
Line 37: Lexeme: 3               Token: CONSTANT_NUM
Line 37: Lexeme: ;               Token: DELIM_SEMCOL
Line 39: Lexeme: a               Token: IDENTIFIER
Line 39: Lexeme: =               Token: =
Line 39: Lexeme: b               Token: IDENTIFIER
Line 39: Lexeme: ;               Token: DELIM_SEMCOL
Line 40: Lexeme: a               Token: IDENTIFIER
Line 40: Lexeme: =               Token: =
Line 40: Lexeme: 8               Token: CONSTANT_NUM
Line 40: Lexeme: ;               Token: DELIM_SEMCOL
Line 41: Lexeme: a               Token: IDENTIFIER
Line 41: Lexeme: =               Token: =
Line 41: Lexeme: (               Token: DELIM_O_PAREN
Line 41: Lexeme: 8               Token: CONSTANT_NUM
Line 41: Lexeme: +               Token: +
Line 41: Lexeme: n               Token: IDENTIFIER
Line 41: Lexeme: *               Token: *
Line 41: Lexeme: (               Token: DELIM_O_PAREN
Line 41: Lexeme: c               Token: IDENTIFIER
Line 41: Lexeme: *               Token: *
Line 41: Lexeme: f               Token: IDENTIFIER
Line 41: Lexeme: )               Token: DELIM_C_PAREN
Line 41: Lexeme: ==              Token: ==
Line 41: Lexeme: 5               Token: CONSTANT_NUM
Line 41: Lexeme: )               Token: DELIM_C_PAREN
Line 41: Lexeme: ;               Token: DELIM_SEMCOL
Line 43: Lexeme: //              Token: COMMENT
Line 44: Lexeme: if              Token: IF             
Line 44: Lexeme: (               Token: DELIM_O_PAREN
Line 44: Lexeme: average         Token: IDENTIFIER
Line 44: Lexeme: >=              Token: >=
Line 44: Lexeme: 97.0            Token: CONSTANT_DRIFT
Line 44: Lexeme: )               Token: DELIM_C_PAREN
Line 44: Lexeme: {               Token: DELIM_O_BRACE
Line 45: Lexeme: out             Token: OUTPUT         
Line 45: Lexeme: (               Token: DELIM_O_PAREN
Line 45: Lexeme: "GWA is very high!" Token: CONSTANT_TEXT
Line 45: Lexeme: )               Token: DELIM_C_PAREN
Line 45: Lexeme: ;               Token: DELIM_SEMCOL
Line 46: Lexeme: }               Token: DELIM_C_BRACE
Line 48: Lexeme: if              Token: IF             
Line 48: Lexeme: (               Token: DELIM_O_PAREN
Line 48: Lexeme: average         Token: IDENTIFIER
Line 48: Lexeme: >=              Token: >=
Line 48: Lexeme: 1               Token: CONSTANT_NUM
Line 48: Lexeme: )               Token: DELIM_C_PAREN
Line 48: Lexeme: {               Token: DELIM_O_BRACE
Line 49: Lexeme: if              Token: IF             
Line 49: Lexeme: (               Token: DELIM_O_PAREN
Line 49: Lexeme: average         Token: IDENTIFIER
Line 49: Lexeme: <=              Token: <=
Line 49: Lexeme: 5               Token: CONSTANT_NUM
Line 49: Lexeme: )               Token: DELIM_C_PAREN
Line 49: Lexeme: {               Token: DELIM_O_BRACE
Line 50: Lexeme: out             Token: OUTPUT         
Line 50: Lexeme: (               Token: DELIM_O_PAREN
Line 50: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 50: Lexeme: ,               Token: DELIM_COMMA
Line 50: Lexeme: average         Token: IDENTIFIER
Line 50: Lexeme: )               Token: DELIM_C_PAREN
Line 50: Lexeme: ;               Token: DELIM_SEMCOL
Line 51: Lexeme: }               Token: DELIM_C_BRACE
Line 52: Lexeme: }               Token: DELIM_C_BRACE
Line 54: Lexeme: if              Token: IF             
Line 54: Lexeme: (               Token: DELIM_O_PAREN
Line 54: Lexeme: win             Token: IDENTIFIER
Line 54: Lexeme: ==              Token: ==
Line 54: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 54: Lexeme: )               Token: DELIM_C_PAREN
Line 54: Lexeme: {               Token: DELIM_O_BRACE
Line 55: Lexeme: out             Token: OUTPUT         
Line 55: Lexeme: (               Token: DELIM_O_PAREN
Line 55: Lexeme: "You won!"      Token: CONSTANT_TEXT
Line 55: Lexeme: )               Token: DELIM_C_PAREN
Line 55: Lexeme: ;               Token: DELIM_SEMCOL
Line 56: Lexeme: }               Token: DELIM_C_BRACE
Line 56: Lexeme: other           Token: OTHER          
Line 56: Lexeme: {               Token: DELIM_O_BRACE
Line 57: Lexeme: out             Token: OUTPUT         
Line 57: Lexeme: (               Token: DELIM_O_PAREN
Line 57: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 57: Lexeme: )               Token: DELIM_C_PAREN
Line 57: Lexeme: ;               Token: DELIM_SEMCOL
Line 58: Lexeme: }               Token: DELIM_C_BRACE
Line 60: Lexeme: if              Token: IF             
Line 60: Lexeme: (               Token: DELIM_O_PAREN
Line 60: Lexeme: win             Token: IDENTIFIER
Line 60: Lexeme: ==              Token: ==
Line 60: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 60: Lexeme: )               Token: DELIM_C_PAREN
Line 60: Lexeme: {               Token: DELIM_O_BRACE
Line 61: Lexeme: if              Token: IF             
Line 61: Lexeme: (               Token: DELIM_O_PAREN
Line 61: Lexeme: num_win         Token: IDENTIFIER
Line 61: Lexeme: >               Token: >
Line 61: Lexeme: 10              Token: CONSTANT_NUM
Line 61: Lexeme: )               Token: DELIM_C_PAREN
Line 61: Lexeme: {               Token: DELIM_O_BRACE
Line 62: Lexeme: out             Token: OUTPUT         
Line 62: Lexeme: (               Token: DELIM_O_PAREN
Line 62: Lexeme: "You've won for more than 10 times!" Token: CONSTANT_TEXT
Line 62: Lexeme: )               Token: DELIM_C_PAREN
Line 62: Lexeme: ;               Token: DELIM_SEMCOL
Line 63: Lexeme: }               Token: DELIM_C_BRACE
Line 63: Lexeme: other           Token: OTHER          
Line 63: Lexeme: {               Token: DELIM_O_BRACE
Line 64: Lexeme: out             Token: OUTPUT         
Line 64: Lexeme: (               Token: DELIM_O_PAREN
Line 64: Lexeme: "You have only won for 10 times!" Token: CONSTANT_TEXT
Line 64: Lexeme: )               Token: DELIM_C_PAREN
Line 64: Lexeme: ;               Token: DELIM_SEMCOL
Line 65: Lexeme: }               Token: DELIM_C_BRACE
Line 66: Lexeme: }               Token: DELIM_C_BRACE
Line 66: Lexeme: other           Token: OTHER          
Line 66: Lexeme: {               Token: DELIM_O_BRACE
Line 67: Lexeme: out             Token: OUTPUT         
Line 67: Lexeme: (               Token: DELIM_O_PAREN
Line 67: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 67: Lexeme: )               Token: DELIM_C_PAREN
Line 67: Lexeme: ;               Token: DELIM_SEMCOL
Line 68: Lexeme: }               Token: DELIM_C_BRACE
Line 70: Lexeme: //              Token: COMMENT
Line 71: Lexeme: rep             Token: REP            
Line 71: Lexeme: (               Token: DELIM_O_PAREN
Line 71: Lexeme: num             Token: NUM            
Line 71: Lexeme: a               Token: IDENTIFIER
Line 71: Lexeme: =               Token: =
Line 71: Lexeme: 0               Token: CONSTANT_NUM
Line 71: Lexeme: ;               Token: DELIM_SEMCOL
Line 71: Lexeme: a               Token: IDENTIFIER
Line 71: Lexeme: <               Token: <
Line 71: Lexeme: 5               Token: CONSTANT_NUM
Line 71: Lexeme: ;               Token: DELIM_SEMCOL
Line 71: Lexeme: a               Token: IDENTIFIER
Line 71: Lexeme: ++              Token: ++
Line 71: Lexeme: )               Token: DELIM_C_PAREN
Line 71: Lexeme: {               Token: DELIM_O_BRACE
Line 72: Lexeme: out             Token: OUTPUT         
Line 72: Lexeme: (               Token: DELIM_O_PAREN
Line 72: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 72: Lexeme: ,               Token: DELIM_COMMA
Line 72: Lexeme: a               Token: IDENTIFIER
Line 72: Lexeme: )               Token: DELIM_C_PAREN
Line 72: Lexeme: ;               Token: DELIM_SEMCOL
Line 73: Lexeme: }               Token: DELIM_C_BRACE
Line 75: Lexeme: rep             Token: REP            
Line 75: Lexeme: (               Token: DELIM_O_PAREN
Line 75: Lexeme: num             Token: NUM            
Line 75: Lexeme: i               Token: IDENTIFIER
Line 75: Lexeme: =               Token: =
Line 75: Lexeme: 0               Token: CONSTANT_NUM
Line 75: Lexeme: ;               Token: DELIM_SEMCOL
Line 75: Lexeme: i               Token: IDENTIFIER
Line 75: Lexeme: <               Token: <
Line 75: Lexeme: 5               Token: CONSTANT_NUM
Line 75: Lexeme: ;               Token: DELIM_SEMCOL
Line 75: Lexeme: i               Token: IDENTIFIER
Line 75: Lexeme: ++              Token: ++
Line 75: Lexeme: )               Token: DELIM_C_PAREN
Line 75: Lexeme: {               Token: DELIM_O_BRACE
Line 76: Lexeme: out             Token: OUTPUT         
Line 76: Lexeme: (               Token: DELIM_O_PAREN
Line 76: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 76: Lexeme: ,               Token: DELIM_COMMA
Line 76: Lexeme: i               Token: IDENTIFIER
Line 76: Lexeme: )               Token: DELIM_C_PAREN
Line 76: Lexeme: ;               Token: DELIM_SEMCOL
Line 77: Lexeme: rep             Token: REP            
Line 77: Lexeme: (               Token: DELIM_O_PAREN
Line 77: Lexeme: num             Token: NUM            
Line 77: Lexeme: j               Token: IDENTIFIER
Line 77: Lexeme: =               Token: =
Line 77: Lexeme: 0               Token: CONSTANT_NUM
Line 77: Lexeme: ;               Token: DELIM_SEMCOL
Line 77: Lexeme: j               Token: IDENTIFIER
Line 77: Lexeme: <               Token: <
Line 77: Lexeme: 5               Token: CONSTANT_NUM
Line 77: Lexeme: ;               Token: DELIM_SEMCOL
Line 77: Lexeme: j               Token: IDENTIFIER
Line 77: Lexeme: ++              Token: ++
Line 77: Lexeme: )               Token: DELIM_C_PAREN
Line 77: Lexeme: {               Token: DELIM_O_BRACE
Line 78: Lexeme: out             Token: OUTPUT         
Line 78: Lexeme: (               Token: DELIM_O_PAREN
Line 78: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 78: Lexeme: ,               Token: DELIM_COMMA
Line 78: Lexeme: j               Token: IDENTIFIER
Line 78: Lexeme: )               Token: DELIM_C_PAREN
Line 78: Lexeme: ;               Token: DELIM_SEMCOL
Line 79: Lexeme: }               Token: DELIM_C_BRACE
Line 80: Lexeme: }               Token: DELIM_C_BRACE
Line 82: Lexeme: num             Token: NUM            
Line 82: Lexeme: i               Token: IDENTIFIER
Line 82: Lexeme: =               Token: =
Line 82: Lexeme: 0               Token: CONSTANT_NUM
Line 82: Lexeme: ;               Token: DELIM_SEMCOL
Line 84: Lexeme: meanwhile       Token: MEANWHILE      
Line 84: Lexeme: (               Token: DELIM_O_PAREN
Line 84: Lexeme: i               Token: IDENTIFIER
Line 84: Lexeme: <               Token: <
Line 84: Lexeme: 5               Token: CONSTANT_NUM
Line 84: Lexeme: )               Token: DELIM_C_PAREN
Line 84: Lexeme: {               Token: DELIM_O_BRACE
Line 85: Lexeme: out             Token: OUTPUT         
Line 85: Lexeme: (               Token: DELIM_O_PAREN
Line 85: Lexeme: "string test"   Token: CONSTANT_TEXT
Line 85: Lexeme: )               Token: DELIM_C_PAREN
Line 85: Lexeme: ;               Token: DELIM_SEMCOL
Line 86: Lexeme: i               Token: IDENTIFIER
Line 86: Lexeme: ++              Token: ++
Line 86: Lexeme: ;               Token: DELIM_SEMCOL
Line 87: Lexeme: }               Token: DELIM_C_BRACE
Line 89: Lexeme: num             Token: NUM            
Line 89: Lexeme: i               Token: IDENTIFIER
Line 89: Lexeme: =               Token: =
Line 89: Lexeme: 0               Token: CONSTANT_NUM
Line 89: Lexeme: ;               Token: DELIM_SEMCOL
Line 90: Lexeme: num             Token: NUM            
Line 90: Lexeme: j               Token: IDENTIFIER
Line 90: Lexeme: ;               Token: DELIM_SEMCOL
Line 92: Lexeme: meanwhile       Token: MEANWHILE      
Line 92: Lexeme: (               Token: DELIM_O_PAREN
Line 92: Lexeme: i               Token: IDENTIFIER
Line 92: Lexeme: <               Token: <
Line 92: Lexeme: 5               Token: CONSTANT_NUM
Line 92: Lexeme: )               Token: DELIM_C_PAREN
Line 92: Lexeme: {               Token: DELIM_O_BRACE
Line 93: Lexeme: out             Token: OUTPUT         
Line 93: Lexeme: (               Token: DELIM_O_PAREN
Line 93: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 93: Lexeme: ,               Token: DELIM_COMMA
Line 93: Lexeme: identifier      Token: IDENTIFIER
Line 93: Lexeme: )               Token: DELIM_C_PAREN
Line 93: Lexeme: ;               Token: DELIM_SEMCOL
Line 94: Lexeme: j               Token: IDENTIFIER
Line 94: Lexeme: =               Token: =
Line 94: Lexeme: 0               Token: CONSTANT_NUM
Line 94: Lexeme: ;               Token: DELIM_SEMCOL
Line 95: Lexeme: meanwhile       Token: MEANWHILE      
Line 95: Lexeme: (               Token: DELIM_O_PAREN
Line 95: Lexeme: j               Token: IDENTIFIER
Line 95: Lexeme: <               Token: <
Line 95: Lexeme: 5               Token: CONSTANT_NUM
Line 95: Lexeme: )               Token: DELIM_C_PAREN
Line 95: Lexeme: {               Token: DELIM_O_BRACE
Line 96: Lexeme: out             Token: OUTPUT         
Line 96: Lexeme: (               Token: DELIM_O_PAREN
Line 96: Lexeme: "J: %d"         Token: CONSTANT_TXTFS
Line 96: Lexeme: ,               Token: DELIM_COMMA
Line 96: Lexeme: j               Token: IDENTIFIER
Line 96: Lexeme: )               Token: DELIM_C_PAREN
Line 96: Lexeme: ;               Token: DELIM_SEMCOL
Line 97: Lexeme: j               Token: IDENTIFIER
Line 97: Lexeme: ++              Token: ++
Line 97: Lexeme: ;               Token: DELIM_SEMCOL
Line 98: Lexeme: }               Token: DELIM_C_BRACE
Line 99: Lexeme: i               Token: IDENTIFIER
Line 99: Lexeme: ++              Token: ++
Line 99: Lexeme: ;               Token: DELIM_SEMCOL
Line 100: Lexeme: }               Token: DELIM_C_BRACE
Line 102: Lexeme: num             Token: NUM            
Line 102: Lexeme: i               Token: IDENTIFIER
Line 102: Lexeme: =               Token: =
Line 102: Lexeme: 0               Token: CONSTANT_NUM
Line 102: Lexeme: ;               Token: DELIM_SEMCOL
Line 104: Lexeme: do              Token: DO             
Line 104: Lexeme: {               Token: DELIM_O_BRACE
Line 105: Lexeme: out             Token: OUTPUT         
Line 105: Lexeme: (               Token: DELIM_O_PAREN
Line 105: Lexeme: "Test Output"   Token: CONSTANT_TEXT
Line 105: Lexeme: )               Token: DELIM_C_PAREN
Line 105: Lexeme: ;               Token: DELIM_SEMCOL
Line 106: Lexeme: i               Token: IDENTIFIER
Line 106: Lexeme: ++              Token: ++
Line 106: Lexeme: ;               Token: DELIM_SEMCOL
Line 107: Lexeme: }               Token: DELIM_C_BRACE
Line 107: Lexeme: meanwhile       Token: MEANWHILE      
Line 107: Lexeme: (               Token: DELIM_O_PAREN
Line 107: Lexeme: i               Token: IDENTIFIER
Line 107: Lexeme: <               Token: <
Line 107: Lexeme: 5               Token: CONSTANT_NUM
Line 107: Lexeme: )               Token: DELIM_C_PAREN
Line 107: Lexeme: ;               Token: DELIM_SEMCOL
Line 109: Lexeme: num             Token: NUM            
Line 109: Lexeme: i               Token: IDENTIFIER
Line 109: Lexeme: =               Token: =
Line 109: Lexeme: 0               Token: CONSTANT_NUM
Line 109: Lexeme: ;               Token: DELIM_SEMCOL
Line 110: Lexeme: num             Token: NUM            
Line 110: Lexeme: j               Token: IDENTIFIER
Line 110: Lexeme: =               Token: =
Line 110: Lexeme: 0               Token: CONSTANT_NUM
Line 110: Lexeme: ;               Token: DELIM_SEMCOL
Line 112: Lexeme: do              Token: DO             
Line 112: Lexeme: {               Token: DELIM_O_BRACE
Line 113: Lexeme: out             Token: OUTPUT         
Line 113: Lexeme: (               Token: DELIM_O_PAREN
Line 113: Lexeme: "This is an output statement" Token: CONSTANT_TEXT
Line 113: Lexeme: )               Token: DELIM_C_PAREN
Line 113: Lexeme: ;               Token: DELIM_SEMCOL
Line 114: Lexeme: j               Token: IDENTIFIER
Line 114: Lexeme: =               Token: =
Line 114: Lexeme: 0               Token: CONSTANT_NUM
Line 114: Lexeme: ;               Token: DELIM_SEMCOL
Line 115: Lexeme: do              Token: DO             
Line 115: Lexeme: {               Token: DELIM_O_BRACE
Line 116: Lexeme: out             Token: OUTPUT         
Line 116: Lexeme: (               Token: DELIM_O_PAREN
Line 116: Lexeme: "OUTPUT"        Token: CONSTANT_TEXT
Line 116: Lexeme: )               Token: DELIM_C_PAREN
Line 116: Lexeme: ;               Token: DELIM_SEMCOL
Line 117: Lexeme: j               Token: IDENTIFIER
Line 117: Lexeme: ++              Token: ++
Line 117: Lexeme: ;               Token: DELIM_SEMCOL
Line 118: Lexeme: }               Token: DELIM_C_BRACE
Line 118: Lexeme: meanwhile       Token: MEANWHILE      
Line 118: Lexeme: (               Token: DELIM_O_PAREN
Line 118: Lexeme: j               Token: IDENTIFIER
Line 118: Lexeme: <               Token: <
Line 118: Lexeme: 5               Token: CONSTANT_NUM
Line 118: Lexeme: )               Token: DELIM_C_PAREN
Line 118: Lexeme: ;               Token: DELIM_SEMCOL
Line 119: Lexeme: i               Token: IDENTIFIER
Line 119: Lexeme: ++              Token: ++
Line 119: Lexeme: ;               Token: DELIM_SEMCOL
Line 120: Lexeme: }               Token: DELIM_C_BRACE
Line 120: Lexeme: meanwhile       Token: MEANWHILE      
Line 120: Lexeme: (               Token: DELIM_O_PAREN
Line 120: Lexeme: i               Token: IDENTIFIER
Line 120: Lexeme: <               Token: <
Line 120: Lexeme: 5               Token: CONSTANT_NUM
Line 120: Lexeme: )               Token: DELIM_C_PAREN
Line 120: Lexeme: ;               Token: DELIM_SEMCOL
Line 123: Lexeme: rep             Token: REP            
Line 123: Lexeme: (               Token: DELIM_O_PAREN
Line 123: Lexeme: num             Token: NUM            
Line 123: Lexeme: a               Token: IDENTIFIER
Line 123: Lexeme: =               Token: =
Line 123: Lexeme: 1               Token: CONSTANT_NUM
Line 123: Lexeme: ;               Token: DELIM_SEMCOL
Line 123: Lexeme: a               Token: IDENTIFIER
Line 123: Lexeme: >               Token: >
Line 123: Lexeme: 1               Token: CONSTANT_NUM
Line 123: Lexeme: ;               Token: DELIM_SEMCOL
Line 123: Lexeme: a               Token: IDENTIFIER
Line 123: Lexeme: ++              Token: ++
Line 123: Lexeme: )               Token: DELIM_C_PAREN
Line 123: Lexeme: {               Token: DELIM_O_BRACE
Line 124: Lexeme: meanwhile       Token: MEANWHILE      
Line 124: Lexeme: (               Token: DELIM_O_PAREN
Line 124: Lexeme: i               Token: IDENTIFIER
Line 124: Lexeme: >               Token: >
Line 124: Lexeme: 10              Token: CONSTANT_NUM
Line 124: Lexeme: )               Token: DELIM_C_PAREN
Line 124: Lexeme: {               Token: DELIM_O_BRACE
Line 125: Lexeme: do              Token: DO             
Line 125: Lexeme: {               Token: DELIM_O_BRACE
Line 126: Lexeme: test            Token: IDENTIFIER
Line 126: Lexeme: =               Token: =
Line 126: Lexeme: test            Token: IDENTIFIER
Line 126: Lexeme: ;               Token: DELIM_SEMCOL
Line 127: Lexeme: }               Token: DELIM_C_BRACE
Line 127: Lexeme: meanwhile       Token: MEANWHILE      
Line 127: Lexeme: (               Token: DELIM_O_PAREN
Line 127: Lexeme: i               Token: IDENTIFIER
Line 127: Lexeme: <               Token: <
Line 127: Lexeme: 10              Token: CONSTANT_NUM
Line 127: Lexeme: )               Token: DELIM_C_PAREN
Line 127: Lexeme: ;               Token: DELIM_SEMCOL
Line 128: Lexeme: }               Token: DELIM_C_BRACE
Line 129: Lexeme: }               Token: DELIM_C_BRACE
Line 131: Lexeme: //              Token: COMMENT
Line 132: Lexeme: num             Token: NUM            
Line 132: Lexeme: count           Token: IDENTIFIER
Line 132: Lexeme: ;               Token: DELIM_SEMCOL
Line 133: Lexeme: drift           Token: DRIFT          
Line 133: Lexeme: decimal         Token: IDENTIFIER
Line 133: Lexeme: =               Token: =
Line 133: Lexeme: 89.70           Token: CONSTANT_DRIFT
Line 133: Lexeme: ;               Token: DELIM_SEMCOL
Line 134: Lexeme: num             Token: NUM            
Line 134: Lexeme: count           Token: IDENTIFIER
Line 134: Lexeme: =               Token: =
Line 134: Lexeme: number          Token: IDENTIFIER
Line 134: Lexeme: ;               Token: DELIM_SEMCOL
Line 135: Lexeme: drift           Token: DRIFT          
Line 135: Lexeme: math_grade      Token: IDENTIFIER
Line 135: Lexeme: ,               Token: DELIM_COMMA
Line 135: Lexeme: science_grade   Token: IDENTIFIER
Line 135: Lexeme: ,               Token: DELIM_COMMA
Line 135: Lexeme: english_grade   Token: IDENTIFIER
Line 135: Lexeme: ;               Token: DELIM_SEMCOL
Line 136: Lexeme: drift           Token: DRIFT          
Line 136: Lexeme: math_grade      Token: IDENTIFIER
Line 136: Lexeme: =               Token: =
Line 136: Lexeme: 97.5            Token: CONSTANT_DRIFT
Line 136: Lexeme: ,               Token: DELIM_COMMA
Line 136: Lexeme: science_grade   Token: IDENTIFIER
Line 136: Lexeme: =               Token: =
Line 136: Lexeme: 95.5            Token: CONSTANT_DRIFT
Line 136: Lexeme: ,               Token: DELIM_COMMA
Line 136: Lexeme: english_grade   Token: IDENTIFIER
Line 136: Lexeme: =               Token: =
Line 136: Lexeme: math_grade      Token: IDENTIFIER
Line 136: Lexeme: ;               Token: DELIM_SEMCOL
Line 138: Lexeme: u               Token: IDENTIFIER
Line 138: Lexeme: ++              Token: ++
Line 138: Lexeme: ;               Token: DELIM_SEMCOL
Line 139: Lexeme: ++              Token: ++
Line 139: Lexeme: u               Token: IDENTIFIER
Line 139: Lexeme: ;               Token: DELIM_SEMCOL
Line 141: Lexeme: if              Token: IF             
Line 141: Lexeme: (               Token: DELIM_O_PAREN
Line 141: Lexeme: win             Token: IDENTIFIER
Line 141: Lexeme: ==              Token: ==
Line 141: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 141: Lexeme: )               Token: DELIM_C_PAREN
Line 141: Lexeme: {               Token: DELIM_O_BRACE
Line 142: Lexeme: out             Token: OUTPUT         
Line 142: Lexeme: (               Token: DELIM_O_PAREN
Line 142: Lexeme: "You won!"      Token: CONSTANT_TEXT
Line 142: Lexeme: )               Token: DELIM_C_PAREN
Line 142: Lexeme: ;               Token: DELIM_SEMCOL
Line 143: Lexeme: }               Token: DELIM_C_BRACE
Line 143: Lexeme: ex              Token: EX             
Line 143: Lexeme: (               Token: DELIM_O_PAREN
Line 143: Lexeme: win             Token: IDENTIFIER
Line 143: Lexeme: ==              Token: ==
Line 143: Lexeme: cap             Token: CONSTANT_LEGIT
Line 143: Lexeme: )               Token: DELIM_C_PAREN
Line 143: Lexeme: {               Token: DELIM_O_BRACE
Line 144: Lexeme: out             Token: OUTPUT         
Line 144: Lexeme: (               Token: DELIM_O_PAREN
Line 144: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 144: Lexeme: )               Token: DELIM_C_PAREN
Line 144: Lexeme: ;               Token: DELIM_SEMCOL
Line 145: Lexeme: }               Token: DELIM_C_BRACE
Line 147: Lexeme: if              Token: IF             
Line 147: Lexeme: (               Token: DELIM_O_PAREN
Line 147: Lexeme: test            Token: IDENTIFIER
Line 147: Lexeme: )               Token: DELIM_C_PAREN
Line 147: Lexeme: {               Token: DELIM_O_BRACE
Line 148: Lexeme: test            Token: IDENTIFIER
Line 148: Lexeme: =               Token: =
Line 148: Lexeme: test            Token: IDENTIFIER
Line 148: Lexeme: ;               Token: DELIM_SEMCOL
Line 149: Lexeme: }               Token: DELIM_C_BRACE
Line 149: Lexeme: ex              Token: EX             
Line 149: Lexeme: (               Token: DELIM_O_PAREN
Line 149: Lexeme: test            Token: IDENTIFIER
Line 149: Lexeme: )               Token: DELIM_C_PAREN
Line 149: Lexeme: {               Token: DELIM_O_BRACE
Line 150: Lexeme: test            Token: IDENTIFIER
Line 150: Lexeme: =               Token: =
Line 150: Lexeme: test            Token: IDENTIFIER
Line 150: Lexeme: ;               Token: DELIM_SEMCOL
Line 151: Lexeme: }               Token: DELIM_C_BRACE
Line 151: Lexeme: ex              Token: EX             
Line 151: Lexeme: (               Token: DELIM_O_PAREN
Line 151: Lexeme: test            Token: IDENTIFIER
Line 151: Lexeme: )               Token: DELIM_C_PAREN
Line 151: Lexeme: {               Token: DELIM_O_BRACE
Line 152: Lexeme: test            Token: IDENTIFIER
Line 152: Lexeme: =               Token: =
Line 152: Lexeme: test            Token: IDENTIFIER
Line 152: Lexeme: ;               Token: DELIM_SEMCOL
Line 153: Lexeme: }               Token: DELIM_C_BRACE
Line 153: Lexeme: other           Token: OTHER          
Line 153: Lexeme: {               Token: DELIM_O_BRACE
Line 154: Lexeme: if              Token: IF             
Line 154: Lexeme: (               Token: DELIM_O_PAREN
Line 154: Lexeme: test            Token: IDENTIFIER
Line 154: Lexeme: )               Token: DELIM_C_PAREN
Line 154: Lexeme: {               Token: DELIM_O_BRACE
Line 155: Lexeme: hello           Token: IDENTIFIER
Line 155: Lexeme: ;               Token: DELIM_SEMCOL
Line 156: Lexeme: }               Token: DELIM_C_BRACE
Line 156: Lexeme: other           Token: OTHER          
Line 156: Lexeme: {               Token: DELIM_O_BRACE
Line 157: Lexeme: hello           Token: IDENTIFIER
Line 157: Lexeme: ;               Token: DELIM_SEMCOL
Line 158: Lexeme: }               Token: DELIM_C_BRACE
Line 159: Lexeme: }               Token: DELIM_C_BRACE
Line 161: Lexeme: num             Token: NUM            
Line 161: Lexeme: i               Token: IDENTIFIER
Line 161: Lexeme: ,               Token: DELIM_COMMA
Line 161: Lexeme: j               Token: IDENTIFIER
Line 161: Lexeme: =               Token: =
Line 161: Lexeme: 0               Token: CONSTANT_NUM
Line 161: Lexeme: ,               Token: DELIM_COMMA
Line 161: Lexeme: k               Token: IDENTIFIER
Line 161: Lexeme: =               Token: =
Line 161: Lexeme: 0               Token: CONSTANT_NUM
Line 161: Lexeme: ;               Token: DELIM_SEMCOL
Line 163: Lexeme: !               Token: !
Line 163: Lexeme: (               Token: DELIM_O_PAREN
Line 163: Lexeme: x               Token: IDENTIFIER
Line 163: Lexeme: )               Token: DELIM_C_PAREN
Line 163: Lexeme: ;               Token: DELIM_SEMCOL
Line 164: Lexeme: -               Token: -
Line 164: Lexeme: (               Token: DELIM_O_PAREN
Line 164: Lexeme: x               Token: IDENTIFIER
Line 164: Lexeme: +               Token: +
Line 164: Lexeme: y               Token: IDENTIFIER
Line 164: Lexeme: )               Token: DELIM_C_PAREN
Line 164: Lexeme: ;               Token: DELIM_SEMCOL
Line 166: Lexeme: }               Token: DELIM_C_BRACE
