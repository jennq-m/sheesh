Lexical Analysis of syntax_file.shs:

Line 1: Lexeme: toptier         Token: TOPTIER
Line 1: Lexeme: (               Token: DELIM_O_PAREN
Line 1: Lexeme: )               Token: DELIM_C_PAREN
Line 1: Lexeme: {               Token: DELIM_O_BRACE
Line 2: Lexeme: //              Token: COMMENT
Line 3: Lexeme: input           Token: INPUT          
Line 3: Lexeme: (               Token: DELIM_O_PAREN
Line 3: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 3: Lexeme: ,               Token: DELIM_COMMA
Line 3: Lexeme: &               Token: &
Line 3: Lexeme: age             Token: IDENTIFIER
Line 3: Lexeme: )               Token: DELIM_C_PAREN
Line 3: Lexeme: ;               Token: DELIM_SEMCOL
Line 4: Lexeme: input           Token: INPUT          
Line 4: Lexeme: (               Token: DELIM_O_PAREN
Line 4: Lexeme: "%f"            Token: CONSTANT_TXTFS
Line 4: Lexeme: ,               Token: DELIM_COMMA
Line 4: Lexeme: &               Token: &
Line 4: Lexeme: float_a         Token: IDENTIFIER
Line 4: Lexeme: )               Token: DELIM_C_PAREN
Line 4: Lexeme: ;               Token: DELIM_SEMCOL
Line 5: Lexeme: input           Token: INPUT          
Line 5: Lexeme: (               Token: DELIM_O_PAREN
Line 5: Lexeme: "%s"            Token: CONSTANT_TXTFS
Line 5: Lexeme: ,               Token: DELIM_COMMA
Line 5: Lexeme: &               Token: &
Line 5: Lexeme: vibe_a          Token: IDENTIFIER
Line 5: Lexeme: )               Token: DELIM_C_PAREN
Line 5: Lexeme: ;               Token: DELIM_SEMCOL
Line 6: Lexeme: input           Token: INPUT          
Line 6: Lexeme: (               Token: DELIM_O_PAREN
Line 6: Lexeme: "%c"            Token: CONSTANT_TXTFS
Line 6: Lexeme: ,               Token: DELIM_COMMA
Line 6: Lexeme: &               Token: &
Line 6: Lexeme: letter          Token: IDENTIFIER
Line 6: Lexeme: )               Token: DELIM_C_PAREN
Line 6: Lexeme: ;               Token: DELIM_SEMCOL
Line 8: Lexeme: //              Token: COMMENT
Line 9: Lexeme: out             Token: OUT            
Line 9: Lexeme: (               Token: DELIM_O_PAREN
Line 9: Lexeme: "String"        Token: CONSTANT_TEXT
Line 9: Lexeme: )               Token: DELIM_C_PAREN
Line 9: Lexeme: ;               Token: DELIM_SEMCOL
Line 10: Lexeme: out             Token: OUT            
Line 10: Lexeme: (               Token: DELIM_O_PAREN
Line 10: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 10: Lexeme: ,               Token: DELIM_COMMA
Line 10: Lexeme: identifier      Token: IDENTIFIER
Line 10: Lexeme: )               Token: DELIM_C_PAREN
Line 10: Lexeme: ;               Token: DELIM_SEMCOL
Line 11: Lexeme: out             Token: OUT            
Line 11: Lexeme: (               Token: DELIM_O_PAREN
Line 11: Lexeme: "Num: %d"       Token: CONSTANT_TXTFS
Line 11: Lexeme: ,               Token: DELIM_COMMA
Line 11: Lexeme: integer         Token: IDENTIFIER
Line 11: Lexeme: )               Token: DELIM_C_PAREN
Line 11: Lexeme: ;               Token: DELIM_SEMCOL
Line 13: Lexeme: out             Token: OUT            
Line 13: Lexeme: (               Token: DELIM_O_PAREN
Line 13: Lexeme: "Age: %d"       Token: CONSTANT_TXTFS
Line 13: Lexeme: ,               Token: DELIM_COMMA
Line 13: Lexeme: age             Token: IDENTIFIER
Line 13: Lexeme: )               Token: DELIM_C_PAREN
Line 13: Lexeme: ;               Token: DELIM_SEMCOL
Line 14: Lexeme: out             Token: OUT            
Line 14: Lexeme: (               Token: DELIM_O_PAREN
Line 14: Lexeme: "Float: %f"     Token: CONSTANT_TXTFS
Line 14: Lexeme: ,               Token: DELIM_COMMA
Line 14: Lexeme: float_a         Token: IDENTIFIER
Line 14: Lexeme: )               Token: DELIM_C_PAREN
Line 14: Lexeme: ;               Token: DELIM_SEMCOL
Line 15: Lexeme: out             Token: OUT            
Line 15: Lexeme: (               Token: DELIM_O_PAREN
Line 15: Lexeme: "Text: %s"      Token: CONSTANT_TXTFS
Line 15: Lexeme: ,               Token: DELIM_COMMA
Line 15: Lexeme: text_a          Token: IDENTIFIER
Line 15: Lexeme: )               Token: DELIM_C_PAREN
Line 15: Lexeme: ;               Token: DELIM_SEMCOL
Line 16: Lexeme: out             Token: OUT            
Line 16: Lexeme: (               Token: DELIM_O_PAREN
Line 16: Lexeme: "Letter: %c"    Token: CONSTANT_TXTFS
Line 16: Lexeme: ,               Token: DELIM_COMMA
Line 16: Lexeme: letter          Token: IDENTIFIER
Line 16: Lexeme: )               Token: DELIM_C_PAREN
Line 16: Lexeme: ;               Token: DELIM_SEMCOL
Line 18: Lexeme: //              Token: COMMENT
Line 19: Lexeme: decimal         Token: IDENTIFIER
Line 19: Lexeme: =               Token: =
Line 19: Lexeme: 89.70           Token: CONSTANT_DRIFT
Line 19: Lexeme: ;               Token: DELIM_SEMCOL
Line 20: Lexeme: count           Token: IDENTIFIER
Line 20: Lexeme: +=              Token: +=
Line 20: Lexeme: test_var        Token: IDENTIFIER
Line 20: Lexeme: ;               Token: DELIM_SEMCOL
Line 21: Lexeme: count           Token: IDENTIFIER
Line 21: Lexeme: *=              Token: *=
Line 21: Lexeme: test_var        Token: IDENTIFIER
Line 21: Lexeme: ;               Token: DELIM_SEMCOL
Line 22: Lexeme: count           Token: IDENTIFIER
Line 22: Lexeme: -=              Token: -=
Line 22: Lexeme: test_var        Token: IDENTIFIER
Line 22: Lexeme: ;               Token: DELIM_SEMCOL
Line 23: Lexeme: count           Token: IDENTIFIER
Line 23: Lexeme: |=              Token: |=
Line 23: Lexeme: test_var        Token: IDENTIFIER
Line 23: Lexeme: ;               Token: DELIM_SEMCOL
Line 24: Lexeme: count           Token: IDENTIFIER
Line 24: Lexeme: %=              Token: %=
Line 24: Lexeme: test_var        Token: IDENTIFIER
Line 24: Lexeme: ;               Token: DELIM_SEMCOL
Line 25: Lexeme: average         Token: IDENTIFIER
Line 25: Lexeme: =               Token: =
Line 25: Lexeme: (               Token: DELIM_O_PAREN
Line 25: Lexeme: math_grade      Token: IDENTIFIER
Line 25: Lexeme: +               Token: +
Line 25: Lexeme: science_grade   Token: IDENTIFIER
Line 25: Lexeme: +               Token: +
Line 25: Lexeme: english_grade   Token: IDENTIFIER
Line 25: Lexeme: )               Token: DELIM_C_PAREN
Line 25: Lexeme: /               Token: /
Line 25: Lexeme: 3               Token: CONSTANT_NUM
Line 25: Lexeme: ;               Token: DELIM_SEMCOL
Line 27: Lexeme: a               Token: IDENTIFIER
Line 27: Lexeme: =               Token: =
Line 27: Lexeme: b               Token: IDENTIFIER
Line 27: Lexeme: ;               Token: DELIM_SEMCOL
Line 28: Lexeme: a               Token: IDENTIFIER
Line 28: Lexeme: =               Token: =
Line 28: Lexeme: 8               Token: CONSTANT_NUM
Line 28: Lexeme: ;               Token: DELIM_SEMCOL
Line 29: Lexeme: a               Token: IDENTIFIER
Line 29: Lexeme: =               Token: =
Line 29: Lexeme: (               Token: DELIM_O_PAREN
Line 29: Lexeme: 8               Token: CONSTANT_NUM
Line 29: Lexeme: +               Token: +
Line 29: Lexeme: n               Token: IDENTIFIER
Line 29: Lexeme: *               Token: *
Line 29: Lexeme: (               Token: DELIM_O_PAREN
Line 29: Lexeme: c               Token: IDENTIFIER
Line 29: Lexeme: *               Token: *
Line 29: Lexeme: f               Token: IDENTIFIER
Line 29: Lexeme: )               Token: DELIM_C_PAREN
Line 29: Lexeme: ==              Token: ==
Line 29: Lexeme: 5               Token: CONSTANT_NUM
Line 29: Lexeme: )               Token: DELIM_C_PAREN
Line 29: Lexeme: ;               Token: DELIM_SEMCOL
Line 31: Lexeme: //              Token: COMMENT
Line 32: Lexeme: if              Token: IF             
Line 32: Lexeme: (               Token: DELIM_O_PAREN
Line 32: Lexeme: average         Token: IDENTIFIER
Line 32: Lexeme: >=              Token: >=
Line 32: Lexeme: 97.0            Token: CONSTANT_DRIFT
Line 32: Lexeme: )               Token: DELIM_C_PAREN
Line 32: Lexeme: {               Token: DELIM_O_BRACE
Line 33: Lexeme: out             Token: OUT            
Line 33: Lexeme: (               Token: DELIM_O_PAREN
Line 33: Lexeme: "GWA is very high!" Token: CONSTANT_TEXT
Line 33: Lexeme: )               Token: DELIM_C_PAREN
Line 33: Lexeme: ;               Token: DELIM_SEMCOL
Line 34: Lexeme: }               Token: DELIM_C_BRACE
Line 36: Lexeme: if              Token: IF             
Line 36: Lexeme: (               Token: DELIM_O_PAREN
Line 36: Lexeme: average         Token: IDENTIFIER
Line 36: Lexeme: >=              Token: >=
Line 36: Lexeme: 1               Token: CONSTANT_NUM
Line 36: Lexeme: )               Token: DELIM_C_PAREN
Line 36: Lexeme: {               Token: DELIM_O_BRACE
Line 37: Lexeme: if              Token: IF             
Line 37: Lexeme: (               Token: DELIM_O_PAREN
Line 37: Lexeme: average         Token: IDENTIFIER
Line 37: Lexeme: <=              Token: <=
Line 37: Lexeme: 5               Token: CONSTANT_NUM
Line 37: Lexeme: )               Token: DELIM_C_PAREN
Line 37: Lexeme: {               Token: DELIM_O_BRACE
Line 38: Lexeme: out             Token: OUT            
Line 38: Lexeme: (               Token: DELIM_O_PAREN
Line 38: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 38: Lexeme: ,               Token: DELIM_COMMA
Line 38: Lexeme: average         Token: IDENTIFIER
Line 38: Lexeme: )               Token: DELIM_C_PAREN
Line 38: Lexeme: ;               Token: DELIM_SEMCOL
Line 39: Lexeme: }               Token: DELIM_C_BRACE
Line 40: Lexeme: }               Token: DELIM_C_BRACE
Line 42: Lexeme: if              Token: IF             
Line 42: Lexeme: (               Token: DELIM_O_PAREN
Line 42: Lexeme: win             Token: IDENTIFIER
Line 42: Lexeme: ==              Token: ==
Line 42: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 42: Lexeme: )               Token: DELIM_C_PAREN
Line 42: Lexeme: {               Token: DELIM_O_BRACE
Line 43: Lexeme: out             Token: OUT            
Line 43: Lexeme: (               Token: DELIM_O_PAREN
Line 43: Lexeme: "You won!"      Token: CONSTANT_TEXT
Line 43: Lexeme: )               Token: DELIM_C_PAREN
Line 43: Lexeme: ;               Token: DELIM_SEMCOL
Line 44: Lexeme: }               Token: DELIM_C_BRACE
Line 44: Lexeme: other           Token: OTHER          
Line 44: Lexeme: {               Token: DELIM_O_BRACE
Line 45: Lexeme: out             Token: OUT            
Line 45: Lexeme: (               Token: DELIM_O_PAREN
Line 45: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 45: Lexeme: )               Token: DELIM_C_PAREN
Line 45: Lexeme: ;               Token: DELIM_SEMCOL
Line 46: Lexeme: }               Token: DELIM_C_BRACE
Line 48: Lexeme: if              Token: IF             
Line 48: Lexeme: (               Token: DELIM_O_PAREN
Line 48: Lexeme: win             Token: IDENTIFIER
Line 48: Lexeme: ==              Token: ==
Line 48: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 48: Lexeme: )               Token: DELIM_C_PAREN
Line 48: Lexeme: {               Token: DELIM_O_BRACE
Line 49: Lexeme: if              Token: IF             
Line 49: Lexeme: (               Token: DELIM_O_PAREN
Line 49: Lexeme: num_win         Token: IDENTIFIER
Line 49: Lexeme: >               Token: >
Line 49: Lexeme: 10              Token: CONSTANT_NUM
Line 49: Lexeme: )               Token: DELIM_C_PAREN
Line 49: Lexeme: {               Token: DELIM_O_BRACE
Line 50: Lexeme: out             Token: OUT            
Line 50: Lexeme: (               Token: DELIM_O_PAREN
Line 50: Lexeme: "You've won for more than 10 times!" Token: CONSTANT_TEXT
Line 50: Lexeme: )               Token: DELIM_C_PAREN
Line 50: Lexeme: ;               Token: DELIM_SEMCOL
Line 51: Lexeme: }               Token: DELIM_C_BRACE
Line 51: Lexeme: other           Token: OTHER          
Line 51: Lexeme: {               Token: DELIM_O_BRACE
Line 52: Lexeme: out             Token: OUT            
Line 52: Lexeme: (               Token: DELIM_O_PAREN
Line 52: Lexeme: "You have only won for 10 times!" Token: CONSTANT_TEXT
Line 52: Lexeme: )               Token: DELIM_C_PAREN
Line 52: Lexeme: ;               Token: DELIM_SEMCOL
Line 53: Lexeme: }               Token: DELIM_C_BRACE
Line 54: Lexeme: }               Token: DELIM_C_BRACE
Line 54: Lexeme: other           Token: OTHER          
Line 54: Lexeme: {               Token: DELIM_O_BRACE
Line 55: Lexeme: out             Token: OUT            
Line 55: Lexeme: (               Token: DELIM_O_PAREN
Line 55: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 55: Lexeme: )               Token: DELIM_C_PAREN
Line 55: Lexeme: ;               Token: DELIM_SEMCOL
Line 56: Lexeme: }               Token: DELIM_C_BRACE
Line 58: Lexeme: //              Token: COMMENT
Line 59: Lexeme: rep             Token: REP            
Line 59: Lexeme: (               Token: DELIM_O_PAREN
Line 59: Lexeme: num             Token: NUM            
Line 59: Lexeme: a               Token: IDENTIFIER
Line 59: Lexeme: =               Token: =
Line 59: Lexeme: 0               Token: CONSTANT_NUM
Line 59: Lexeme: ;               Token: DELIM_SEMCOL
Line 59: Lexeme: a               Token: IDENTIFIER
Line 59: Lexeme: <               Token: <
Line 59: Lexeme: 5               Token: CONSTANT_NUM
Line 59: Lexeme: ;               Token: DELIM_SEMCOL
Line 59: Lexeme: a               Token: IDENTIFIER
Line 59: Lexeme: ++              Token: ++
Line 59: Lexeme: )               Token: DELIM_C_PAREN
Line 59: Lexeme: {               Token: DELIM_O_BRACE
Line 60: Lexeme: out             Token: OUT            
Line 60: Lexeme: (               Token: DELIM_O_PAREN
Line 60: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 60: Lexeme: ,               Token: DELIM_COMMA
Line 60: Lexeme: a               Token: IDENTIFIER
Line 60: Lexeme: )               Token: DELIM_C_PAREN
Line 60: Lexeme: ;               Token: DELIM_SEMCOL
Line 61: Lexeme: }               Token: DELIM_C_BRACE
Line 63: Lexeme: rep             Token: REP            
Line 63: Lexeme: (               Token: DELIM_O_PAREN
Line 63: Lexeme: num             Token: NUM            
Line 63: Lexeme: i               Token: IDENTIFIER
Line 63: Lexeme: =               Token: =
Line 63: Lexeme: 0               Token: CONSTANT_NUM
Line 63: Lexeme: ;               Token: DELIM_SEMCOL
Line 63: Lexeme: i               Token: IDENTIFIER
Line 63: Lexeme: <               Token: <
Line 63: Lexeme: 5               Token: CONSTANT_NUM
Line 63: Lexeme: ;               Token: DELIM_SEMCOL
Line 63: Lexeme: i               Token: IDENTIFIER
Line 63: Lexeme: ++              Token: ++
Line 63: Lexeme: )               Token: DELIM_C_PAREN
Line 63: Lexeme: {               Token: DELIM_O_BRACE
Line 64: Lexeme: out             Token: OUT            
Line 64: Lexeme: (               Token: DELIM_O_PAREN
Line 64: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 64: Lexeme: ,               Token: DELIM_COMMA
Line 64: Lexeme: i               Token: IDENTIFIER
Line 64: Lexeme: )               Token: DELIM_C_PAREN
Line 64: Lexeme: ;               Token: DELIM_SEMCOL
Line 65: Lexeme: rep             Token: REP            
Line 65: Lexeme: (               Token: DELIM_O_PAREN
Line 65: Lexeme: num             Token: NUM            
Line 65: Lexeme: j               Token: IDENTIFIER
Line 65: Lexeme: =               Token: =
Line 65: Lexeme: 0               Token: CONSTANT_NUM
Line 65: Lexeme: ;               Token: DELIM_SEMCOL
Line 65: Lexeme: j               Token: IDENTIFIER
Line 65: Lexeme: <               Token: <
Line 65: Lexeme: 5               Token: CONSTANT_NUM
Line 65: Lexeme: ;               Token: DELIM_SEMCOL
Line 65: Lexeme: j               Token: IDENTIFIER
Line 65: Lexeme: ++              Token: ++
Line 65: Lexeme: )               Token: DELIM_C_PAREN
Line 65: Lexeme: {               Token: DELIM_O_BRACE
Line 66: Lexeme: out             Token: OUT            
Line 66: Lexeme: (               Token: DELIM_O_PAREN
Line 66: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 66: Lexeme: ,               Token: DELIM_COMMA
Line 66: Lexeme: j               Token: IDENTIFIER
Line 66: Lexeme: )               Token: DELIM_C_PAREN
Line 66: Lexeme: ;               Token: DELIM_SEMCOL
Line 67: Lexeme: }               Token: DELIM_C_BRACE
Line 68: Lexeme: }               Token: DELIM_C_BRACE
Line 70: Lexeme: num             Token: NUM            
Line 70: Lexeme: i               Token: IDENTIFIER
Line 70: Lexeme: =               Token: =
Line 70: Lexeme: 0               Token: CONSTANT_NUM
Line 70: Lexeme: ;               Token: DELIM_SEMCOL
Line 72: Lexeme: meanwhile       Token: MEANWHILE      
Line 72: Lexeme: (               Token: DELIM_O_PAREN
Line 72: Lexeme: i               Token: IDENTIFIER
Line 72: Lexeme: <               Token: <
Line 72: Lexeme: 5               Token: CONSTANT_NUM
Line 72: Lexeme: )               Token: DELIM_C_PAREN
Line 72: Lexeme: {               Token: DELIM_O_BRACE
Line 73: Lexeme: out             Token: OUT            
Line 73: Lexeme: (               Token: DELIM_O_PAREN
Line 73: Lexeme: "string test"   Token: CONSTANT_TEXT
Line 73: Lexeme: )               Token: DELIM_C_PAREN
Line 73: Lexeme: ;               Token: DELIM_SEMCOL
Line 74: Lexeme: i               Token: IDENTIFIER
Line 74: Lexeme: ++              Token: ++
Line 74: Lexeme: ;               Token: DELIM_SEMCOL
Line 75: Lexeme: }               Token: DELIM_C_BRACE
Line 77: Lexeme: num             Token: NUM            
Line 77: Lexeme: i               Token: IDENTIFIER
Line 77: Lexeme: =               Token: =
Line 77: Lexeme: 0               Token: CONSTANT_NUM
Line 77: Lexeme: ;               Token: DELIM_SEMCOL
Line 78: Lexeme: num             Token: NUM            
Line 78: Lexeme: j               Token: IDENTIFIER
Line 78: Lexeme: ;               Token: DELIM_SEMCOL
Line 80: Lexeme: meanwhile       Token: MEANWHILE      
Line 80: Lexeme: (               Token: DELIM_O_PAREN
Line 80: Lexeme: i               Token: IDENTIFIER
Line 80: Lexeme: <               Token: <
Line 80: Lexeme: 5               Token: CONSTANT_NUM
Line 80: Lexeme: )               Token: DELIM_C_PAREN
Line 80: Lexeme: {               Token: DELIM_O_BRACE
Line 81: Lexeme: out             Token: OUT            
Line 81: Lexeme: (               Token: DELIM_O_PAREN
Line 81: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 81: Lexeme: ,               Token: DELIM_COMMA
Line 81: Lexeme: identifier      Token: IDENTIFIER
Line 81: Lexeme: )               Token: DELIM_C_PAREN
Line 81: Lexeme: ;               Token: DELIM_SEMCOL
Line 82: Lexeme: j               Token: IDENTIFIER
Line 82: Lexeme: =               Token: =
Line 82: Lexeme: 0               Token: CONSTANT_NUM
Line 82: Lexeme: ;               Token: DELIM_SEMCOL
Line 83: Lexeme: meanwhile       Token: MEANWHILE      
Line 83: Lexeme: (               Token: DELIM_O_PAREN
Line 83: Lexeme: j               Token: IDENTIFIER
Line 83: Lexeme: <               Token: <
Line 83: Lexeme: 5               Token: CONSTANT_NUM
Line 83: Lexeme: )               Token: DELIM_C_PAREN
Line 83: Lexeme: {               Token: DELIM_O_BRACE
Line 84: Lexeme: out             Token: OUT            
Line 84: Lexeme: (               Token: DELIM_O_PAREN
Line 84: Lexeme: "J: %d"         Token: CONSTANT_TXTFS
Line 84: Lexeme: ,               Token: DELIM_COMMA
Line 84: Lexeme: j               Token: IDENTIFIER
Line 84: Lexeme: )               Token: DELIM_C_PAREN
Line 84: Lexeme: ;               Token: DELIM_SEMCOL
Line 85: Lexeme: j               Token: IDENTIFIER
Line 85: Lexeme: ++              Token: ++
Line 85: Lexeme: ;               Token: DELIM_SEMCOL
Line 86: Lexeme: }               Token: DELIM_C_BRACE
Line 87: Lexeme: i               Token: IDENTIFIER
Line 87: Lexeme: ++              Token: ++
Line 87: Lexeme: ;               Token: DELIM_SEMCOL
Line 88: Lexeme: }               Token: DELIM_C_BRACE
Line 90: Lexeme: num             Token: NUM            
Line 90: Lexeme: i               Token: IDENTIFIER
Line 90: Lexeme: =               Token: =
Line 90: Lexeme: 0               Token: CONSTANT_NUM
Line 90: Lexeme: ;               Token: DELIM_SEMCOL
Line 92: Lexeme: do              Token: DO             
Line 92: Lexeme: {               Token: DELIM_O_BRACE
Line 93: Lexeme: out             Token: OUT            
Line 93: Lexeme: (               Token: DELIM_O_PAREN
Line 93: Lexeme: "Test Output"   Token: CONSTANT_TEXT
Line 93: Lexeme: )               Token: DELIM_C_PAREN
Line 93: Lexeme: ;               Token: DELIM_SEMCOL
Line 94: Lexeme: i               Token: IDENTIFIER
Line 94: Lexeme: ++              Token: ++
Line 94: Lexeme: ;               Token: DELIM_SEMCOL
Line 95: Lexeme: }               Token: DELIM_C_BRACE
Line 95: Lexeme: meanwhile       Token: MEANWHILE      
Line 95: Lexeme: (               Token: DELIM_O_PAREN
Line 95: Lexeme: i               Token: IDENTIFIER
Line 95: Lexeme: <               Token: <
Line 95: Lexeme: 5               Token: CONSTANT_NUM
Line 95: Lexeme: )               Token: DELIM_C_PAREN
Line 95: Lexeme: ;               Token: DELIM_SEMCOL
Line 97: Lexeme: num             Token: NUM            
Line 97: Lexeme: i               Token: IDENTIFIER
Line 97: Lexeme: =               Token: =
Line 97: Lexeme: 0               Token: CONSTANT_NUM
Line 97: Lexeme: ;               Token: DELIM_SEMCOL
Line 98: Lexeme: num             Token: NUM            
Line 98: Lexeme: j               Token: IDENTIFIER
Line 98: Lexeme: =               Token: =
Line 98: Lexeme: 0               Token: CONSTANT_NUM
Line 98: Lexeme: ;               Token: DELIM_SEMCOL
Line 100: Lexeme: do              Token: DO             
Line 100: Lexeme: {               Token: DELIM_O_BRACE
Line 101: Lexeme: out             Token: OUT            
Line 101: Lexeme: (               Token: DELIM_O_PAREN
Line 101: Lexeme: "This is an output statement" Token: CONSTANT_TEXT
Line 101: Lexeme: )               Token: DELIM_C_PAREN
Line 101: Lexeme: ;               Token: DELIM_SEMCOL
Line 102: Lexeme: j               Token: IDENTIFIER
Line 102: Lexeme: =               Token: =
Line 102: Lexeme: 0               Token: CONSTANT_NUM
Line 102: Lexeme: ;               Token: DELIM_SEMCOL
Line 103: Lexeme: do              Token: DO             
Line 103: Lexeme: {               Token: DELIM_O_BRACE
Line 104: Lexeme: out             Token: OUT            
Line 104: Lexeme: (               Token: DELIM_O_PAREN
Line 104: Lexeme: "OUTPUT"        Token: CONSTANT_TEXT
Line 104: Lexeme: )               Token: DELIM_C_PAREN
Line 104: Lexeme: ;               Token: DELIM_SEMCOL
Line 105: Lexeme: j               Token: IDENTIFIER
Line 105: Lexeme: ++              Token: ++
Line 105: Lexeme: ;               Token: DELIM_SEMCOL
Line 106: Lexeme: }               Token: DELIM_C_BRACE
Line 106: Lexeme: meanwhile       Token: MEANWHILE      
Line 106: Lexeme: (               Token: DELIM_O_PAREN
Line 106: Lexeme: j               Token: IDENTIFIER
Line 106: Lexeme: <               Token: <
Line 106: Lexeme: 5               Token: CONSTANT_NUM
Line 106: Lexeme: )               Token: DELIM_C_PAREN
Line 106: Lexeme: ;               Token: DELIM_SEMCOL
Line 107: Lexeme: i               Token: IDENTIFIER
Line 107: Lexeme: ++              Token: ++
Line 107: Lexeme: ;               Token: DELIM_SEMCOL
Line 108: Lexeme: }               Token: DELIM_C_BRACE
Line 108: Lexeme: meanwhile       Token: MEANWHILE      
Line 108: Lexeme: (               Token: DELIM_O_PAREN
Line 108: Lexeme: i               Token: IDENTIFIER
Line 108: Lexeme: <               Token: <
Line 108: Lexeme: 5               Token: CONSTANT_NUM
Line 108: Lexeme: )               Token: DELIM_C_PAREN
Line 108: Lexeme: ;               Token: DELIM_SEMCOL
Line 111: Lexeme: rep             Token: REP            
Line 111: Lexeme: (               Token: DELIM_O_PAREN
Line 111: Lexeme: num             Token: NUM            
Line 111: Lexeme: a               Token: IDENTIFIER
Line 111: Lexeme: =               Token: =
Line 111: Lexeme: 1               Token: CONSTANT_NUM
Line 111: Lexeme: ;               Token: DELIM_SEMCOL
Line 111: Lexeme: a               Token: IDENTIFIER
Line 111: Lexeme: >               Token: >
Line 111: Lexeme: 1               Token: CONSTANT_NUM
Line 111: Lexeme: ;               Token: DELIM_SEMCOL
Line 111: Lexeme: a               Token: IDENTIFIER
Line 111: Lexeme: ++              Token: ++
Line 111: Lexeme: )               Token: DELIM_C_PAREN
Line 111: Lexeme: {               Token: DELIM_O_BRACE
Line 112: Lexeme: meanwhile       Token: MEANWHILE      
Line 112: Lexeme: (               Token: DELIM_O_PAREN
Line 112: Lexeme: i               Token: IDENTIFIER
Line 112: Lexeme: >               Token: >
Line 112: Lexeme: 10              Token: CONSTANT_NUM
Line 112: Lexeme: )               Token: DELIM_C_PAREN
Line 112: Lexeme: {               Token: DELIM_O_BRACE
Line 113: Lexeme: do              Token: DO             
Line 113: Lexeme: {               Token: DELIM_O_BRACE
Line 114: Lexeme: test            Token: IDENTIFIER
Line 114: Lexeme: =               Token: =
Line 114: Lexeme: test            Token: IDENTIFIER
Line 114: Lexeme: ;               Token: DELIM_SEMCOL
Line 115: Lexeme: }               Token: DELIM_C_BRACE
Line 115: Lexeme: meanwhile       Token: MEANWHILE      
Line 115: Lexeme: (               Token: DELIM_O_PAREN
Line 115: Lexeme: i               Token: IDENTIFIER
Line 115: Lexeme: <               Token: <
Line 115: Lexeme: 10              Token: CONSTANT_NUM
Line 115: Lexeme: )               Token: DELIM_C_PAREN
Line 115: Lexeme: ;               Token: DELIM_SEMCOL
Line 116: Lexeme: }               Token: DELIM_C_BRACE
Line 117: Lexeme: }               Token: DELIM_C_BRACE
Line 119: Lexeme: //              Token: COMMENT
Line 120: Lexeme: num             Token: NUM            
Line 120: Lexeme: count           Token: IDENTIFIER
Line 120: Lexeme: ;               Token: DELIM_SEMCOL
Line 121: Lexeme: drift           Token: DRIFT          
Line 121: Lexeme: decimal         Token: IDENTIFIER
Line 121: Lexeme: =               Token: =
Line 121: Lexeme: 89.70           Token: CONSTANT_DRIFT
Line 121: Lexeme: ;               Token: DELIM_SEMCOL
Line 122: Lexeme: num             Token: NUM            
Line 122: Lexeme: count           Token: IDENTIFIER
Line 122: Lexeme: =               Token: =
Line 122: Lexeme: number          Token: IDENTIFIER
Line 122: Lexeme: ;               Token: DELIM_SEMCOL
Line 123: Lexeme: drift           Token: DRIFT          
Line 123: Lexeme: math_grade      Token: IDENTIFIER
Line 123: Lexeme: ,               Token: DELIM_COMMA
Line 123: Lexeme: science_grade   Token: IDENTIFIER
Line 123: Lexeme: ,               Token: DELIM_COMMA
Line 123: Lexeme: english_grade   Token: IDENTIFIER
Line 123: Lexeme: ;               Token: DELIM_SEMCOL
Line 124: Lexeme: drift           Token: DRIFT          
Line 124: Lexeme: math_grade      Token: IDENTIFIER
Line 124: Lexeme: =               Token: =
Line 124: Lexeme: 97.5            Token: CONSTANT_DRIFT
Line 124: Lexeme: ,               Token: DELIM_COMMA
Line 124: Lexeme: science_grade   Token: IDENTIFIER
Line 124: Lexeme: =               Token: =
Line 124: Lexeme: 95.5            Token: CONSTANT_DRIFT
Line 124: Lexeme: ,               Token: DELIM_COMMA
Line 124: Lexeme: english_grade   Token: IDENTIFIER
Line 124: Lexeme: =               Token: =
Line 124: Lexeme: math_grade      Token: IDENTIFIER
Line 124: Lexeme: ;               Token: DELIM_SEMCOL
Line 125: Lexeme: }               Token: DELIM_C_BRACE
