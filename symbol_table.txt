Lexical Analysis of syntax_file.shs:

Line 1: Lexeme: toptier         Token: TOPTIER
Line 1: Lexeme: (               Token: DELIM_O_PAREN
Line 1: Lexeme: )               Token: DELIM_C_PAREN
Line 1: Lexeme: {               Token: DELIM_O_BRACE
Line 2: Lexeme: test            Token: IDENTIFIER
Line 2: Lexeme: +=              Token: +=
Line 2: Lexeme: expression      Token: IDENTIFIER
Line 2: Lexeme: ;               Token: DELIM_SEMCOL
Line 3: Lexeme: this            Token: IDENTIFIER
Line 3: Lexeme: ||              Token: ||
Line 3: Lexeme: that            Token: IDENTIFIER
Line 3: Lexeme: ;               Token: DELIM_SEMCOL
Line 4: Lexeme: this            Token: IDENTIFIER
Line 4: Lexeme: &&              Token: &&
Line 4: Lexeme: that            Token: IDENTIFIER
Line 4: Lexeme: ;               Token: DELIM_SEMCOL
Line 5: Lexeme: this            Token: IDENTIFIER
Line 5: Lexeme: ==              Token: ==
Line 5: Lexeme: that            Token: IDENTIFIER
Line 5: Lexeme: ;               Token: DELIM_SEMCOL
Line 6: Lexeme: this            Token: IDENTIFIER
Line 6: Lexeme: >=              Token: >=
Line 6: Lexeme: that            Token: IDENTIFIER
Line 6: Lexeme: ;               Token: DELIM_SEMCOL
Line 7: Lexeme: this            Token: IDENTIFIER
Line 7: Lexeme: +               Token: +
Line 7: Lexeme: that            Token: IDENTIFIER
Line 7: Lexeme: ;               Token: DELIM_SEMCOL
Line 8: Lexeme: this            Token: IDENTIFIER
Line 8: Lexeme: *               Token: *
Line 8: Lexeme: that            Token: IDENTIFIER
Line 8: Lexeme: ;               Token: DELIM_SEMCOL
Line 9: Lexeme: !               Token: !
Line 9: Lexeme: cap             Token: CONSTANT_LEGIT
Line 9: Lexeme: ;               Token: DELIM_SEMCOL
Line 10: Lexeme: i               Token: IDENTIFIER
Line 10: Lexeme: ++              Token: ++
Line 10: Lexeme: ;               Token: DELIM_SEMCOL
Line 12: Lexeme: //              Token: COMMENT
Line 13: Lexeme: input           Token: INPUT          
Line 13: Lexeme: (               Token: DELIM_O_PAREN
Line 13: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 13: Lexeme: ,               Token: DELIM_COMMA
Line 13: Lexeme: &               Token: &
Line 13: Lexeme: age             Token: IDENTIFIER
Line 13: Lexeme: )               Token: DELIM_C_PAREN
Line 13: Lexeme: ;               Token: DELIM_SEMCOL
Line 14: Lexeme: input           Token: INPUT          
Line 14: Lexeme: (               Token: DELIM_O_PAREN
Line 14: Lexeme: "%f"            Token: CONSTANT_TXTFS
Line 14: Lexeme: ,               Token: DELIM_COMMA
Line 14: Lexeme: &               Token: &
Line 14: Lexeme: float_a         Token: IDENTIFIER
Line 14: Lexeme: )               Token: DELIM_C_PAREN
Line 14: Lexeme: ;               Token: DELIM_SEMCOL
Line 15: Lexeme: input           Token: INPUT          
Line 15: Lexeme: (               Token: DELIM_O_PAREN
Line 15: Lexeme: "%s"            Token: CONSTANT_TXTFS
Line 15: Lexeme: ,               Token: DELIM_COMMA
Line 15: Lexeme: &               Token: &
Line 15: Lexeme: vibe_a          Token: IDENTIFIER
Line 15: Lexeme: )               Token: DELIM_C_PAREN
Line 15: Lexeme: ;               Token: DELIM_SEMCOL
Line 16: Lexeme: input           Token: INPUT          
Line 16: Lexeme: (               Token: DELIM_O_PAREN
Line 16: Lexeme: "%c"            Token: CONSTANT_TXTFS
Line 16: Lexeme: ,               Token: DELIM_COMMA
Line 16: Lexeme: &               Token: &
Line 16: Lexeme: letter          Token: IDENTIFIER
Line 16: Lexeme: )               Token: DELIM_C_PAREN
Line 16: Lexeme: ;               Token: DELIM_SEMCOL
Line 18: Lexeme: //              Token: COMMENT
Line 19: Lexeme: out             Token: OUTPUT         
Line 19: Lexeme: (               Token: DELIM_O_PAREN
Line 19: Lexeme: "String"        Token: CONSTANT_TEXT
Line 19: Lexeme: )               Token: DELIM_C_PAREN
Line 19: Lexeme: ;               Token: DELIM_SEMCOL
Line 20: Lexeme: out             Token: OUTPUT         
Line 20: Lexeme: (               Token: DELIM_O_PAREN
Line 20: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 20: Lexeme: ,               Token: DELIM_COMMA
Line 20: Lexeme: identifier      Token: IDENTIFIER
Line 20: Lexeme: )               Token: DELIM_C_PAREN
Line 20: Lexeme: ;               Token: DELIM_SEMCOL
Line 21: Lexeme: out             Token: OUTPUT         
Line 21: Lexeme: (               Token: DELIM_O_PAREN
Line 21: Lexeme: "Num: %d"       Token: CONSTANT_TXTFS
Line 21: Lexeme: ,               Token: DELIM_COMMA
Line 21: Lexeme: integer         Token: IDENTIFIER
Line 21: Lexeme: )               Token: DELIM_C_PAREN
Line 21: Lexeme: ;               Token: DELIM_SEMCOL
Line 23: Lexeme: out             Token: OUTPUT         
Line 23: Lexeme: (               Token: DELIM_O_PAREN
Line 23: Lexeme: "Age: %d"       Token: CONSTANT_TXTFS
Line 23: Lexeme: ,               Token: DELIM_COMMA
Line 23: Lexeme: age             Token: IDENTIFIER
Line 23: Lexeme: )               Token: DELIM_C_PAREN
Line 23: Lexeme: ;               Token: DELIM_SEMCOL
Line 24: Lexeme: out             Token: OUTPUT         
Line 24: Lexeme: (               Token: DELIM_O_PAREN
Line 24: Lexeme: "Float: %f"     Token: CONSTANT_TXTFS
Line 24: Lexeme: ,               Token: DELIM_COMMA
Line 24: Lexeme: float_a         Token: IDENTIFIER
Line 24: Lexeme: )               Token: DELIM_C_PAREN
Line 24: Lexeme: ;               Token: DELIM_SEMCOL
Line 25: Lexeme: out             Token: OUTPUT         
Line 25: Lexeme: (               Token: DELIM_O_PAREN
Line 25: Lexeme: "Text: %s"      Token: CONSTANT_TXTFS
Line 25: Lexeme: ,               Token: DELIM_COMMA
Line 25: Lexeme: text_a          Token: IDENTIFIER
Line 25: Lexeme: )               Token: DELIM_C_PAREN
Line 25: Lexeme: ;               Token: DELIM_SEMCOL
Line 26: Lexeme: out             Token: OUTPUT         
Line 26: Lexeme: (               Token: DELIM_O_PAREN
Line 26: Lexeme: "Letter: %c"    Token: CONSTANT_TXTFS
Line 26: Lexeme: ,               Token: DELIM_COMMA
Line 26: Lexeme: letter          Token: IDENTIFIER
Line 26: Lexeme: )               Token: DELIM_C_PAREN
Line 26: Lexeme: ;               Token: DELIM_SEMCOL
Line 28: Lexeme: //              Token: COMMENT
Line 29: Lexeme: decimal         Token: IDENTIFIER
Line 29: Lexeme: =               Token: =
Line 29: Lexeme: 89.70           Token: CONSTANT_DRIFT
Line 29: Lexeme: ;               Token: DELIM_SEMCOL
Line 30: Lexeme: count           Token: IDENTIFIER
Line 30: Lexeme: +=              Token: +=
Line 30: Lexeme: test_var        Token: IDENTIFIER
Line 30: Lexeme: ;               Token: DELIM_SEMCOL
Line 31: Lexeme: count           Token: IDENTIFIER
Line 31: Lexeme: *=              Token: *=
Line 31: Lexeme: test_var        Token: IDENTIFIER
Line 31: Lexeme: ;               Token: DELIM_SEMCOL
Line 32: Lexeme: count           Token: IDENTIFIER
Line 32: Lexeme: -=              Token: -=
Line 32: Lexeme: test_var        Token: IDENTIFIER
Line 32: Lexeme: ;               Token: DELIM_SEMCOL
Line 33: Lexeme: count           Token: IDENTIFIER
Line 33: Lexeme: |=              Token: |=
Line 33: Lexeme: test_var        Token: IDENTIFIER
Line 33: Lexeme: ;               Token: DELIM_SEMCOL
Line 34: Lexeme: count           Token: IDENTIFIER
Line 34: Lexeme: %=              Token: %=
Line 34: Lexeme: test_var        Token: IDENTIFIER
Line 34: Lexeme: ;               Token: DELIM_SEMCOL
Line 35: Lexeme: average         Token: IDENTIFIER
Line 35: Lexeme: =               Token: =
Line 35: Lexeme: (               Token: DELIM_O_PAREN
Line 35: Lexeme: math_grade      Token: IDENTIFIER
Line 35: Lexeme: +               Token: +
Line 35: Lexeme: science_grade   Token: IDENTIFIER
Line 35: Lexeme: +               Token: +
Line 35: Lexeme: english_grade   Token: IDENTIFIER
Line 35: Lexeme: )               Token: DELIM_C_PAREN
Line 35: Lexeme: /               Token: /
Line 35: Lexeme: 3               Token: CONSTANT_NUM
Line 35: Lexeme: ;               Token: DELIM_SEMCOL
Line 37: Lexeme: a               Token: IDENTIFIER
Line 37: Lexeme: =               Token: =
Line 37: Lexeme: b               Token: IDENTIFIER
Line 37: Lexeme: ;               Token: DELIM_SEMCOL
Line 38: Lexeme: a               Token: IDENTIFIER
Line 38: Lexeme: =               Token: =
Line 38: Lexeme: 8               Token: CONSTANT_NUM
Line 38: Lexeme: ;               Token: DELIM_SEMCOL
Line 39: Lexeme: a               Token: IDENTIFIER
Line 39: Lexeme: =               Token: =
Line 39: Lexeme: (               Token: DELIM_O_PAREN
Line 39: Lexeme: 8               Token: CONSTANT_NUM
Line 39: Lexeme: +               Token: +
Line 39: Lexeme: n               Token: IDENTIFIER
Line 39: Lexeme: *               Token: *
Line 39: Lexeme: (               Token: DELIM_O_PAREN
Line 39: Lexeme: c               Token: IDENTIFIER
Line 39: Lexeme: *               Token: *
Line 39: Lexeme: f               Token: IDENTIFIER
Line 39: Lexeme: )               Token: DELIM_C_PAREN
Line 39: Lexeme: ==              Token: ==
Line 39: Lexeme: 5               Token: CONSTANT_NUM
Line 39: Lexeme: )               Token: DELIM_C_PAREN
Line 39: Lexeme: ;               Token: DELIM_SEMCOL
Line 41: Lexeme: //              Token: COMMENT
Line 42: Lexeme: if              Token: IF             
Line 42: Lexeme: (               Token: DELIM_O_PAREN
Line 42: Lexeme: average         Token: IDENTIFIER
Line 42: Lexeme: >=              Token: >=
Line 42: Lexeme: 97.0            Token: CONSTANT_DRIFT
Line 42: Lexeme: )               Token: DELIM_C_PAREN
Line 42: Lexeme: {               Token: DELIM_O_BRACE
Line 43: Lexeme: out             Token: OUTPUT         
Line 43: Lexeme: (               Token: DELIM_O_PAREN
Line 43: Lexeme: "GWA is very high!" Token: CONSTANT_TEXT
Line 43: Lexeme: )               Token: DELIM_C_PAREN
Line 43: Lexeme: ;               Token: DELIM_SEMCOL
Line 44: Lexeme: }               Token: DELIM_C_BRACE
Line 46: Lexeme: if              Token: IF             
Line 46: Lexeme: (               Token: DELIM_O_PAREN
Line 46: Lexeme: average         Token: IDENTIFIER
Line 46: Lexeme: >=              Token: >=
Line 46: Lexeme: 1               Token: CONSTANT_NUM
Line 46: Lexeme: )               Token: DELIM_C_PAREN
Line 46: Lexeme: {               Token: DELIM_O_BRACE
Line 47: Lexeme: if              Token: IF             
Line 47: Lexeme: (               Token: DELIM_O_PAREN
Line 47: Lexeme: average         Token: IDENTIFIER
Line 47: Lexeme: <=              Token: <=
Line 47: Lexeme: 5               Token: CONSTANT_NUM
Line 47: Lexeme: )               Token: DELIM_C_PAREN
Line 47: Lexeme: {               Token: DELIM_O_BRACE
Line 48: Lexeme: out             Token: OUTPUT         
Line 48: Lexeme: (               Token: DELIM_O_PAREN
Line 48: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 48: Lexeme: ,               Token: DELIM_COMMA
Line 48: Lexeme: average         Token: IDENTIFIER
Line 48: Lexeme: )               Token: DELIM_C_PAREN
Line 48: Lexeme: ;               Token: DELIM_SEMCOL
Line 49: Lexeme: }               Token: DELIM_C_BRACE
Line 50: Lexeme: }               Token: DELIM_C_BRACE
Line 52: Lexeme: if              Token: IF             
Line 52: Lexeme: (               Token: DELIM_O_PAREN
Line 52: Lexeme: win             Token: IDENTIFIER
Line 52: Lexeme: ==              Token: ==
Line 52: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 52: Lexeme: )               Token: DELIM_C_PAREN
Line 52: Lexeme: {               Token: DELIM_O_BRACE
Line 53: Lexeme: out             Token: OUTPUT         
Line 53: Lexeme: (               Token: DELIM_O_PAREN
Line 53: Lexeme: "You won!"      Token: CONSTANT_TEXT
Line 53: Lexeme: )               Token: DELIM_C_PAREN
Line 53: Lexeme: ;               Token: DELIM_SEMCOL
Line 54: Lexeme: }               Token: DELIM_C_BRACE
Line 54: Lexeme: other           Token: OTHER          
Line 54: Lexeme: {               Token: DELIM_O_BRACE
Line 55: Lexeme: out             Token: OUTPUT         
Line 55: Lexeme: (               Token: DELIM_O_PAREN
Line 55: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 55: Lexeme: )               Token: DELIM_C_PAREN
Line 55: Lexeme: ;               Token: DELIM_SEMCOL
Line 56: Lexeme: }               Token: DELIM_C_BRACE
Line 58: Lexeme: if              Token: IF             
Line 58: Lexeme: (               Token: DELIM_O_PAREN
Line 58: Lexeme: win             Token: IDENTIFIER
Line 58: Lexeme: ==              Token: ==
Line 58: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 58: Lexeme: )               Token: DELIM_C_PAREN
Line 58: Lexeme: {               Token: DELIM_O_BRACE
Line 59: Lexeme: if              Token: IF             
Line 59: Lexeme: (               Token: DELIM_O_PAREN
Line 59: Lexeme: num_win         Token: IDENTIFIER
Line 59: Lexeme: >               Token: >
Line 59: Lexeme: 10              Token: CONSTANT_NUM
Line 59: Lexeme: )               Token: DELIM_C_PAREN
Line 59: Lexeme: {               Token: DELIM_O_BRACE
Line 60: Lexeme: out             Token: OUTPUT         
Line 60: Lexeme: (               Token: DELIM_O_PAREN
Line 60: Lexeme: "You've won for more than 10 times!" Token: CONSTANT_TEXT
Line 60: Lexeme: )               Token: DELIM_C_PAREN
Line 60: Lexeme: ;               Token: DELIM_SEMCOL
Line 61: Lexeme: }               Token: DELIM_C_BRACE
Line 61: Lexeme: other           Token: OTHER          
Line 61: Lexeme: {               Token: DELIM_O_BRACE
Line 62: Lexeme: out             Token: OUTPUT         
Line 62: Lexeme: (               Token: DELIM_O_PAREN
Line 62: Lexeme: "You have only won for 10 times!" Token: CONSTANT_TEXT
Line 62: Lexeme: )               Token: DELIM_C_PAREN
Line 62: Lexeme: ;               Token: DELIM_SEMCOL
Line 63: Lexeme: }               Token: DELIM_C_BRACE
Line 64: Lexeme: }               Token: DELIM_C_BRACE
Line 64: Lexeme: other           Token: OTHER          
Line 64: Lexeme: {               Token: DELIM_O_BRACE
Line 65: Lexeme: out             Token: OUTPUT         
Line 65: Lexeme: (               Token: DELIM_O_PAREN
Line 65: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 65: Lexeme: )               Token: DELIM_C_PAREN
Line 65: Lexeme: ;               Token: DELIM_SEMCOL
Line 66: Lexeme: }               Token: DELIM_C_BRACE
Line 68: Lexeme: //              Token: COMMENT
Line 69: Lexeme: rep             Token: REP            
Line 69: Lexeme: (               Token: DELIM_O_PAREN
Line 69: Lexeme: num             Token: NUM            
Line 69: Lexeme: a               Token: IDENTIFIER
Line 69: Lexeme: =               Token: =
Line 69: Lexeme: 0               Token: CONSTANT_NUM
Line 69: Lexeme: ;               Token: DELIM_SEMCOL
Line 69: Lexeme: a               Token: IDENTIFIER
Line 69: Lexeme: <               Token: <
Line 69: Lexeme: 5               Token: CONSTANT_NUM
Line 69: Lexeme: ;               Token: DELIM_SEMCOL
Line 69: Lexeme: a               Token: IDENTIFIER
Line 69: Lexeme: ++              Token: ++
Line 69: Lexeme: )               Token: DELIM_C_PAREN
Line 69: Lexeme: {               Token: DELIM_O_BRACE
Line 70: Lexeme: out             Token: OUTPUT         
Line 70: Lexeme: (               Token: DELIM_O_PAREN
Line 70: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 70: Lexeme: ,               Token: DELIM_COMMA
Line 70: Lexeme: a               Token: IDENTIFIER
Line 70: Lexeme: )               Token: DELIM_C_PAREN
Line 70: Lexeme: ;               Token: DELIM_SEMCOL
Line 71: Lexeme: }               Token: DELIM_C_BRACE
Line 73: Lexeme: rep             Token: REP            
Line 73: Lexeme: (               Token: DELIM_O_PAREN
Line 73: Lexeme: num             Token: NUM            
Line 73: Lexeme: i               Token: IDENTIFIER
Line 73: Lexeme: =               Token: =
Line 73: Lexeme: 0               Token: CONSTANT_NUM
Line 73: Lexeme: ;               Token: DELIM_SEMCOL
Line 73: Lexeme: i               Token: IDENTIFIER
Line 73: Lexeme: <               Token: <
Line 73: Lexeme: 5               Token: CONSTANT_NUM
Line 73: Lexeme: ;               Token: DELIM_SEMCOL
Line 73: Lexeme: i               Token: IDENTIFIER
Line 73: Lexeme: ++              Token: ++
Line 73: Lexeme: )               Token: DELIM_C_PAREN
Line 73: Lexeme: {               Token: DELIM_O_BRACE
Line 74: Lexeme: out             Token: OUTPUT         
Line 74: Lexeme: (               Token: DELIM_O_PAREN
Line 74: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 74: Lexeme: ,               Token: DELIM_COMMA
Line 74: Lexeme: i               Token: IDENTIFIER
Line 74: Lexeme: )               Token: DELIM_C_PAREN
Line 74: Lexeme: ;               Token: DELIM_SEMCOL
Line 75: Lexeme: rep             Token: REP            
Line 75: Lexeme: (               Token: DELIM_O_PAREN
Line 75: Lexeme: num             Token: NUM            
Line 75: Lexeme: j               Token: IDENTIFIER
Line 75: Lexeme: =               Token: =
Line 75: Lexeme: 0               Token: CONSTANT_NUM
Line 75: Lexeme: ;               Token: DELIM_SEMCOL
Line 75: Lexeme: j               Token: IDENTIFIER
Line 75: Lexeme: <               Token: <
Line 75: Lexeme: 5               Token: CONSTANT_NUM
Line 75: Lexeme: ;               Token: DELIM_SEMCOL
Line 75: Lexeme: j               Token: IDENTIFIER
Line 75: Lexeme: ++              Token: ++
Line 75: Lexeme: )               Token: DELIM_C_PAREN
Line 75: Lexeme: {               Token: DELIM_O_BRACE
Line 76: Lexeme: out             Token: OUTPUT         
Line 76: Lexeme: (               Token: DELIM_O_PAREN
Line 76: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 76: Lexeme: ,               Token: DELIM_COMMA
Line 76: Lexeme: j               Token: IDENTIFIER
Line 76: Lexeme: )               Token: DELIM_C_PAREN
Line 76: Lexeme: ;               Token: DELIM_SEMCOL
Line 77: Lexeme: }               Token: DELIM_C_BRACE
Line 78: Lexeme: }               Token: DELIM_C_BRACE
Line 80: Lexeme: num             Token: NUM            
Line 80: Lexeme: i               Token: IDENTIFIER
Line 80: Lexeme: =               Token: =
Line 80: Lexeme: 0               Token: CONSTANT_NUM
Line 80: Lexeme: ;               Token: DELIM_SEMCOL
Line 82: Lexeme: meanwhile       Token: MEANWHILE      
Line 82: Lexeme: (               Token: DELIM_O_PAREN
Line 82: Lexeme: i               Token: IDENTIFIER
Line 82: Lexeme: <               Token: <
Line 82: Lexeme: 5               Token: CONSTANT_NUM
Line 82: Lexeme: )               Token: DELIM_C_PAREN
Line 82: Lexeme: {               Token: DELIM_O_BRACE
Line 83: Lexeme: out             Token: OUTPUT         
Line 83: Lexeme: (               Token: DELIM_O_PAREN
Line 83: Lexeme: "string test"   Token: CONSTANT_TEXT
Line 83: Lexeme: )               Token: DELIM_C_PAREN
Line 83: Lexeme: ;               Token: DELIM_SEMCOL
Line 84: Lexeme: i               Token: IDENTIFIER
Line 84: Lexeme: ++              Token: ++
Line 84: Lexeme: ;               Token: DELIM_SEMCOL
Line 85: Lexeme: }               Token: DELIM_C_BRACE
Line 87: Lexeme: num             Token: NUM            
Line 87: Lexeme: i               Token: IDENTIFIER
Line 87: Lexeme: =               Token: =
Line 87: Lexeme: 0               Token: CONSTANT_NUM
Line 87: Lexeme: ;               Token: DELIM_SEMCOL
Line 88: Lexeme: num             Token: NUM            
Line 88: Lexeme: j               Token: IDENTIFIER
Line 88: Lexeme: ;               Token: DELIM_SEMCOL
Line 90: Lexeme: meanwhile       Token: MEANWHILE      
Line 90: Lexeme: (               Token: DELIM_O_PAREN
Line 90: Lexeme: i               Token: IDENTIFIER
Line 90: Lexeme: <               Token: <
Line 90: Lexeme: 5               Token: CONSTANT_NUM
Line 90: Lexeme: )               Token: DELIM_C_PAREN
Line 90: Lexeme: {               Token: DELIM_O_BRACE
Line 91: Lexeme: out             Token: OUTPUT         
Line 91: Lexeme: (               Token: DELIM_O_PAREN
Line 91: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 91: Lexeme: ,               Token: DELIM_COMMA
Line 91: Lexeme: identifier      Token: IDENTIFIER
Line 91: Lexeme: )               Token: DELIM_C_PAREN
Line 91: Lexeme: ;               Token: DELIM_SEMCOL
Line 92: Lexeme: j               Token: IDENTIFIER
Line 92: Lexeme: =               Token: =
Line 92: Lexeme: 0               Token: CONSTANT_NUM
Line 92: Lexeme: ;               Token: DELIM_SEMCOL
Line 93: Lexeme: meanwhile       Token: MEANWHILE      
Line 93: Lexeme: (               Token: DELIM_O_PAREN
Line 93: Lexeme: j               Token: IDENTIFIER
Line 93: Lexeme: <               Token: <
Line 93: Lexeme: 5               Token: CONSTANT_NUM
Line 93: Lexeme: )               Token: DELIM_C_PAREN
Line 93: Lexeme: {               Token: DELIM_O_BRACE
Line 94: Lexeme: out             Token: OUTPUT         
Line 94: Lexeme: (               Token: DELIM_O_PAREN
Line 94: Lexeme: "J: %d"         Token: CONSTANT_TXTFS
Line 94: Lexeme: ,               Token: DELIM_COMMA
Line 94: Lexeme: j               Token: IDENTIFIER
Line 94: Lexeme: )               Token: DELIM_C_PAREN
Line 94: Lexeme: ;               Token: DELIM_SEMCOL
Line 95: Lexeme: j               Token: IDENTIFIER
Line 95: Lexeme: ++              Token: ++
Line 95: Lexeme: ;               Token: DELIM_SEMCOL
Line 96: Lexeme: }               Token: DELIM_C_BRACE
Line 97: Lexeme: i               Token: IDENTIFIER
Line 97: Lexeme: ++              Token: ++
Line 97: Lexeme: ;               Token: DELIM_SEMCOL
Line 98: Lexeme: }               Token: DELIM_C_BRACE
Line 100: Lexeme: num             Token: NUM            
Line 100: Lexeme: i               Token: IDENTIFIER
Line 100: Lexeme: =               Token: =
Line 100: Lexeme: 0               Token: CONSTANT_NUM
Line 100: Lexeme: ;               Token: DELIM_SEMCOL
Line 102: Lexeme: do              Token: DO             
Line 102: Lexeme: {               Token: DELIM_O_BRACE
Line 103: Lexeme: out             Token: OUTPUT         
Line 103: Lexeme: (               Token: DELIM_O_PAREN
Line 103: Lexeme: "Test Output"   Token: CONSTANT_TEXT
Line 103: Lexeme: )               Token: DELIM_C_PAREN
Line 103: Lexeme: ;               Token: DELIM_SEMCOL
Line 104: Lexeme: i               Token: IDENTIFIER
Line 104: Lexeme: ++              Token: ++
Line 104: Lexeme: ;               Token: DELIM_SEMCOL
Line 105: Lexeme: }               Token: DELIM_C_BRACE
Line 105: Lexeme: meanwhile       Token: MEANWHILE      
Line 105: Lexeme: (               Token: DELIM_O_PAREN
Line 105: Lexeme: i               Token: IDENTIFIER
Line 105: Lexeme: <               Token: <
Line 105: Lexeme: 5               Token: CONSTANT_NUM
Line 105: Lexeme: )               Token: DELIM_C_PAREN
Line 105: Lexeme: ;               Token: DELIM_SEMCOL
Line 107: Lexeme: num             Token: NUM            
Line 107: Lexeme: i               Token: IDENTIFIER
Line 107: Lexeme: =               Token: =
Line 107: Lexeme: 0               Token: CONSTANT_NUM
Line 107: Lexeme: ;               Token: DELIM_SEMCOL
Line 108: Lexeme: num             Token: NUM            
Line 108: Lexeme: j               Token: IDENTIFIER
Line 108: Lexeme: =               Token: =
Line 108: Lexeme: 0               Token: CONSTANT_NUM
Line 108: Lexeme: ;               Token: DELIM_SEMCOL
Line 110: Lexeme: do              Token: DO             
Line 110: Lexeme: {               Token: DELIM_O_BRACE
Line 111: Lexeme: out             Token: OUTPUT         
Line 111: Lexeme: (               Token: DELIM_O_PAREN
Line 111: Lexeme: "This is an output statement" Token: CONSTANT_TEXT
Line 111: Lexeme: )               Token: DELIM_C_PAREN
Line 111: Lexeme: ;               Token: DELIM_SEMCOL
Line 112: Lexeme: j               Token: IDENTIFIER
Line 112: Lexeme: =               Token: =
Line 112: Lexeme: 0               Token: CONSTANT_NUM
Line 112: Lexeme: ;               Token: DELIM_SEMCOL
Line 113: Lexeme: do              Token: DO             
Line 113: Lexeme: {               Token: DELIM_O_BRACE
Line 114: Lexeme: out             Token: OUTPUT         
Line 114: Lexeme: (               Token: DELIM_O_PAREN
Line 114: Lexeme: "OUTPUT"        Token: CONSTANT_TEXT
Line 114: Lexeme: )               Token: DELIM_C_PAREN
Line 114: Lexeme: ;               Token: DELIM_SEMCOL
Line 115: Lexeme: j               Token: IDENTIFIER
Line 115: Lexeme: ++              Token: ++
Line 115: Lexeme: ;               Token: DELIM_SEMCOL
Line 116: Lexeme: }               Token: DELIM_C_BRACE
Line 116: Lexeme: meanwhile       Token: MEANWHILE      
Line 116: Lexeme: (               Token: DELIM_O_PAREN
Line 116: Lexeme: j               Token: IDENTIFIER
Line 116: Lexeme: <               Token: <
Line 116: Lexeme: 5               Token: CONSTANT_NUM
Line 116: Lexeme: )               Token: DELIM_C_PAREN
Line 116: Lexeme: ;               Token: DELIM_SEMCOL
Line 117: Lexeme: i               Token: IDENTIFIER
Line 117: Lexeme: ++              Token: ++
Line 117: Lexeme: ;               Token: DELIM_SEMCOL
Line 118: Lexeme: }               Token: DELIM_C_BRACE
Line 118: Lexeme: meanwhile       Token: MEANWHILE      
Line 118: Lexeme: (               Token: DELIM_O_PAREN
Line 118: Lexeme: i               Token: IDENTIFIER
Line 118: Lexeme: <               Token: <
Line 118: Lexeme: 5               Token: CONSTANT_NUM
Line 118: Lexeme: )               Token: DELIM_C_PAREN
Line 118: Lexeme: ;               Token: DELIM_SEMCOL
Line 121: Lexeme: rep             Token: REP            
Line 121: Lexeme: (               Token: DELIM_O_PAREN
Line 121: Lexeme: num             Token: NUM            
Line 121: Lexeme: a               Token: IDENTIFIER
Line 121: Lexeme: =               Token: =
Line 121: Lexeme: 1               Token: CONSTANT_NUM
Line 121: Lexeme: ;               Token: DELIM_SEMCOL
Line 121: Lexeme: a               Token: IDENTIFIER
Line 121: Lexeme: >               Token: >
Line 121: Lexeme: 1               Token: CONSTANT_NUM
Line 121: Lexeme: ;               Token: DELIM_SEMCOL
Line 121: Lexeme: a               Token: IDENTIFIER
Line 121: Lexeme: ++              Token: ++
Line 121: Lexeme: )               Token: DELIM_C_PAREN
Line 121: Lexeme: {               Token: DELIM_O_BRACE
Line 122: Lexeme: meanwhile       Token: MEANWHILE      
Line 122: Lexeme: (               Token: DELIM_O_PAREN
Line 122: Lexeme: i               Token: IDENTIFIER
Line 122: Lexeme: >               Token: >
Line 122: Lexeme: 10              Token: CONSTANT_NUM
Line 122: Lexeme: )               Token: DELIM_C_PAREN
Line 122: Lexeme: {               Token: DELIM_O_BRACE
Line 123: Lexeme: do              Token: DO             
Line 123: Lexeme: {               Token: DELIM_O_BRACE
Line 124: Lexeme: test            Token: IDENTIFIER
Line 124: Lexeme: =               Token: =
Line 124: Lexeme: test            Token: IDENTIFIER
Line 124: Lexeme: ;               Token: DELIM_SEMCOL
Line 125: Lexeme: }               Token: DELIM_C_BRACE
Line 125: Lexeme: meanwhile       Token: MEANWHILE      
Line 125: Lexeme: (               Token: DELIM_O_PAREN
Line 125: Lexeme: i               Token: IDENTIFIER
Line 125: Lexeme: <               Token: <
Line 125: Lexeme: 10              Token: CONSTANT_NUM
Line 125: Lexeme: )               Token: DELIM_C_PAREN
Line 125: Lexeme: ;               Token: DELIM_SEMCOL
Line 126: Lexeme: }               Token: DELIM_C_BRACE
Line 127: Lexeme: }               Token: DELIM_C_BRACE
Line 129: Lexeme: //              Token: COMMENT
Line 130: Lexeme: num             Token: NUM            
Line 130: Lexeme: count           Token: IDENTIFIER
Line 130: Lexeme: ;               Token: DELIM_SEMCOL
Line 131: Lexeme: drift           Token: DRIFT          
Line 131: Lexeme: decimal         Token: IDENTIFIER
Line 131: Lexeme: =               Token: =
Line 131: Lexeme: 89.70           Token: CONSTANT_DRIFT
Line 131: Lexeme: ;               Token: DELIM_SEMCOL
Line 132: Lexeme: num             Token: NUM            
Line 132: Lexeme: count           Token: IDENTIFIER
Line 132: Lexeme: =               Token: =
Line 132: Lexeme: number          Token: IDENTIFIER
Line 132: Lexeme: ;               Token: DELIM_SEMCOL
Line 133: Lexeme: drift           Token: DRIFT          
Line 133: Lexeme: math_grade      Token: IDENTIFIER
Line 133: Lexeme: ,               Token: DELIM_COMMA
Line 133: Lexeme: science_grade   Token: IDENTIFIER
Line 133: Lexeme: ,               Token: DELIM_COMMA
Line 133: Lexeme: english_grade   Token: IDENTIFIER
Line 133: Lexeme: ;               Token: DELIM_SEMCOL
Line 134: Lexeme: drift           Token: DRIFT          
Line 134: Lexeme: math_grade      Token: IDENTIFIER
Line 134: Lexeme: =               Token: =
Line 134: Lexeme: 97.5            Token: CONSTANT_DRIFT
Line 134: Lexeme: ,               Token: DELIM_COMMA
Line 134: Lexeme: science_grade   Token: IDENTIFIER
Line 134: Lexeme: =               Token: =
Line 134: Lexeme: 95.5            Token: CONSTANT_DRIFT
Line 134: Lexeme: ,               Token: DELIM_COMMA
Line 134: Lexeme: english_grade   Token: IDENTIFIER
Line 134: Lexeme: =               Token: =
Line 134: Lexeme: math_grade      Token: IDENTIFIER
Line 134: Lexeme: ;               Token: DELIM_SEMCOL
Line 136: Lexeme: u               Token: IDENTIFIER
Line 136: Lexeme: ++              Token: ++
Line 136: Lexeme: ;               Token: DELIM_SEMCOL
Line 137: Lexeme: ++              Token: ++
Line 137: Lexeme: u               Token: IDENTIFIER
Line 137: Lexeme: ;               Token: DELIM_SEMCOL
Line 139: Lexeme: if              Token: IF             
Line 139: Lexeme: (               Token: DELIM_O_PAREN
Line 139: Lexeme: win             Token: IDENTIFIER
Line 139: Lexeme: ==              Token: ==
Line 139: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 139: Lexeme: )               Token: DELIM_C_PAREN
Line 139: Lexeme: {               Token: DELIM_O_BRACE
Line 140: Lexeme: out             Token: OUTPUT         
Line 140: Lexeme: (               Token: DELIM_O_PAREN
Line 140: Lexeme: "You won!"      Token: CONSTANT_TEXT
Line 140: Lexeme: )               Token: DELIM_C_PAREN
Line 140: Lexeme: ;               Token: DELIM_SEMCOL
Line 141: Lexeme: }               Token: DELIM_C_BRACE
Line 141: Lexeme: ex              Token: EX             
Line 141: Lexeme: (               Token: DELIM_O_PAREN
Line 141: Lexeme: win             Token: IDENTIFIER
Line 141: Lexeme: ==              Token: ==
Line 141: Lexeme: cap             Token: CONSTANT_LEGIT
Line 141: Lexeme: )               Token: DELIM_C_PAREN
Line 141: Lexeme: {               Token: DELIM_O_BRACE
Line 142: Lexeme: out             Token: OUTPUT         
Line 142: Lexeme: (               Token: DELIM_O_PAREN
Line 142: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 142: Lexeme: )               Token: DELIM_C_PAREN
Line 142: Lexeme: ;               Token: DELIM_SEMCOL
Line 143: Lexeme: }               Token: DELIM_C_BRACE
Line 145: Lexeme: if              Token: IF             
Line 145: Lexeme: (               Token: DELIM_O_PAREN
Line 145: Lexeme: test            Token: IDENTIFIER
Line 145: Lexeme: )               Token: DELIM_C_PAREN
Line 145: Lexeme: {               Token: DELIM_O_BRACE
Line 146: Lexeme: test            Token: IDENTIFIER
Line 146: Lexeme: =               Token: =
Line 146: Lexeme: test            Token: IDENTIFIER
Line 146: Lexeme: ;               Token: DELIM_SEMCOL
Line 147: Lexeme: }               Token: DELIM_C_BRACE
Line 147: Lexeme: ex              Token: EX             
Line 147: Lexeme: (               Token: DELIM_O_PAREN
Line 147: Lexeme: test            Token: IDENTIFIER
Line 147: Lexeme: )               Token: DELIM_C_PAREN
Line 147: Lexeme: {               Token: DELIM_O_BRACE
Line 148: Lexeme: test            Token: IDENTIFIER
Line 148: Lexeme: =               Token: =
Line 148: Lexeme: test            Token: IDENTIFIER
Line 148: Lexeme: ;               Token: DELIM_SEMCOL
Line 149: Lexeme: }               Token: DELIM_C_BRACE
Line 149: Lexeme: ex              Token: EX             
Line 149: Lexeme: (               Token: DELIM_O_PAREN
Line 149: Lexeme: test            Token: IDENTIFIER
Line 149: Lexeme: )               Token: DELIM_C_PAREN
Line 149: Lexeme: {               Token: DELIM_O_BRACE
Line 150: Lexeme: test            Token: IDENTIFIER
Line 150: Lexeme: =               Token: =
Line 150: Lexeme: test            Token: IDENTIFIER
Line 150: Lexeme: ;               Token: DELIM_SEMCOL
Line 151: Lexeme: }               Token: DELIM_C_BRACE
Line 151: Lexeme: other           Token: OTHER          
Line 151: Lexeme: {               Token: DELIM_O_BRACE
Line 152: Lexeme: if              Token: IF             
Line 152: Lexeme: (               Token: DELIM_O_PAREN
Line 152: Lexeme: test            Token: IDENTIFIER
Line 152: Lexeme: )               Token: DELIM_C_PAREN
Line 152: Lexeme: {               Token: DELIM_O_BRACE
Line 153: Lexeme: hello           Token: IDENTIFIER
Line 153: Lexeme: ;               Token: DELIM_SEMCOL
Line 154: Lexeme: }               Token: DELIM_C_BRACE
Line 154: Lexeme: other           Token: OTHER          
Line 154: Lexeme: {               Token: DELIM_O_BRACE
Line 155: Lexeme: hello           Token: IDENTIFIER
Line 155: Lexeme: ;               Token: DELIM_SEMCOL
Line 156: Lexeme: }               Token: DELIM_C_BRACE
Line 157: Lexeme: }               Token: DELIM_C_BRACE
Line 159: Lexeme: num             Token: NUM            
Line 159: Lexeme: i               Token: IDENTIFIER
Line 159: Lexeme: ,               Token: DELIM_COMMA
Line 159: Lexeme: j               Token: IDENTIFIER
Line 159: Lexeme: =               Token: =
Line 159: Lexeme: 0               Token: CONSTANT_NUM
Line 159: Lexeme: ,               Token: DELIM_COMMA
Line 159: Lexeme: k               Token: IDENTIFIER
Line 159: Lexeme: =               Token: =
Line 159: Lexeme: 0               Token: CONSTANT_NUM
Line 159: Lexeme: ;               Token: DELIM_SEMCOL
Line 161: Lexeme: !               Token: !
Line 161: Lexeme: (               Token: DELIM_O_PAREN
Line 161: Lexeme: x               Token: IDENTIFIER
Line 161: Lexeme: )               Token: DELIM_C_PAREN
Line 161: Lexeme: ;               Token: DELIM_SEMCOL
Line 162: Lexeme: -               Token: -
Line 162: Lexeme: (               Token: DELIM_O_PAREN
Line 162: Lexeme: x               Token: IDENTIFIER
Line 162: Lexeme: +               Token: +
Line 162: Lexeme: y               Token: IDENTIFIER
Line 162: Lexeme: )               Token: DELIM_C_PAREN
Line 162: Lexeme: ;               Token: DELIM_SEMCOL
Line 164: Lexeme: }               Token: DELIM_C_BRACE
