Lexical Analysis of syntax_error.shs:

Line 1: Lexeme: HELLO           Token: IDENTIFIER
Line 2: Lexeme: toptier         Token: TOPTIER
Line 2: Lexeme: (               Token: DELIM_O_PAREN
Line 2: Lexeme: )               Token: DELIM_C_PAREN
Line 2: Lexeme: {               Token: DELIM_O_BRACE
Line 3: Lexeme: //              Token: COMMENT
Line 4: Lexeme: input           Token: INPUT          
Line 4: Lexeme: (               Token: DELIM_O_PAREN
Line 4: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 4: Lexeme: ,               Token: DELIM_COMMA
Line 4: Lexeme: &               Token: &
Line 4: Lexeme: age             Token: IDENTIFIER
Line 4: Lexeme: )               Token: DELIM_C_PAREN
Line 4: Lexeme: ;               Token: DELIM_SEMCOL
Line 5: Lexeme: input           Token: INPUT          
Line 5: Lexeme: (               Token: DELIM_O_PAREN
Line 5: Lexeme: "%f"            Token: CONSTANT_TXTFS
Line 5: Lexeme: ,               Token: DELIM_COMMA
Line 5: Lexeme: &               Token: &
Line 5: Lexeme: float_a         Token: IDENTIFIER
Line 5: Lexeme: )               Token: DELIM_C_PAREN
Line 5: Lexeme: ;               Token: DELIM_SEMCOL
Line 6: Lexeme: input           Token: INPUT          
Line 6: Lexeme: (               Token: DELIM_O_PAREN
Line 6: Lexeme: "%s"            Token: CONSTANT_TXTFS
Line 6: Lexeme: ,               Token: DELIM_COMMA
Line 6: Lexeme: &               Token: &
Line 6: Lexeme: vibe_a          Token: IDENTIFIER
Line 6: Lexeme: )               Token: DELIM_C_PAREN
Line 6: Lexeme: ;               Token: DELIM_SEMCOL
Line 7: Lexeme: input           Token: INPUT          
Line 7: Lexeme: (               Token: DELIM_O_PAREN
Line 7: Lexeme: "%c"            Token: CONSTANT_TXTFS
Line 7: Lexeme: ,               Token: DELIM_COMMA
Line 7: Lexeme: &               Token: &
Line 7: Lexeme: letter          Token: IDENTIFIER
Line 7: Lexeme: )               Token: DELIM_C_PAREN
Line 9: Lexeme: //              Token: COMMENT
Line 10: Lexeme: out             Token: OUTPUT         
Line 10: Lexeme: (               Token: DELIM_O_PAREN
Line 10: Lexeme: "String"        Token: CONSTANT_TEXT
Line 10: Lexeme: )               Token: DELIM_C_PAREN
Line 10: Lexeme: ;               Token: DELIM_SEMCOL
Line 11: Lexeme: out             Token: OUTPUT         
Line 11: Lexeme: (               Token: DELIM_O_PAREN
Line 11: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 11: Lexeme: ,               Token: DELIM_COMMA
Line 11: Lexeme: identifier      Token: IDENTIFIER
Line 11: Lexeme: )               Token: DELIM_C_PAREN
Line 11: Lexeme: ;               Token: DELIM_SEMCOL
Line 12: Lexeme: out             Token: OUTPUT         
Line 12: Lexeme: (               Token: DELIM_O_PAREN
Line 12: Lexeme: "Num: %d"       Token: CONSTANT_TXTFS
Line 12: Lexeme: ,               Token: DELIM_COMMA
Line 12: Lexeme: integer         Token: IDENTIFIER
Line 12: Lexeme: )               Token: DELIM_C_PAREN
Line 12: Lexeme: ;               Token: DELIM_SEMCOL
Line 14: Lexeme: out             Token: OUTPUT         
Line 14: Lexeme: (               Token: DELIM_O_PAREN
Line 14: Lexeme: "Age: %d"       Token: CONSTANT_TXTFS
Line 14: Lexeme: ,               Token: DELIM_COMMA
Line 14: Lexeme: age             Token: IDENTIFIER
Line 14: Lexeme: )               Token: DELIM_C_PAREN
Line 14: Lexeme: ;               Token: DELIM_SEMCOL
Line 15: Lexeme: out             Token: OUTPUT         
Line 15: Lexeme: (               Token: DELIM_O_PAREN
Line 15: Lexeme: "Float: %f"     Token: CONSTANT_TXTFS
Line 15: Lexeme: ,               Token: DELIM_COMMA
Line 15: Lexeme: float_a         Token: IDENTIFIER
Line 15: Lexeme: )               Token: DELIM_C_PAREN
Line 15: Lexeme: ;               Token: DELIM_SEMCOL
Line 16: Lexeme: out             Token: OUTPUT         
Line 16: Lexeme: (               Token: DELIM_O_PAREN
Line 16: Lexeme: "Text: %s"      Token: CONSTANT_TXTFS
Line 16: Lexeme: ,               Token: DELIM_COMMA
Line 16: Lexeme: text_a          Token: IDENTIFIER
Line 16: Lexeme: )               Token: DELIM_C_PAREN
Line 16: Lexeme: ;               Token: DELIM_SEMCOL
Line 17: Lexeme: out             Token: OUTPUT         
Line 17: Lexeme: (               Token: DELIM_O_PAREN
Line 17: Lexeme: "Letter: %c"    Token: CONSTANT_TXTFS
Line 17: Lexeme: ,               Token: DELIM_COMMA
Line 17: Lexeme: letter          Token: IDENTIFIER
Line 17: Lexeme: )               Token: DELIM_C_PAREN
Line 17: Lexeme: ;               Token: DELIM_SEMCOL
Line 19: Lexeme: //              Token: COMMENT
Line 20: Lexeme: decimal         Token: IDENTIFIER
Line 20: Lexeme: =               Token: =
Line 20: Lexeme: 89.70           Token: CONSTANT_DRIFT
Line 20: Lexeme: ;               Token: DELIM_SEMCOL
Line 21: Lexeme: count           Token: IDENTIFIER
Line 21: Lexeme: +=              Token: +=
Line 21: Lexeme: test_var        Token: IDENTIFIER
Line 21: Lexeme: ;               Token: DELIM_SEMCOL
Line 22: Lexeme: count           Token: IDENTIFIER
Line 22: Lexeme: *=              Token: *=
Line 22: Lexeme: test_var        Token: IDENTIFIER
Line 22: Lexeme: ;               Token: DELIM_SEMCOL
Line 23: Lexeme: count           Token: IDENTIFIER
Line 23: Lexeme: -=              Token: -=
Line 23: Lexeme: test_var        Token: IDENTIFIER
Line 23: Lexeme: ;               Token: DELIM_SEMCOL
Line 24: Lexeme: count           Token: IDENTIFIER
Line 24: Lexeme: |=              Token: |=
Line 24: Lexeme: test_var        Token: IDENTIFIER
Line 24: Lexeme: ;               Token: DELIM_SEMCOL
Line 25: Lexeme: count           Token: IDENTIFIER
Line 25: Lexeme: %=              Token: %=
Line 25: Lexeme: test_var        Token: IDENTIFIER
Line 25: Lexeme: ;               Token: DELIM_SEMCOL
Line 26: Lexeme: average         Token: IDENTIFIER
Line 26: Lexeme: =               Token: =
Line 26: Lexeme: (               Token: DELIM_O_PAREN
Line 26: Lexeme: math_grade      Token: IDENTIFIER
Line 26: Lexeme: +               Token: +
Line 26: Lexeme: science_grade   Token: IDENTIFIER
Line 26: Lexeme: +               Token: +
Line 26: Lexeme: english_grade   Token: IDENTIFIER
Line 26: Lexeme: )               Token: DELIM_C_PAREN
Line 26: Lexeme: 3               Token: CONSTANT_NUM
Line 26: Lexeme: ;               Token: DELIM_SEMCOL
Line 28: Lexeme: a               Token: IDENTIFIER
Line 28: Lexeme: =               Token: =
Line 28: Lexeme: b               Token: IDENTIFIER
Line 28: Lexeme: ;               Token: DELIM_SEMCOL
Line 29: Lexeme: a               Token: IDENTIFIER
Line 29: Lexeme: =               Token: =
Line 29: Lexeme: 8               Token: CONSTANT_NUM
Line 29: Lexeme: ;               Token: DELIM_SEMCOL
Line 30: Lexeme: a               Token: IDENTIFIER
Line 30: Lexeme: =               Token: =
Line 30: Lexeme: (               Token: DELIM_O_PAREN
Line 30: Lexeme: 8               Token: CONSTANT_NUM
Line 30: Lexeme: +               Token: +
Line 30: Lexeme: n               Token: IDENTIFIER
Line 30: Lexeme: *               Token: *
Line 30: Lexeme: (               Token: DELIM_O_PAREN
Line 30: Lexeme: c               Token: IDENTIFIER
Line 30: Lexeme: *               Token: *
Line 30: Lexeme: f               Token: IDENTIFIER
Line 30: Lexeme: )               Token: DELIM_C_PAREN
Line 30: Lexeme: ==              Token: ==
Line 30: Lexeme: 5               Token: CONSTANT_NUM
Line 30: Lexeme: )               Token: DELIM_C_PAREN
Line 30: Lexeme: ;               Token: DELIM_SEMCOL
Line 32: Lexeme: //              Token: COMMENT
Line 33: Lexeme: if              Token: IF             
Line 33: Lexeme: (               Token: DELIM_O_PAREN
Line 33: Lexeme: average         Token: IDENTIFIER
Line 33: Lexeme: >=              Token: >=
Line 33: Lexeme: 97.0            Token: CONSTANT_DRIFT
Line 33: Lexeme: )               Token: DELIM_C_PAREN
Line 33: Lexeme: {               Token: DELIM_O_BRACE
Line 34: Lexeme: out             Token: OUTPUT         
Line 34: Lexeme: (               Token: DELIM_O_PAREN
Line 34: Lexeme: "GWA is very high!" Token: CONSTANT_TEXT
Line 34: Lexeme: )               Token: DELIM_C_PAREN
Line 34: Lexeme: ;               Token: DELIM_SEMCOL
Line 35: Lexeme: }               Token: DELIM_C_BRACE
Line 37: Lexeme: if              Token: IF             
Line 37: Lexeme: (               Token: DELIM_O_PAREN
Line 37: Lexeme: average         Token: IDENTIFIER
Line 37: Lexeme: >=              Token: >=
Line 37: Lexeme: 1               Token: CONSTANT_NUM
Line 37: Lexeme: )               Token: DELIM_C_PAREN
Line 37: Lexeme: {               Token: DELIM_O_BRACE
Line 38: Lexeme: if              Token: IF             
Line 38: Lexeme: (               Token: DELIM_O_PAREN
Line 38: Lexeme: average         Token: IDENTIFIER
Line 38: Lexeme: <=              Token: <=
Line 38: Lexeme: 5               Token: CONSTANT_NUM
Line 38: Lexeme: )               Token: DELIM_C_PAREN
Line 38: Lexeme: {               Token: DELIM_O_BRACE
Line 39: Lexeme: out             Token: OUTPUT         
Line 39: Lexeme: (               Token: DELIM_O_PAREN
Line 39: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 39: Lexeme: ,               Token: DELIM_COMMA
Line 39: Lexeme: average         Token: IDENTIFIER
Line 39: Lexeme: )               Token: DELIM_C_PAREN
Line 39: Lexeme: ;               Token: DELIM_SEMCOL
Line 40: Lexeme: }               Token: DELIM_C_BRACE
Line 41: Lexeme: }               Token: DELIM_C_BRACE
Line 43: Lexeme: if              Token: IF             
Line 43: Lexeme: (               Token: DELIM_O_PAREN
Line 43: Lexeme: win             Token: IDENTIFIER
Line 43: Lexeme: ==              Token: ==
Line 43: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 43: Lexeme: )               Token: DELIM_C_PAREN
Line 43: Lexeme: {               Token: DELIM_O_BRACE
Line 44: Lexeme: out             Token: OUTPUT         
Line 44: Lexeme: (               Token: DELIM_O_PAREN
Line 44: Lexeme: "You won!"      Token: CONSTANT_TEXT
Line 44: Lexeme: )               Token: DELIM_C_PAREN
Line 44: Lexeme: ;               Token: DELIM_SEMCOL
Line 45: Lexeme: }               Token: DELIM_C_BRACE
Line 45: Lexeme: other           Token: OTHER          
Line 45: Lexeme: {               Token: DELIM_O_BRACE
Line 46: Lexeme: out             Token: OUTPUT         
Line 46: Lexeme: (               Token: DELIM_O_PAREN
Line 46: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 46: Lexeme: )               Token: DELIM_C_PAREN
Line 46: Lexeme: ;               Token: DELIM_SEMCOL
Line 47: Lexeme: }               Token: DELIM_C_BRACE
Line 49: Lexeme: if              Token: IF             
Line 49: Lexeme: (               Token: DELIM_O_PAREN
Line 49: Lexeme: win             Token: IDENTIFIER
Line 49: Lexeme: ==              Token: ==
Line 49: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 49: Lexeme: )               Token: DELIM_C_PAREN
Line 49: Lexeme: {               Token: DELIM_O_BRACE
Line 50: Lexeme: if              Token: IF             
Line 50: Lexeme: (               Token: DELIM_O_PAREN
Line 50: Lexeme: num_win         Token: IDENTIFIER
Line 50: Lexeme: >               Token: >
Line 50: Lexeme: 10              Token: CONSTANT_NUM
Line 50: Lexeme: )               Token: DELIM_C_PAREN
Line 50: Lexeme: {               Token: DELIM_O_BRACE
Line 51: Lexeme: out             Token: OUTPUT         
Line 51: Lexeme: (               Token: DELIM_O_PAREN
Line 51: Lexeme: "You've won for more than 10 times!" Token: CONSTANT_TEXT
Line 51: Lexeme: )               Token: DELIM_C_PAREN
Line 51: Lexeme: ;               Token: DELIM_SEMCOL
Line 52: Lexeme: }               Token: DELIM_C_BRACE
Line 52: Lexeme: other           Token: OTHER          
Line 52: Lexeme: {               Token: DELIM_O_BRACE
Line 53: Lexeme: out             Token: OUTPUT         
Line 53: Lexeme: (               Token: DELIM_O_PAREN
Line 53: Lexeme: "You have only won for 10 times!" Token: CONSTANT_TEXT
Line 53: Lexeme: )               Token: DELIM_C_PAREN
Line 53: Lexeme: ;               Token: DELIM_SEMCOL
Line 54: Lexeme: }               Token: DELIM_C_BRACE
Line 55: Lexeme: }               Token: DELIM_C_BRACE
Line 55: Lexeme: other           Token: OTHER          
Line 55: Lexeme: {               Token: DELIM_O_BRACE
Line 56: Lexeme: out             Token: OUTPUT         
Line 56: Lexeme: (               Token: DELIM_O_PAREN
Line 56: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 56: Lexeme: )               Token: DELIM_C_PAREN
Line 56: Lexeme: ;               Token: DELIM_SEMCOL
Line 57: Lexeme: }               Token: DELIM_C_BRACE
Line 59: Lexeme: //              Token: COMMENT
Line 60: Lexeme: rep             Token: REP            
Line 60: Lexeme: (               Token: DELIM_O_PAREN
Line 60: Lexeme: num             Token: NUM            
Line 60: Lexeme: a               Token: IDENTIFIER
Line 60: Lexeme: =               Token: =
Line 60: Lexeme: 0               Token: CONSTANT_NUM
Line 60: Lexeme: ;               Token: DELIM_SEMCOL
Line 60: Lexeme: a               Token: IDENTIFIER
Line 60: Lexeme: <               Token: <
Line 60: Lexeme: 5               Token: CONSTANT_NUM
Line 60: Lexeme: ;               Token: DELIM_SEMCOL
Line 60: Lexeme: a               Token: IDENTIFIER
Line 60: Lexeme: ++              Token: ++
Line 60: Lexeme: )               Token: DELIM_C_PAREN
Line 60: Lexeme: {               Token: DELIM_O_BRACE
Line 61: Lexeme: out             Token: OUTPUT         
Line 61: Lexeme: (               Token: DELIM_O_PAREN
Line 61: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 61: Lexeme: ,               Token: DELIM_COMMA
Line 61: Lexeme: a               Token: IDENTIFIER
Line 61: Lexeme: )               Token: DELIM_C_PAREN
Line 61: Lexeme: ;               Token: DELIM_SEMCOL
Line 62: Lexeme: }               Token: DELIM_C_BRACE
Line 64: Lexeme: rep             Token: REP            
Line 64: Lexeme: (               Token: DELIM_O_PAREN
Line 64: Lexeme: num             Token: NUM            
Line 64: Lexeme: i               Token: IDENTIFIER
Line 64: Lexeme: =               Token: =
Line 64: Lexeme: 0               Token: CONSTANT_NUM
Line 64: Lexeme: ;               Token: DELIM_SEMCOL
Line 64: Lexeme: i               Token: IDENTIFIER
Line 64: Lexeme: <               Token: <
Line 64: Lexeme: 5               Token: CONSTANT_NUM
Line 64: Lexeme: ;               Token: DELIM_SEMCOL
Line 64: Lexeme: i               Token: IDENTIFIER
Line 64: Lexeme: ++              Token: ++
Line 64: Lexeme: )               Token: DELIM_C_PAREN
Line 64: Lexeme: {               Token: DELIM_O_BRACE
Line 65: Lexeme: out             Token: OUTPUT         
Line 65: Lexeme: (               Token: DELIM_O_PAREN
Line 65: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 65: Lexeme: ,               Token: DELIM_COMMA
Line 65: Lexeme: i               Token: IDENTIFIER
Line 65: Lexeme: )               Token: DELIM_C_PAREN
Line 65: Lexeme: ;               Token: DELIM_SEMCOL
Line 66: Lexeme: rep             Token: REP            
Line 66: Lexeme: (               Token: DELIM_O_PAREN
Line 66: Lexeme: num             Token: NUM            
Line 66: Lexeme: j               Token: IDENTIFIER
Line 66: Lexeme: =               Token: =
Line 66: Lexeme: 0               Token: CONSTANT_NUM
Line 66: Lexeme: ;               Token: DELIM_SEMCOL
Line 66: Lexeme: j               Token: IDENTIFIER
Line 66: Lexeme: <               Token: <
Line 66: Lexeme: 5               Token: CONSTANT_NUM
Line 66: Lexeme: ;               Token: DELIM_SEMCOL
Line 66: Lexeme: j               Token: IDENTIFIER
Line 66: Lexeme: ++              Token: ++
Line 66: Lexeme: )               Token: DELIM_C_PAREN
Line 66: Lexeme: {               Token: DELIM_O_BRACE
Line 67: Lexeme: out             Token: OUTPUT         
Line 67: Lexeme: (               Token: DELIM_O_PAREN
Line 67: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 67: Lexeme: ,               Token: DELIM_COMMA
Line 67: Lexeme: j               Token: IDENTIFIER
Line 67: Lexeme: )               Token: DELIM_C_PAREN
Line 67: Lexeme: ;               Token: DELIM_SEMCOL
Line 68: Lexeme: }               Token: DELIM_C_BRACE
Line 69: Lexeme: }               Token: DELIM_C_BRACE
Line 71: Lexeme: num             Token: NUM            
Line 71: Lexeme: i               Token: IDENTIFIER
Line 71: Lexeme: =               Token: =
Line 71: Lexeme: 0               Token: CONSTANT_NUM
Line 71: Lexeme: ;               Token: DELIM_SEMCOL
Line 73: Lexeme: meanwhile       Token: MEANWHILE      
Line 73: Lexeme: (               Token: DELIM_O_PAREN
Line 73: Lexeme: i               Token: IDENTIFIER
Line 73: Lexeme: <               Token: <
Line 73: Lexeme: 5               Token: CONSTANT_NUM
Line 73: Lexeme: )               Token: DELIM_C_PAREN
Line 73: Lexeme: {               Token: DELIM_O_BRACE
Line 74: Lexeme: out             Token: OUTPUT         
Line 74: Lexeme: (               Token: DELIM_O_PAREN
Line 74: Lexeme: "string test"   Token: CONSTANT_TEXT
Line 74: Lexeme: )               Token: DELIM_C_PAREN
Line 74: Lexeme: ;               Token: DELIM_SEMCOL
Line 75: Lexeme: i               Token: IDENTIFIER
Line 75: Lexeme: ++              Token: ++
Line 75: Lexeme: ;               Token: DELIM_SEMCOL
Line 76: Lexeme: }               Token: DELIM_C_BRACE
Line 78: Lexeme: num             Token: NUM            
Line 78: Lexeme: i               Token: IDENTIFIER
Line 78: Lexeme: =               Token: =
Line 78: Lexeme: 0               Token: CONSTANT_NUM
Line 78: Lexeme: ;               Token: DELIM_SEMCOL
Line 79: Lexeme: num             Token: NUM            
Line 79: Lexeme: j               Token: IDENTIFIER
Line 79: Lexeme: ;               Token: DELIM_SEMCOL
Line 81: Lexeme: meanwhile       Token: MEANWHILE      
Line 81: Lexeme: (               Token: DELIM_O_PAREN
Line 81: Lexeme: i               Token: IDENTIFIER
Line 81: Lexeme: <               Token: <
Line 81: Lexeme: 5               Token: CONSTANT_NUM
Line 81: Lexeme: )               Token: DELIM_C_PAREN
Line 81: Lexeme: {               Token: DELIM_O_BRACE
Line 82: Lexeme: out             Token: OUTPUT         
Line 82: Lexeme: (               Token: DELIM_O_PAREN
Line 82: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 82: Lexeme: ,               Token: DELIM_COMMA
Line 82: Lexeme: identifier      Token: IDENTIFIER
Line 82: Lexeme: )               Token: DELIM_C_PAREN
Line 82: Lexeme: ;               Token: DELIM_SEMCOL
Line 83: Lexeme: j               Token: IDENTIFIER
Line 83: Lexeme: =               Token: =
Line 83: Lexeme: 0               Token: CONSTANT_NUM
Line 83: Lexeme: ;               Token: DELIM_SEMCOL
Line 84: Lexeme: meanwhile       Token: MEANWHILE      
Line 84: Lexeme: (               Token: DELIM_O_PAREN
Line 84: Lexeme: j               Token: IDENTIFIER
Line 84: Lexeme: <               Token: <
Line 84: Lexeme: 5               Token: CONSTANT_NUM
Line 84: Lexeme: )               Token: DELIM_C_PAREN
Line 84: Lexeme: {               Token: DELIM_O_BRACE
Line 85: Lexeme: out             Token: OUTPUT         
Line 85: Lexeme: (               Token: DELIM_O_PAREN
Line 85: Lexeme: "J: %d"         Token: CONSTANT_TXTFS
Line 85: Lexeme: ,               Token: DELIM_COMMA
Line 85: Lexeme: j               Token: IDENTIFIER
Line 85: Lexeme: )               Token: DELIM_C_PAREN
Line 85: Lexeme: ;               Token: DELIM_SEMCOL
Line 86: Lexeme: j               Token: IDENTIFIER
Line 86: Lexeme: ++              Token: ++
Line 86: Lexeme: ;               Token: DELIM_SEMCOL
Line 87: Lexeme: }               Token: DELIM_C_BRACE
Line 88: Lexeme: i               Token: IDENTIFIER
Line 88: Lexeme: ++              Token: ++
Line 88: Lexeme: ;               Token: DELIM_SEMCOL
Line 89: Lexeme: }               Token: DELIM_C_BRACE
Line 91: Lexeme: num             Token: NUM            
Line 91: Lexeme: i               Token: IDENTIFIER
Line 91: Lexeme: =               Token: =
Line 91: Lexeme: 0               Token: CONSTANT_NUM
Line 91: Lexeme: ;               Token: DELIM_SEMCOL
Line 93: Lexeme: do              Token: DO             
Line 93: Lexeme: {               Token: DELIM_O_BRACE
Line 94: Lexeme: out             Token: OUTPUT         
Line 94: Lexeme: (               Token: DELIM_O_PAREN
Line 94: Lexeme: "Test Output"   Token: CONSTANT_TEXT
Line 94: Lexeme: )               Token: DELIM_C_PAREN
Line 94: Lexeme: ;               Token: DELIM_SEMCOL
Line 95: Lexeme: i               Token: IDENTIFIER
Line 95: Lexeme: ++              Token: ++
Line 95: Lexeme: ;               Token: DELIM_SEMCOL
Line 96: Lexeme: }               Token: DELIM_C_BRACE
Line 96: Lexeme: meanwhile       Token: MEANWHILE      
Line 96: Lexeme: (               Token: DELIM_O_PAREN
Line 96: Lexeme: i               Token: IDENTIFIER
Line 96: Lexeme: <               Token: <
Line 96: Lexeme: 5               Token: CONSTANT_NUM
Line 96: Lexeme: )               Token: DELIM_C_PAREN
Line 96: Lexeme: ;               Token: DELIM_SEMCOL
Line 98: Lexeme: num             Token: NUM            
Line 98: Lexeme: i               Token: IDENTIFIER
Line 98: Lexeme: =               Token: =
Line 98: Lexeme: 0               Token: CONSTANT_NUM
Line 98: Lexeme: ;               Token: DELIM_SEMCOL
Line 99: Lexeme: num             Token: NUM            
Line 99: Lexeme: j               Token: IDENTIFIER
Line 99: Lexeme: =               Token: =
Line 99: Lexeme: 0               Token: CONSTANT_NUM
Line 99: Lexeme: ;               Token: DELIM_SEMCOL
Line 101: Lexeme: do              Token: DO             
Line 101: Lexeme: {               Token: DELIM_O_BRACE
Line 102: Lexeme: out             Token: OUTPUT         
Line 102: Lexeme: (               Token: DELIM_O_PAREN
Line 102: Lexeme: "This is an output statement" Token: CONSTANT_TEXT
Line 102: Lexeme: )               Token: DELIM_C_PAREN
Line 102: Lexeme: ;               Token: DELIM_SEMCOL
Line 103: Lexeme: j               Token: IDENTIFIER
Line 103: Lexeme: =               Token: =
Line 103: Lexeme: 0               Token: CONSTANT_NUM
Line 103: Lexeme: ;               Token: DELIM_SEMCOL
Line 104: Lexeme: do              Token: DO             
Line 104: Lexeme: {               Token: DELIM_O_BRACE
Line 105: Lexeme: out             Token: OUTPUT         
Line 105: Lexeme: (               Token: DELIM_O_PAREN
Line 105: Lexeme: "OUTPUT"        Token: CONSTANT_TEXT
Line 105: Lexeme: )               Token: DELIM_C_PAREN
Line 105: Lexeme: ;               Token: DELIM_SEMCOL
Line 106: Lexeme: j               Token: IDENTIFIER
Line 106: Lexeme: ++              Token: ++
Line 106: Lexeme: ;               Token: DELIM_SEMCOL
Line 107: Lexeme: }               Token: DELIM_C_BRACE
Line 107: Lexeme: meanwhile       Token: MEANWHILE      
Line 107: Lexeme: (               Token: DELIM_O_PAREN
Line 107: Lexeme: j               Token: IDENTIFIER
Line 107: Lexeme: <               Token: <
Line 107: Lexeme: 5               Token: CONSTANT_NUM
Line 107: Lexeme: )               Token: DELIM_C_PAREN
Line 107: Lexeme: ;               Token: DELIM_SEMCOL
Line 108: Lexeme: i               Token: IDENTIFIER
Line 108: Lexeme: ++              Token: ++
Line 108: Lexeme: ;               Token: DELIM_SEMCOL
Line 109: Lexeme: }               Token: DELIM_C_BRACE
Line 109: Lexeme: meanwhile       Token: MEANWHILE      
Line 109: Lexeme: (               Token: DELIM_O_PAREN
Line 109: Lexeme: i               Token: IDENTIFIER
Line 109: Lexeme: <               Token: <
Line 109: Lexeme: 5               Token: CONSTANT_NUM
Line 109: Lexeme: )               Token: DELIM_C_PAREN
Line 109: Lexeme: ;               Token: DELIM_SEMCOL
Line 112: Lexeme: rep             Token: REP            
Line 112: Lexeme: (               Token: DELIM_O_PAREN
Line 112: Lexeme: num             Token: NUM            
Line 112: Lexeme: a               Token: IDENTIFIER
Line 112: Lexeme: =               Token: =
Line 112: Lexeme: 1               Token: CONSTANT_NUM
Line 112: Lexeme: ;               Token: DELIM_SEMCOL
Line 112: Lexeme: a               Token: IDENTIFIER
Line 112: Lexeme: >               Token: >
Line 112: Lexeme: 1               Token: CONSTANT_NUM
Line 112: Lexeme: ;               Token: DELIM_SEMCOL
Line 112: Lexeme: a               Token: IDENTIFIER
Line 112: Lexeme: ++              Token: ++
Line 112: Lexeme: )               Token: DELIM_C_PAREN
Line 112: Lexeme: {               Token: DELIM_O_BRACE
Line 113: Lexeme: meanwhile       Token: MEANWHILE      
Line 113: Lexeme: (               Token: DELIM_O_PAREN
Line 113: Lexeme: i               Token: IDENTIFIER
Line 113: Lexeme: >               Token: >
Line 113: Lexeme: 10              Token: CONSTANT_NUM
Line 113: Lexeme: )               Token: DELIM_C_PAREN
Line 113: Lexeme: {               Token: DELIM_O_BRACE
Line 114: Lexeme: do              Token: DO             
Line 114: Lexeme: {               Token: DELIM_O_BRACE
Line 115: Lexeme: test            Token: IDENTIFIER
Line 115: Lexeme: =               Token: =
Line 115: Lexeme: test            Token: IDENTIFIER
Line 115: Lexeme: ;               Token: DELIM_SEMCOL
Line 116: Lexeme: }               Token: DELIM_C_BRACE
Line 116: Lexeme: meanwhile       Token: MEANWHILE      
Line 116: Lexeme: (               Token: DELIM_O_PAREN
Line 116: Lexeme: i               Token: IDENTIFIER
Line 116: Lexeme: <               Token: <
Line 116: Lexeme: 10              Token: CONSTANT_NUM
Line 116: Lexeme: )               Token: DELIM_C_PAREN
Line 116: Lexeme: ;               Token: DELIM_SEMCOL
Line 117: Lexeme: }               Token: DELIM_C_BRACE
Line 118: Lexeme: }               Token: DELIM_C_BRACE
Line 120: Lexeme: //              Token: COMMENT
Line 121: Lexeme: num             Token: NUM            
Line 121: Lexeme: count           Token: IDENTIFIER
Line 121: Lexeme: ;               Token: DELIM_SEMCOL
Line 122: Lexeme: drift           Token: DRIFT          
Line 122: Lexeme: decimal         Token: IDENTIFIER
Line 122: Lexeme: =               Token: =
Line 122: Lexeme: 89.70           Token: CONSTANT_DRIFT
Line 122: Lexeme: ;               Token: DELIM_SEMCOL
Line 123: Lexeme: num             Token: NUM            
Line 123: Lexeme: count           Token: IDENTIFIER
Line 123: Lexeme: =               Token: =
Line 123: Lexeme: number          Token: IDENTIFIER
Line 123: Lexeme: ;               Token: DELIM_SEMCOL
Line 124: Lexeme: drift           Token: DRIFT          
Line 124: Lexeme: math_grade      Token: IDENTIFIER
Line 124: Lexeme: ,               Token: DELIM_COMMA
Line 124: Lexeme: science_grade   Token: IDENTIFIER
Line 124: Lexeme: ,               Token: DELIM_COMMA
Line 124: Lexeme: english_grade   Token: IDENTIFIER
Line 124: Lexeme: ;               Token: DELIM_SEMCOL
Line 125: Lexeme: drift           Token: DRIFT          
Line 125: Lexeme: math_grade      Token: IDENTIFIER
Line 125: Lexeme: =               Token: =
Line 125: Lexeme: 97.5            Token: CONSTANT_DRIFT
Line 125: Lexeme: ,               Token: DELIM_COMMA
Line 125: Lexeme: science_grade   Token: IDENTIFIER
Line 125: Lexeme: =               Token: =
Line 125: Lexeme: 95.5            Token: CONSTANT_DRIFT
Line 125: Lexeme: ,               Token: DELIM_COMMA
Line 125: Lexeme: english_grade   Token: IDENTIFIER
Line 125: Lexeme: =               Token: =
Line 125: Lexeme: math_grade      Token: IDENTIFIER
Line 125: Lexeme: ;               Token: DELIM_SEMCOL
Line 127: Lexeme: u               Token: IDENTIFIER
Line 127: Lexeme: ++              Token: ++
Line 127: Lexeme: ;               Token: DELIM_SEMCOL
Line 128: Lexeme: ++              Token: ++
Line 128: Lexeme: u               Token: IDENTIFIER
Line 128: Lexeme: ;               Token: DELIM_SEMCOL
Line 130: Lexeme: if              Token: IF             
Line 130: Lexeme: (               Token: DELIM_O_PAREN
Line 130: Lexeme: win             Token: IDENTIFIER
Line 130: Lexeme: ==              Token: ==
Line 130: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 130: Lexeme: )               Token: DELIM_C_PAREN
Line 130: Lexeme: {               Token: DELIM_O_BRACE
Line 131: Lexeme: out             Token: OUTPUT         
Line 131: Lexeme: (               Token: DELIM_O_PAREN
Line 131: Lexeme: "You won!"      Token: CONSTANT_TEXT
Line 131: Lexeme: )               Token: DELIM_C_PAREN
Line 131: Lexeme: ;               Token: DELIM_SEMCOL
Line 132: Lexeme: }               Token: DELIM_C_BRACE
Line 132: Lexeme: ex              Token: EX             
Line 132: Lexeme: (               Token: DELIM_O_PAREN
Line 132: Lexeme: win             Token: IDENTIFIER
Line 132: Lexeme: ==              Token: ==
Line 132: Lexeme: cap             Token: CONSTANT_LEGIT
Line 132: Lexeme: )               Token: DELIM_C_PAREN
Line 132: Lexeme: {               Token: DELIM_O_BRACE
Line 133: Lexeme: out             Token: OUTPUT         
Line 133: Lexeme: (               Token: DELIM_O_PAREN
Line 133: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 133: Lexeme: )               Token: DELIM_C_PAREN
Line 133: Lexeme: ;               Token: DELIM_SEMCOL
Line 134: Lexeme: }               Token: DELIM_C_BRACE
Line 136: Lexeme: if              Token: IF             
Line 136: Lexeme: (               Token: DELIM_O_PAREN
Line 136: Lexeme: test            Token: IDENTIFIER
Line 136: Lexeme: )               Token: DELIM_C_PAREN
Line 136: Lexeme: {               Token: DELIM_O_BRACE
Line 137: Lexeme: test            Token: IDENTIFIER
Line 137: Lexeme: =               Token: =
Line 137: Lexeme: test            Token: IDENTIFIER
Line 137: Lexeme: ;               Token: DELIM_SEMCOL
Line 138: Lexeme: }               Token: DELIM_C_BRACE
Line 138: Lexeme: ex              Token: EX             
Line 138: Lexeme: (               Token: DELIM_O_PAREN
Line 138: Lexeme: test            Token: IDENTIFIER
Line 138: Lexeme: )               Token: DELIM_C_PAREN
Line 138: Lexeme: {               Token: DELIM_O_BRACE
Line 139: Lexeme: test            Token: IDENTIFIER
Line 139: Lexeme: =               Token: =
Line 139: Lexeme: test            Token: IDENTIFIER
Line 139: Lexeme: ;               Token: DELIM_SEMCOL
Line 140: Lexeme: }               Token: DELIM_C_BRACE
Line 140: Lexeme: ex              Token: EX             
Line 140: Lexeme: (               Token: DELIM_O_PAREN
Line 140: Lexeme: test            Token: IDENTIFIER
Line 140: Lexeme: )               Token: DELIM_C_PAREN
Line 140: Lexeme: {               Token: DELIM_O_BRACE
Line 141: Lexeme: test            Token: IDENTIFIER
Line 141: Lexeme: =               Token: =
Line 141: Lexeme: test            Token: IDENTIFIER
Line 141: Lexeme: ;               Token: DELIM_SEMCOL
Line 142: Lexeme: }               Token: DELIM_C_BRACE
Line 142: Lexeme: other           Token: OTHER          
Line 142: Lexeme: {               Token: DELIM_O_BRACE
Line 143: Lexeme: if              Token: IF             
Line 143: Lexeme: (               Token: DELIM_O_PAREN
Line 143: Lexeme: test            Token: IDENTIFIER
Line 143: Lexeme: )               Token: DELIM_C_PAREN
Line 143: Lexeme: {               Token: DELIM_O_BRACE
Line 144: Lexeme: hello           Token: IDENTIFIER
Line 144: Lexeme: ;               Token: DELIM_SEMCOL
Line 145: Lexeme: }               Token: DELIM_C_BRACE
Line 145: Lexeme: other           Token: OTHER          
Line 145: Lexeme: {               Token: DELIM_O_BRACE
Line 146: Lexeme: hello           Token: IDENTIFIER
Line 146: Lexeme: ;               Token: DELIM_SEMCOL
Line 147: Lexeme: }               Token: DELIM_C_BRACE
Line 148: Lexeme: }               Token: DELIM_C_BRACE
Line 150: Lexeme: num             Token: NUM            
Line 150: Lexeme: i               Token: IDENTIFIER
Line 150: Lexeme: ,               Token: DELIM_COMMA
Line 150: Lexeme: j               Token: IDENTIFIER
Line 150: Lexeme: =               Token: =
Line 150: Lexeme: 0               Token: CONSTANT_NUM
Line 150: Lexeme: ,               Token: DELIM_COMMA
Line 150: Lexeme: k               Token: IDENTIFIER
Line 150: Lexeme: =               Token: =
Line 150: Lexeme: 0               Token: CONSTANT_NUM
Line 150: Lexeme: ;               Token: DELIM_SEMCOL
Line 152: Lexeme: !               Token: !
Line 152: Lexeme: (               Token: DELIM_O_PAREN
Line 152: Lexeme: x               Token: IDENTIFIER
Line 152: Lexeme: )               Token: DELIM_C_PAREN
Line 152: Lexeme: ;               Token: DELIM_SEMCOL
Line 153: Lexeme: -               Token: -
Line 153: Lexeme: (               Token: DELIM_O_PAREN
Line 153: Lexeme: x               Token: IDENTIFIER
Line 153: Lexeme: +               Token: +
Line 153: Lexeme: y               Token: IDENTIFIER
Line 153: Lexeme: )               Token: DELIM_C_PAREN
Line 153: Lexeme: ;               Token: DELIM_SEMCOL
Line 155: Lexeme: x               Token: IDENTIFIER
Line 155: Lexeme: =               Token: =
Line 155: Lexeme: y               Token: IDENTIFIER
Line 155: Lexeme: +=              Token: +=
Line 155: Lexeme: z               Token: IDENTIFIER
Line 155: Lexeme: ;               Token: DELIM_SEMCOL
Line 157: Lexeme: if              Token: IF             
Line 157: Lexeme: (               Token: DELIM_O_PAREN
Line 157: Lexeme: x               Token: IDENTIFIER
Line 157: Lexeme: )               Token: DELIM_C_PAREN
Line 157: Lexeme: {               Token: DELIM_O_BRACE
Line 158: Lexeme: ++              Token: ++
Line 158: Lexeme: y               Token: IDENTIFIER
Line 158: Lexeme: ;               Token: DELIM_SEMCOL
Line 159: Lexeme: }               Token: DELIM_C_BRACE
Line 160: Lexeme: }               Token: DELIM_C_BRACE
