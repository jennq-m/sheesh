Lexical Analysis of syntax_file.shs:

Line 1: Lexeme: toptier         Token: TOPTIER
Line 1: Lexeme: (               Token: DELIM_O_PAREN
Line 1: Lexeme: )               Token: DELIM_C_PAREN
Line 1: Lexeme: {               Token: DELIM_O_BRACE
Line 2: Lexeme: this            Token: IDENTIFIER
Line 2: Lexeme: ||              Token: ||
Line 2: Lexeme: that            Token: IDENTIFIER
Line 2: Lexeme: ;               Token: DELIM_SEMCOL
Line 3: Lexeme: this            Token: IDENTIFIER
Line 3: Lexeme: &&              Token: &&
Line 3: Lexeme: that            Token: IDENTIFIER
Line 3: Lexeme: ;               Token: DELIM_SEMCOL
Line 4: Lexeme: //              Token: COMMENT
Line 5: Lexeme: input           Token: INPUT          
Line 5: Lexeme: (               Token: DELIM_O_PAREN
Line 5: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 5: Lexeme: ,               Token: DELIM_COMMA
Line 5: Lexeme: &               Token: &
Line 5: Lexeme: age             Token: IDENTIFIER
Line 5: Lexeme: )               Token: DELIM_C_PAREN
Line 5: Lexeme: ;               Token: DELIM_SEMCOL
Line 6: Lexeme: input           Token: INPUT          
Line 6: Lexeme: (               Token: DELIM_O_PAREN
Line 6: Lexeme: "%f"            Token: CONSTANT_TXTFS
Line 6: Lexeme: ,               Token: DELIM_COMMA
Line 6: Lexeme: &               Token: &
Line 6: Lexeme: float_a         Token: IDENTIFIER
Line 6: Lexeme: )               Token: DELIM_C_PAREN
Line 6: Lexeme: ;               Token: DELIM_SEMCOL
Line 7: Lexeme: input           Token: INPUT          
Line 7: Lexeme: (               Token: DELIM_O_PAREN
Line 7: Lexeme: "%s"            Token: CONSTANT_TXTFS
Line 7: Lexeme: ,               Token: DELIM_COMMA
Line 7: Lexeme: &               Token: &
Line 7: Lexeme: vibe_a          Token: IDENTIFIER
Line 7: Lexeme: )               Token: DELIM_C_PAREN
Line 7: Lexeme: ;               Token: DELIM_SEMCOL
Line 8: Lexeme: input           Token: INPUT          
Line 8: Lexeme: (               Token: DELIM_O_PAREN
Line 8: Lexeme: "%c"            Token: CONSTANT_TXTFS
Line 8: Lexeme: ,               Token: DELIM_COMMA
Line 8: Lexeme: &               Token: &
Line 8: Lexeme: letter          Token: IDENTIFIER
Line 8: Lexeme: )               Token: DELIM_C_PAREN
Line 8: Lexeme: ;               Token: DELIM_SEMCOL
Line 10: Lexeme: //              Token: COMMENT
Line 11: Lexeme: out             Token: OUTPUT         
Line 11: Lexeme: (               Token: DELIM_O_PAREN
Line 11: Lexeme: "String"        Token: CONSTANT_TEXT
Line 11: Lexeme: )               Token: DELIM_C_PAREN
Line 11: Lexeme: ;               Token: DELIM_SEMCOL
Line 12: Lexeme: out             Token: OUTPUT         
Line 12: Lexeme: (               Token: DELIM_O_PAREN
Line 12: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 12: Lexeme: ,               Token: DELIM_COMMA
Line 12: Lexeme: identifier      Token: IDENTIFIER
Line 12: Lexeme: )               Token: DELIM_C_PAREN
Line 12: Lexeme: ;               Token: DELIM_SEMCOL
Line 13: Lexeme: out             Token: OUTPUT         
Line 13: Lexeme: (               Token: DELIM_O_PAREN
Line 13: Lexeme: "Num: %d"       Token: CONSTANT_TXTFS
Line 13: Lexeme: ,               Token: DELIM_COMMA
Line 13: Lexeme: integer         Token: IDENTIFIER
Line 13: Lexeme: )               Token: DELIM_C_PAREN
Line 13: Lexeme: ;               Token: DELIM_SEMCOL
Line 15: Lexeme: out             Token: OUTPUT         
Line 15: Lexeme: (               Token: DELIM_O_PAREN
Line 15: Lexeme: "Age: %d"       Token: CONSTANT_TXTFS
Line 15: Lexeme: ,               Token: DELIM_COMMA
Line 15: Lexeme: age             Token: IDENTIFIER
Line 15: Lexeme: )               Token: DELIM_C_PAREN
Line 15: Lexeme: ;               Token: DELIM_SEMCOL
Line 16: Lexeme: out             Token: OUTPUT         
Line 16: Lexeme: (               Token: DELIM_O_PAREN
Line 16: Lexeme: "Float: %f"     Token: CONSTANT_TXTFS
Line 16: Lexeme: ,               Token: DELIM_COMMA
Line 16: Lexeme: float_a         Token: IDENTIFIER
Line 16: Lexeme: )               Token: DELIM_C_PAREN
Line 16: Lexeme: ;               Token: DELIM_SEMCOL
Line 17: Lexeme: out             Token: OUTPUT         
Line 17: Lexeme: (               Token: DELIM_O_PAREN
Line 17: Lexeme: "Text: %s"      Token: CONSTANT_TXTFS
Line 17: Lexeme: ,               Token: DELIM_COMMA
Line 17: Lexeme: text_a          Token: IDENTIFIER
Line 17: Lexeme: )               Token: DELIM_C_PAREN
Line 17: Lexeme: ;               Token: DELIM_SEMCOL
Line 18: Lexeme: out             Token: OUTPUT         
Line 18: Lexeme: (               Token: DELIM_O_PAREN
Line 18: Lexeme: "Letter: %c"    Token: CONSTANT_TXTFS
Line 18: Lexeme: ,               Token: DELIM_COMMA
Line 18: Lexeme: letter          Token: IDENTIFIER
Line 18: Lexeme: )               Token: DELIM_C_PAREN
Line 18: Lexeme: ;               Token: DELIM_SEMCOL
Line 20: Lexeme: //              Token: COMMENT
Line 21: Lexeme: decimal         Token: IDENTIFIER
Line 21: Lexeme: =               Token: =
Line 21: Lexeme: 89.70           Token: CONSTANT_DRIFT
Line 21: Lexeme: ;               Token: DELIM_SEMCOL
Line 22: Lexeme: count           Token: IDENTIFIER
Line 22: Lexeme: +=              Token: +=
Line 22: Lexeme: test_var        Token: IDENTIFIER
Line 22: Lexeme: ;               Token: DELIM_SEMCOL
Line 23: Lexeme: count           Token: IDENTIFIER
Line 23: Lexeme: *=              Token: *=
Line 23: Lexeme: test_var        Token: IDENTIFIER
Line 23: Lexeme: ;               Token: DELIM_SEMCOL
Line 24: Lexeme: count           Token: IDENTIFIER
Line 24: Lexeme: -=              Token: -=
Line 24: Lexeme: test_var        Token: IDENTIFIER
Line 24: Lexeme: ;               Token: DELIM_SEMCOL
Line 25: Lexeme: count           Token: IDENTIFIER
Line 25: Lexeme: |=              Token: |=
Line 25: Lexeme: test_var        Token: IDENTIFIER
Line 25: Lexeme: ;               Token: DELIM_SEMCOL
Line 26: Lexeme: count           Token: IDENTIFIER
Line 26: Lexeme: %=              Token: %=
Line 26: Lexeme: test_var        Token: IDENTIFIER
Line 26: Lexeme: ;               Token: DELIM_SEMCOL
Line 27: Lexeme: average         Token: IDENTIFIER
Line 27: Lexeme: =               Token: =
Line 27: Lexeme: (               Token: DELIM_O_PAREN
Line 27: Lexeme: math_grade      Token: IDENTIFIER
Line 27: Lexeme: +               Token: +
Line 27: Lexeme: science_grade   Token: IDENTIFIER
Line 27: Lexeme: +               Token: +
Line 27: Lexeme: english_grade   Token: IDENTIFIER
Line 27: Lexeme: )               Token: DELIM_C_PAREN
Line 27: Lexeme: /               Token: /
Line 27: Lexeme: 3               Token: CONSTANT_NUM
Line 27: Lexeme: ;               Token: DELIM_SEMCOL
Line 29: Lexeme: a               Token: IDENTIFIER
Line 29: Lexeme: =               Token: =
Line 29: Lexeme: b               Token: IDENTIFIER
Line 29: Lexeme: ;               Token: DELIM_SEMCOL
Line 30: Lexeme: a               Token: IDENTIFIER
Line 30: Lexeme: =               Token: =
Line 30: Lexeme: 8               Token: CONSTANT_NUM
Line 30: Lexeme: ;               Token: DELIM_SEMCOL
Line 31: Lexeme: a               Token: IDENTIFIER
Line 31: Lexeme: =               Token: =
Line 31: Lexeme: (               Token: DELIM_O_PAREN
Line 31: Lexeme: 8               Token: CONSTANT_NUM
Line 31: Lexeme: +               Token: +
Line 31: Lexeme: n               Token: IDENTIFIER
Line 31: Lexeme: *               Token: *
Line 31: Lexeme: (               Token: DELIM_O_PAREN
Line 31: Lexeme: c               Token: IDENTIFIER
Line 31: Lexeme: *               Token: *
Line 31: Lexeme: f               Token: IDENTIFIER
Line 31: Lexeme: )               Token: DELIM_C_PAREN
Line 31: Lexeme: ==              Token: ==
Line 31: Lexeme: 5               Token: CONSTANT_NUM
Line 31: Lexeme: )               Token: DELIM_C_PAREN
Line 31: Lexeme: ;               Token: DELIM_SEMCOL
Line 33: Lexeme: //              Token: COMMENT
Line 34: Lexeme: if              Token: IF             
Line 34: Lexeme: (               Token: DELIM_O_PAREN
Line 34: Lexeme: average         Token: IDENTIFIER
Line 34: Lexeme: >=              Token: >=
Line 34: Lexeme: 97.0            Token: CONSTANT_DRIFT
Line 34: Lexeme: )               Token: DELIM_C_PAREN
Line 34: Lexeme: {               Token: DELIM_O_BRACE
Line 35: Lexeme: out             Token: OUTPUT         
Line 35: Lexeme: (               Token: DELIM_O_PAREN
Line 35: Lexeme: "GWA is very high!" Token: CONSTANT_TEXT
Line 35: Lexeme: )               Token: DELIM_C_PAREN
Line 35: Lexeme: ;               Token: DELIM_SEMCOL
Line 36: Lexeme: }               Token: DELIM_C_BRACE
Line 38: Lexeme: if              Token: IF             
Line 38: Lexeme: (               Token: DELIM_O_PAREN
Line 38: Lexeme: average         Token: IDENTIFIER
Line 38: Lexeme: >=              Token: >=
Line 38: Lexeme: 1               Token: CONSTANT_NUM
Line 38: Lexeme: )               Token: DELIM_C_PAREN
Line 38: Lexeme: {               Token: DELIM_O_BRACE
Line 39: Lexeme: if              Token: IF             
Line 39: Lexeme: (               Token: DELIM_O_PAREN
Line 39: Lexeme: average         Token: IDENTIFIER
Line 39: Lexeme: <=              Token: <=
Line 39: Lexeme: 5               Token: CONSTANT_NUM
Line 39: Lexeme: )               Token: DELIM_C_PAREN
Line 39: Lexeme: {               Token: DELIM_O_BRACE
Line 40: Lexeme: out             Token: OUTPUT         
Line 40: Lexeme: (               Token: DELIM_O_PAREN
Line 40: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 40: Lexeme: ,               Token: DELIM_COMMA
Line 40: Lexeme: average         Token: IDENTIFIER
Line 40: Lexeme: )               Token: DELIM_C_PAREN
Line 40: Lexeme: ;               Token: DELIM_SEMCOL
Line 41: Lexeme: }               Token: DELIM_C_BRACE
Line 42: Lexeme: }               Token: DELIM_C_BRACE
Line 44: Lexeme: if              Token: IF             
Line 44: Lexeme: (               Token: DELIM_O_PAREN
Line 44: Lexeme: win             Token: IDENTIFIER
Line 44: Lexeme: ==              Token: ==
Line 44: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 44: Lexeme: )               Token: DELIM_C_PAREN
Line 44: Lexeme: {               Token: DELIM_O_BRACE
Line 45: Lexeme: out             Token: OUTPUT         
Line 45: Lexeme: (               Token: DELIM_O_PAREN
Line 45: Lexeme: "You won!"      Token: CONSTANT_TEXT
Line 45: Lexeme: )               Token: DELIM_C_PAREN
Line 45: Lexeme: ;               Token: DELIM_SEMCOL
Line 46: Lexeme: }               Token: DELIM_C_BRACE
Line 46: Lexeme: other           Token: OTHER          
Line 46: Lexeme: {               Token: DELIM_O_BRACE
Line 47: Lexeme: out             Token: OUTPUT         
Line 47: Lexeme: (               Token: DELIM_O_PAREN
Line 47: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 47: Lexeme: )               Token: DELIM_C_PAREN
Line 47: Lexeme: ;               Token: DELIM_SEMCOL
Line 48: Lexeme: }               Token: DELIM_C_BRACE
Line 50: Lexeme: if              Token: IF             
Line 50: Lexeme: (               Token: DELIM_O_PAREN
Line 50: Lexeme: win             Token: IDENTIFIER
Line 50: Lexeme: ==              Token: ==
Line 50: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 50: Lexeme: )               Token: DELIM_C_PAREN
Line 50: Lexeme: {               Token: DELIM_O_BRACE
Line 51: Lexeme: if              Token: IF             
Line 51: Lexeme: (               Token: DELIM_O_PAREN
Line 51: Lexeme: num_win         Token: IDENTIFIER
Line 51: Lexeme: >               Token: >
Line 51: Lexeme: 10              Token: CONSTANT_NUM
Line 51: Lexeme: )               Token: DELIM_C_PAREN
Line 51: Lexeme: {               Token: DELIM_O_BRACE
Line 52: Lexeme: out             Token: OUTPUT         
Line 52: Lexeme: (               Token: DELIM_O_PAREN
Line 52: Lexeme: "You've won for more than 10 times!" Token: CONSTANT_TEXT
Line 52: Lexeme: )               Token: DELIM_C_PAREN
Line 52: Lexeme: ;               Token: DELIM_SEMCOL
Line 53: Lexeme: }               Token: DELIM_C_BRACE
Line 53: Lexeme: other           Token: OTHER          
Line 53: Lexeme: {               Token: DELIM_O_BRACE
Line 54: Lexeme: out             Token: OUTPUT         
Line 54: Lexeme: (               Token: DELIM_O_PAREN
Line 54: Lexeme: "You have only won for 10 times!" Token: CONSTANT_TEXT
Line 54: Lexeme: )               Token: DELIM_C_PAREN
Line 54: Lexeme: ;               Token: DELIM_SEMCOL
Line 55: Lexeme: }               Token: DELIM_C_BRACE
Line 56: Lexeme: }               Token: DELIM_C_BRACE
Line 56: Lexeme: other           Token: OTHER          
Line 56: Lexeme: {               Token: DELIM_O_BRACE
Line 57: Lexeme: out             Token: OUTPUT         
Line 57: Lexeme: (               Token: DELIM_O_PAREN
Line 57: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 57: Lexeme: )               Token: DELIM_C_PAREN
Line 57: Lexeme: ;               Token: DELIM_SEMCOL
Line 58: Lexeme: }               Token: DELIM_C_BRACE
Line 60: Lexeme: //              Token: COMMENT
Line 61: Lexeme: rep             Token: REP            
Line 61: Lexeme: (               Token: DELIM_O_PAREN
Line 61: Lexeme: num             Token: NUM            
Line 61: Lexeme: a               Token: IDENTIFIER
Line 61: Lexeme: =               Token: =
Line 61: Lexeme: 0               Token: CONSTANT_NUM
Line 61: Lexeme: ;               Token: DELIM_SEMCOL
Line 61: Lexeme: a               Token: IDENTIFIER
Line 61: Lexeme: <               Token: <
Line 61: Lexeme: 5               Token: CONSTANT_NUM
Line 61: Lexeme: ;               Token: DELIM_SEMCOL
Line 61: Lexeme: a               Token: IDENTIFIER
Line 61: Lexeme: ++              Token: ++
Line 61: Lexeme: )               Token: DELIM_C_PAREN
Line 61: Lexeme: {               Token: DELIM_O_BRACE
Line 62: Lexeme: out             Token: OUTPUT         
Line 62: Lexeme: (               Token: DELIM_O_PAREN
Line 62: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 62: Lexeme: ,               Token: DELIM_COMMA
Line 62: Lexeme: a               Token: IDENTIFIER
Line 62: Lexeme: )               Token: DELIM_C_PAREN
Line 62: Lexeme: ;               Token: DELIM_SEMCOL
Line 63: Lexeme: }               Token: DELIM_C_BRACE
Line 65: Lexeme: rep             Token: REP            
Line 65: Lexeme: (               Token: DELIM_O_PAREN
Line 65: Lexeme: num             Token: NUM            
Line 65: Lexeme: i               Token: IDENTIFIER
Line 65: Lexeme: =               Token: =
Line 65: Lexeme: 0               Token: CONSTANT_NUM
Line 65: Lexeme: ;               Token: DELIM_SEMCOL
Line 65: Lexeme: i               Token: IDENTIFIER
Line 65: Lexeme: <               Token: <
Line 65: Lexeme: 5               Token: CONSTANT_NUM
Line 65: Lexeme: ;               Token: DELIM_SEMCOL
Line 65: Lexeme: i               Token: IDENTIFIER
Line 65: Lexeme: ++              Token: ++
Line 65: Lexeme: )               Token: DELIM_C_PAREN
Line 65: Lexeme: {               Token: DELIM_O_BRACE
Line 66: Lexeme: out             Token: OUTPUT         
Line 66: Lexeme: (               Token: DELIM_O_PAREN
Line 66: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 66: Lexeme: ,               Token: DELIM_COMMA
Line 66: Lexeme: i               Token: IDENTIFIER
Line 66: Lexeme: )               Token: DELIM_C_PAREN
Line 66: Lexeme: ;               Token: DELIM_SEMCOL
Line 67: Lexeme: rep             Token: REP            
Line 67: Lexeme: (               Token: DELIM_O_PAREN
Line 67: Lexeme: num             Token: NUM            
Line 67: Lexeme: j               Token: IDENTIFIER
Line 67: Lexeme: =               Token: =
Line 67: Lexeme: 0               Token: CONSTANT_NUM
Line 67: Lexeme: ;               Token: DELIM_SEMCOL
Line 67: Lexeme: j               Token: IDENTIFIER
Line 67: Lexeme: <               Token: <
Line 67: Lexeme: 5               Token: CONSTANT_NUM
Line 67: Lexeme: ;               Token: DELIM_SEMCOL
Line 67: Lexeme: j               Token: IDENTIFIER
Line 67: Lexeme: ++              Token: ++
Line 67: Lexeme: )               Token: DELIM_C_PAREN
Line 67: Lexeme: {               Token: DELIM_O_BRACE
Line 68: Lexeme: out             Token: OUTPUT         
Line 68: Lexeme: (               Token: DELIM_O_PAREN
Line 68: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 68: Lexeme: ,               Token: DELIM_COMMA
Line 68: Lexeme: j               Token: IDENTIFIER
Line 68: Lexeme: )               Token: DELIM_C_PAREN
Line 68: Lexeme: ;               Token: DELIM_SEMCOL
Line 69: Lexeme: }               Token: DELIM_C_BRACE
Line 70: Lexeme: }               Token: DELIM_C_BRACE
Line 72: Lexeme: num             Token: NUM            
Line 72: Lexeme: i               Token: IDENTIFIER
Line 72: Lexeme: =               Token: =
Line 72: Lexeme: 0               Token: CONSTANT_NUM
Line 72: Lexeme: ;               Token: DELIM_SEMCOL
Line 74: Lexeme: meanwhile       Token: MEANWHILE      
Line 74: Lexeme: (               Token: DELIM_O_PAREN
Line 74: Lexeme: i               Token: IDENTIFIER
Line 74: Lexeme: <               Token: <
Line 74: Lexeme: 5               Token: CONSTANT_NUM
Line 74: Lexeme: )               Token: DELIM_C_PAREN
Line 74: Lexeme: {               Token: DELIM_O_BRACE
Line 75: Lexeme: out             Token: OUTPUT         
Line 75: Lexeme: (               Token: DELIM_O_PAREN
Line 75: Lexeme: "string test"   Token: CONSTANT_TEXT
Line 75: Lexeme: )               Token: DELIM_C_PAREN
Line 75: Lexeme: ;               Token: DELIM_SEMCOL
Line 76: Lexeme: i               Token: IDENTIFIER
Line 76: Lexeme: ++              Token: ++
Line 76: Lexeme: ;               Token: DELIM_SEMCOL
Line 77: Lexeme: }               Token: DELIM_C_BRACE
Line 79: Lexeme: num             Token: NUM            
Line 79: Lexeme: i               Token: IDENTIFIER
Line 79: Lexeme: =               Token: =
Line 79: Lexeme: 0               Token: CONSTANT_NUM
Line 79: Lexeme: ;               Token: DELIM_SEMCOL
Line 80: Lexeme: num             Token: NUM            
Line 80: Lexeme: j               Token: IDENTIFIER
Line 80: Lexeme: ;               Token: DELIM_SEMCOL
Line 82: Lexeme: meanwhile       Token: MEANWHILE      
Line 82: Lexeme: (               Token: DELIM_O_PAREN
Line 82: Lexeme: i               Token: IDENTIFIER
Line 82: Lexeme: <               Token: <
Line 82: Lexeme: 5               Token: CONSTANT_NUM
Line 82: Lexeme: )               Token: DELIM_C_PAREN
Line 82: Lexeme: {               Token: DELIM_O_BRACE
Line 83: Lexeme: out             Token: OUTPUT         
Line 83: Lexeme: (               Token: DELIM_O_PAREN
Line 83: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 83: Lexeme: ,               Token: DELIM_COMMA
Line 83: Lexeme: identifier      Token: IDENTIFIER
Line 83: Lexeme: )               Token: DELIM_C_PAREN
Line 83: Lexeme: ;               Token: DELIM_SEMCOL
Line 84: Lexeme: j               Token: IDENTIFIER
Line 84: Lexeme: =               Token: =
Line 84: Lexeme: 0               Token: CONSTANT_NUM
Line 84: Lexeme: ;               Token: DELIM_SEMCOL
Line 85: Lexeme: meanwhile       Token: MEANWHILE      
Line 85: Lexeme: (               Token: DELIM_O_PAREN
Line 85: Lexeme: j               Token: IDENTIFIER
Line 85: Lexeme: <               Token: <
Line 85: Lexeme: 5               Token: CONSTANT_NUM
Line 85: Lexeme: )               Token: DELIM_C_PAREN
Line 85: Lexeme: {               Token: DELIM_O_BRACE
Line 86: Lexeme: out             Token: OUTPUT         
Line 86: Lexeme: (               Token: DELIM_O_PAREN
Line 86: Lexeme: "J: %d"         Token: CONSTANT_TXTFS
Line 86: Lexeme: ,               Token: DELIM_COMMA
Line 86: Lexeme: j               Token: IDENTIFIER
Line 86: Lexeme: )               Token: DELIM_C_PAREN
Line 86: Lexeme: ;               Token: DELIM_SEMCOL
Line 87: Lexeme: j               Token: IDENTIFIER
Line 87: Lexeme: ++              Token: ++
Line 87: Lexeme: ;               Token: DELIM_SEMCOL
Line 88: Lexeme: }               Token: DELIM_C_BRACE
Line 89: Lexeme: i               Token: IDENTIFIER
Line 89: Lexeme: ++              Token: ++
Line 89: Lexeme: ;               Token: DELIM_SEMCOL
Line 90: Lexeme: }               Token: DELIM_C_BRACE
Line 92: Lexeme: num             Token: NUM            
Line 92: Lexeme: i               Token: IDENTIFIER
Line 92: Lexeme: =               Token: =
Line 92: Lexeme: 0               Token: CONSTANT_NUM
Line 92: Lexeme: ;               Token: DELIM_SEMCOL
Line 94: Lexeme: do              Token: DO             
Line 94: Lexeme: {               Token: DELIM_O_BRACE
Line 95: Lexeme: out             Token: OUTPUT         
Line 95: Lexeme: (               Token: DELIM_O_PAREN
Line 95: Lexeme: "Test Output"   Token: CONSTANT_TEXT
Line 95: Lexeme: )               Token: DELIM_C_PAREN
Line 95: Lexeme: ;               Token: DELIM_SEMCOL
Line 96: Lexeme: i               Token: IDENTIFIER
Line 96: Lexeme: ++              Token: ++
Line 96: Lexeme: ;               Token: DELIM_SEMCOL
Line 97: Lexeme: }               Token: DELIM_C_BRACE
Line 97: Lexeme: meanwhile       Token: MEANWHILE      
Line 97: Lexeme: (               Token: DELIM_O_PAREN
Line 97: Lexeme: i               Token: IDENTIFIER
Line 97: Lexeme: <               Token: <
Line 97: Lexeme: 5               Token: CONSTANT_NUM
Line 97: Lexeme: )               Token: DELIM_C_PAREN
Line 97: Lexeme: ;               Token: DELIM_SEMCOL
Line 99: Lexeme: num             Token: NUM            
Line 99: Lexeme: i               Token: IDENTIFIER
Line 99: Lexeme: =               Token: =
Line 99: Lexeme: 0               Token: CONSTANT_NUM
Line 99: Lexeme: ;               Token: DELIM_SEMCOL
Line 100: Lexeme: num             Token: NUM            
Line 100: Lexeme: j               Token: IDENTIFIER
Line 100: Lexeme: =               Token: =
Line 100: Lexeme: 0               Token: CONSTANT_NUM
Line 100: Lexeme: ;               Token: DELIM_SEMCOL
Line 102: Lexeme: do              Token: DO             
Line 102: Lexeme: {               Token: DELIM_O_BRACE
Line 103: Lexeme: out             Token: OUTPUT         
Line 103: Lexeme: (               Token: DELIM_O_PAREN
Line 103: Lexeme: "This is an output statement" Token: CONSTANT_TEXT
Line 103: Lexeme: )               Token: DELIM_C_PAREN
Line 103: Lexeme: ;               Token: DELIM_SEMCOL
Line 104: Lexeme: j               Token: IDENTIFIER
Line 104: Lexeme: =               Token: =
Line 104: Lexeme: 0               Token: CONSTANT_NUM
Line 104: Lexeme: ;               Token: DELIM_SEMCOL
Line 105: Lexeme: do              Token: DO             
Line 105: Lexeme: {               Token: DELIM_O_BRACE
Line 106: Lexeme: out             Token: OUTPUT         
Line 106: Lexeme: (               Token: DELIM_O_PAREN
Line 106: Lexeme: "OUTPUT"        Token: CONSTANT_TEXT
Line 106: Lexeme: )               Token: DELIM_C_PAREN
Line 106: Lexeme: ;               Token: DELIM_SEMCOL
Line 107: Lexeme: j               Token: IDENTIFIER
Line 107: Lexeme: ++              Token: ++
Line 107: Lexeme: ;               Token: DELIM_SEMCOL
Line 108: Lexeme: }               Token: DELIM_C_BRACE
Line 108: Lexeme: meanwhile       Token: MEANWHILE      
Line 108: Lexeme: (               Token: DELIM_O_PAREN
Line 108: Lexeme: j               Token: IDENTIFIER
Line 108: Lexeme: <               Token: <
Line 108: Lexeme: 5               Token: CONSTANT_NUM
Line 108: Lexeme: )               Token: DELIM_C_PAREN
Line 108: Lexeme: ;               Token: DELIM_SEMCOL
Line 109: Lexeme: i               Token: IDENTIFIER
Line 109: Lexeme: ++              Token: ++
Line 109: Lexeme: ;               Token: DELIM_SEMCOL
Line 110: Lexeme: }               Token: DELIM_C_BRACE
Line 110: Lexeme: meanwhile       Token: MEANWHILE      
Line 110: Lexeme: (               Token: DELIM_O_PAREN
Line 110: Lexeme: i               Token: IDENTIFIER
Line 110: Lexeme: <               Token: <
Line 110: Lexeme: 5               Token: CONSTANT_NUM
Line 110: Lexeme: )               Token: DELIM_C_PAREN
Line 110: Lexeme: ;               Token: DELIM_SEMCOL
Line 113: Lexeme: rep             Token: REP            
Line 113: Lexeme: (               Token: DELIM_O_PAREN
Line 113: Lexeme: num             Token: NUM            
Line 113: Lexeme: a               Token: IDENTIFIER
Line 113: Lexeme: =               Token: =
Line 113: Lexeme: 1               Token: CONSTANT_NUM
Line 113: Lexeme: ;               Token: DELIM_SEMCOL
Line 113: Lexeme: a               Token: IDENTIFIER
Line 113: Lexeme: >               Token: >
Line 113: Lexeme: 1               Token: CONSTANT_NUM
Line 113: Lexeme: ;               Token: DELIM_SEMCOL
Line 113: Lexeme: a               Token: IDENTIFIER
Line 113: Lexeme: ++              Token: ++
Line 113: Lexeme: )               Token: DELIM_C_PAREN
Line 113: Lexeme: {               Token: DELIM_O_BRACE
Line 114: Lexeme: meanwhile       Token: MEANWHILE      
Line 114: Lexeme: (               Token: DELIM_O_PAREN
Line 114: Lexeme: i               Token: IDENTIFIER
Line 114: Lexeme: >               Token: >
Line 114: Lexeme: 10              Token: CONSTANT_NUM
Line 114: Lexeme: )               Token: DELIM_C_PAREN
Line 114: Lexeme: {               Token: DELIM_O_BRACE
Line 115: Lexeme: do              Token: DO             
Line 115: Lexeme: {               Token: DELIM_O_BRACE
Line 116: Lexeme: test            Token: IDENTIFIER
Line 116: Lexeme: =               Token: =
Line 116: Lexeme: test            Token: IDENTIFIER
Line 116: Lexeme: ;               Token: DELIM_SEMCOL
Line 117: Lexeme: }               Token: DELIM_C_BRACE
Line 117: Lexeme: meanwhile       Token: MEANWHILE      
Line 117: Lexeme: (               Token: DELIM_O_PAREN
Line 117: Lexeme: i               Token: IDENTIFIER
Line 117: Lexeme: <               Token: <
Line 117: Lexeme: 10              Token: CONSTANT_NUM
Line 117: Lexeme: )               Token: DELIM_C_PAREN
Line 117: Lexeme: ;               Token: DELIM_SEMCOL
Line 118: Lexeme: }               Token: DELIM_C_BRACE
Line 119: Lexeme: }               Token: DELIM_C_BRACE
Line 121: Lexeme: //              Token: COMMENT
Line 122: Lexeme: num             Token: NUM            
Line 122: Lexeme: count           Token: IDENTIFIER
Line 122: Lexeme: ;               Token: DELIM_SEMCOL
Line 123: Lexeme: drift           Token: DRIFT          
Line 123: Lexeme: decimal         Token: IDENTIFIER
Line 123: Lexeme: =               Token: =
Line 123: Lexeme: 89.70           Token: CONSTANT_DRIFT
Line 123: Lexeme: ;               Token: DELIM_SEMCOL
Line 124: Lexeme: num             Token: NUM            
Line 124: Lexeme: count           Token: IDENTIFIER
Line 124: Lexeme: =               Token: =
Line 124: Lexeme: number          Token: IDENTIFIER
Line 124: Lexeme: ;               Token: DELIM_SEMCOL
Line 125: Lexeme: drift           Token: DRIFT          
Line 125: Lexeme: math_grade      Token: IDENTIFIER
Line 125: Lexeme: ,               Token: DELIM_COMMA
Line 125: Lexeme: science_grade   Token: IDENTIFIER
Line 125: Lexeme: ,               Token: DELIM_COMMA
Line 125: Lexeme: english_grade   Token: IDENTIFIER
Line 125: Lexeme: ;               Token: DELIM_SEMCOL
Line 126: Lexeme: drift           Token: DRIFT          
Line 126: Lexeme: math_grade      Token: IDENTIFIER
Line 126: Lexeme: =               Token: =
Line 126: Lexeme: 97.5            Token: CONSTANT_DRIFT
Line 126: Lexeme: ,               Token: DELIM_COMMA
Line 126: Lexeme: science_grade   Token: IDENTIFIER
Line 126: Lexeme: =               Token: =
Line 126: Lexeme: 95.5            Token: CONSTANT_DRIFT
Line 126: Lexeme: ,               Token: DELIM_COMMA
Line 126: Lexeme: english_grade   Token: IDENTIFIER
Line 126: Lexeme: =               Token: =
Line 126: Lexeme: math_grade      Token: IDENTIFIER
Line 126: Lexeme: ;               Token: DELIM_SEMCOL
Line 128: Lexeme: u               Token: IDENTIFIER
Line 128: Lexeme: ++              Token: ++
Line 128: Lexeme: ;               Token: DELIM_SEMCOL
Line 129: Lexeme: ++              Token: ++
Line 129: Lexeme: u               Token: IDENTIFIER
Line 129: Lexeme: ;               Token: DELIM_SEMCOL
Line 131: Lexeme: if              Token: IF             
Line 131: Lexeme: (               Token: DELIM_O_PAREN
Line 131: Lexeme: win             Token: IDENTIFIER
Line 131: Lexeme: ==              Token: ==
Line 131: Lexeme: nocap           Token: CONSTANT_LEGIT
Line 131: Lexeme: )               Token: DELIM_C_PAREN
Line 131: Lexeme: {               Token: DELIM_O_BRACE
Line 132: Lexeme: out             Token: OUTPUT         
Line 132: Lexeme: (               Token: DELIM_O_PAREN
Line 132: Lexeme: "You won!"      Token: CONSTANT_TEXT
Line 132: Lexeme: )               Token: DELIM_C_PAREN
Line 132: Lexeme: ;               Token: DELIM_SEMCOL
Line 133: Lexeme: }               Token: DELIM_C_BRACE
Line 133: Lexeme: ex              Token: EX             
Line 133: Lexeme: (               Token: DELIM_O_PAREN
Line 133: Lexeme: win             Token: IDENTIFIER
Line 133: Lexeme: ==              Token: ==
Line 133: Lexeme: cap             Token: CONSTANT_LEGIT
Line 133: Lexeme: )               Token: DELIM_C_PAREN
Line 133: Lexeme: {               Token: DELIM_O_BRACE
Line 134: Lexeme: out             Token: OUTPUT         
Line 134: Lexeme: (               Token: DELIM_O_PAREN
Line 134: Lexeme: "You lost!"     Token: CONSTANT_TEXT
Line 134: Lexeme: )               Token: DELIM_C_PAREN
Line 134: Lexeme: ;               Token: DELIM_SEMCOL
Line 135: Lexeme: }               Token: DELIM_C_BRACE
Line 137: Lexeme: if              Token: IF             
Line 137: Lexeme: (               Token: DELIM_O_PAREN
Line 137: Lexeme: test            Token: IDENTIFIER
Line 137: Lexeme: )               Token: DELIM_C_PAREN
Line 137: Lexeme: {               Token: DELIM_O_BRACE
Line 138: Lexeme: test            Token: IDENTIFIER
Line 138: Lexeme: =               Token: =
Line 138: Lexeme: test            Token: IDENTIFIER
Line 138: Lexeme: ;               Token: DELIM_SEMCOL
Line 139: Lexeme: }               Token: DELIM_C_BRACE
Line 139: Lexeme: ex              Token: EX             
Line 139: Lexeme: (               Token: DELIM_O_PAREN
Line 139: Lexeme: test            Token: IDENTIFIER
Line 139: Lexeme: )               Token: DELIM_C_PAREN
Line 139: Lexeme: {               Token: DELIM_O_BRACE
Line 140: Lexeme: test            Token: IDENTIFIER
Line 140: Lexeme: =               Token: =
Line 140: Lexeme: test            Token: IDENTIFIER
Line 140: Lexeme: ;               Token: DELIM_SEMCOL
Line 141: Lexeme: }               Token: DELIM_C_BRACE
Line 141: Lexeme: ex              Token: EX             
Line 141: Lexeme: (               Token: DELIM_O_PAREN
Line 141: Lexeme: test            Token: IDENTIFIER
Line 141: Lexeme: )               Token: DELIM_C_PAREN
Line 141: Lexeme: {               Token: DELIM_O_BRACE
Line 142: Lexeme: test            Token: IDENTIFIER
Line 142: Lexeme: =               Token: =
Line 142: Lexeme: test            Token: IDENTIFIER
Line 142: Lexeme: ;               Token: DELIM_SEMCOL
Line 143: Lexeme: }               Token: DELIM_C_BRACE
Line 143: Lexeme: other           Token: OTHER          
Line 143: Lexeme: {               Token: DELIM_O_BRACE
Line 144: Lexeme: if              Token: IF             
Line 144: Lexeme: (               Token: DELIM_O_PAREN
Line 144: Lexeme: test            Token: IDENTIFIER
Line 144: Lexeme: )               Token: DELIM_C_PAREN
Line 144: Lexeme: {               Token: DELIM_O_BRACE
Line 145: Lexeme: hello           Token: IDENTIFIER
Line 145: Lexeme: ;               Token: DELIM_SEMCOL
Line 146: Lexeme: }               Token: DELIM_C_BRACE
Line 146: Lexeme: other           Token: OTHER          
Line 146: Lexeme: {               Token: DELIM_O_BRACE
Line 147: Lexeme: hello           Token: IDENTIFIER
Line 147: Lexeme: ;               Token: DELIM_SEMCOL
Line 148: Lexeme: }               Token: DELIM_C_BRACE
Line 149: Lexeme: }               Token: DELIM_C_BRACE
Line 151: Lexeme: num             Token: NUM            
Line 151: Lexeme: i               Token: IDENTIFIER
Line 151: Lexeme: ,               Token: DELIM_COMMA
Line 151: Lexeme: j               Token: IDENTIFIER
Line 151: Lexeme: =               Token: =
Line 151: Lexeme: 0               Token: CONSTANT_NUM
Line 151: Lexeme: ,               Token: DELIM_COMMA
Line 151: Lexeme: k               Token: IDENTIFIER
Line 151: Lexeme: =               Token: =
Line 151: Lexeme: 0               Token: CONSTANT_NUM
Line 151: Lexeme: ;               Token: DELIM_SEMCOL
Line 153: Lexeme: !               Token: !
Line 153: Lexeme: (               Token: DELIM_O_PAREN
Line 153: Lexeme: x               Token: IDENTIFIER
Line 153: Lexeme: )               Token: DELIM_C_PAREN
Line 153: Lexeme: ;               Token: DELIM_SEMCOL
Line 154: Lexeme: -               Token: -
Line 154: Lexeme: (               Token: DELIM_O_PAREN
Line 154: Lexeme: x               Token: IDENTIFIER
Line 154: Lexeme: +               Token: +
Line 154: Lexeme: y               Token: IDENTIFIER
Line 154: Lexeme: )               Token: DELIM_C_PAREN
Line 154: Lexeme: ;               Token: DELIM_SEMCOL
Line 156: Lexeme: }               Token: DELIM_C_BRACE
