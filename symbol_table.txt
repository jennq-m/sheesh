Lexical Analysis of loop_test.shs:

Line 1: Lexeme: toptier         Token: TOPTIER
Line 1: Lexeme: (               Token: DELIM_O_PAREN
Line 1: Lexeme: )               Token: DELIM_C_PAREN
Line 1: Lexeme: {               Token: DELIM_O_BRACE
Line 2: Lexeme: rep             Token: REP            
Line 2: Lexeme: (               Token: DELIM_O_PAREN
Line 2: Lexeme: num             Token: NUM            
Line 2: Lexeme: a               Token: IDENTIFIER
Line 2: Lexeme: =               Token: =
Line 2: Lexeme: 0               Token: CONSTANT_NUM
Line 2: Lexeme: ;               Token: DELIM_SEMCOL
Line 2: Lexeme: a               Token: IDENTIFIER
Line 2: Lexeme: <               Token: <
Line 2: Lexeme: 5               Token: CONSTANT_NUM
Line 2: Lexeme: ;               Token: DELIM_SEMCOL
Line 2: Lexeme: a               Token: IDENTIFIER
Line 2: Lexeme: ++              Token: ++
Line 2: Lexeme: )               Token: DELIM_C_PAREN
Line 2: Lexeme: {               Token: DELIM_O_BRACE
Line 3: Lexeme: out             Token: OUT            
Line 3: Lexeme: (               Token: DELIM_O_PAREN
Line 3: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 3: Lexeme: ,               Token: DELIM_COMMA
Line 3: Lexeme: a               Token: IDENTIFIER
Line 3: Lexeme: )               Token: DELIM_C_PAREN
Line 3: Lexeme: ;               Token: DELIM_SEMCOL
Line 4: Lexeme: }               Token: DELIM_C_BRACE
Line 6: Lexeme: rep             Token: REP            
Line 6: Lexeme: (               Token: DELIM_O_PAREN
Line 6: Lexeme: num             Token: NUM            
Line 6: Lexeme: i               Token: IDENTIFIER
Line 6: Lexeme: =               Token: =
Line 6: Lexeme: 0               Token: CONSTANT_NUM
Line 6: Lexeme: ;               Token: DELIM_SEMCOL
Line 6: Lexeme: i               Token: IDENTIFIER
Line 6: Lexeme: <               Token: <
Line 6: Lexeme: 5               Token: CONSTANT_NUM
Line 6: Lexeme: ;               Token: DELIM_SEMCOL
Line 6: Lexeme: i               Token: IDENTIFIER
Line 6: Lexeme: ++              Token: ++
Line 6: Lexeme: )               Token: DELIM_C_PAREN
Line 6: Lexeme: {               Token: DELIM_O_BRACE
Line 7: Lexeme: out             Token: OUT            
Line 7: Lexeme: (               Token: DELIM_O_PAREN
Line 7: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 7: Lexeme: ,               Token: DELIM_COMMA
Line 7: Lexeme: i               Token: IDENTIFIER
Line 7: Lexeme: )               Token: DELIM_C_PAREN
Line 7: Lexeme: ;               Token: DELIM_SEMCOL
Line 8: Lexeme: rep             Token: REP            
Line 8: Lexeme: (               Token: DELIM_O_PAREN
Line 8: Lexeme: num             Token: NUM            
Line 8: Lexeme: j               Token: IDENTIFIER
Line 8: Lexeme: =               Token: =
Line 8: Lexeme: 0               Token: CONSTANT_NUM
Line 8: Lexeme: ;               Token: DELIM_SEMCOL
Line 8: Lexeme: j               Token: IDENTIFIER
Line 8: Lexeme: <               Token: <
Line 8: Lexeme: 5               Token: CONSTANT_NUM
Line 8: Lexeme: ;               Token: DELIM_SEMCOL
Line 8: Lexeme: j               Token: IDENTIFIER
Line 8: Lexeme: ++              Token: ++
Line 8: Lexeme: )               Token: DELIM_C_PAREN
Line 8: Lexeme: {               Token: DELIM_O_BRACE
Line 9: Lexeme: out             Token: OUT            
Line 9: Lexeme: (               Token: DELIM_O_PAREN
Line 9: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 9: Lexeme: ,               Token: DELIM_COMMA
Line 9: Lexeme: j               Token: IDENTIFIER
Line 9: Lexeme: )               Token: DELIM_C_PAREN
Line 9: Lexeme: ;               Token: DELIM_SEMCOL
Line 10: Lexeme: }               Token: DELIM_C_BRACE
Line 11: Lexeme: }               Token: DELIM_C_BRACE
Line 13: Lexeme: num             Token: NUM            
Line 13: Lexeme: i               Token: IDENTIFIER
Line 13: Lexeme: =               Token: =
Line 13: Lexeme: 0               Token: CONSTANT_NUM
Line 13: Lexeme: ;               Token: DELIM_SEMCOL
Line 15: Lexeme: meanwhile       Token: NUM            
Line 15: Lexeme: (               Token: DELIM_O_PAREN
Line 15: Lexeme: i               Token: IDENTIFIER
Line 15: Lexeme: <               Token: <
Line 15: Lexeme: 5               Token: CONSTANT_NUM
Line 15: Lexeme: )               Token: DELIM_C_PAREN
Line 15: Lexeme: {               Token: DELIM_O_BRACE
Line 16: Lexeme: out             Token: OUT            
Line 16: Lexeme: (               Token: DELIM_O_PAREN
Line 16: Lexeme: "string test"   Token: CONSTANT_TEXT
Line 16: Lexeme: )               Token: DELIM_C_PAREN
Line 16: Lexeme: ;               Token: DELIM_SEMCOL
Line 17: Lexeme: i               Token: IDENTIFIER
Line 17: Lexeme: ++              Token: ++
Line 17: Lexeme: ;               Token: DELIM_SEMCOL
Line 18: Lexeme: }               Token: DELIM_C_BRACE
Line 20: Lexeme: num             Token: NUM            
Line 20: Lexeme: i               Token: IDENTIFIER
Line 20: Lexeme: =               Token: =
Line 20: Lexeme: 0               Token: CONSTANT_NUM
Line 20: Lexeme: ;               Token: DELIM_SEMCOL
Line 21: Lexeme: num             Token: NUM            
Line 21: Lexeme: j               Token: IDENTIFIER
Line 21: Lexeme: ;               Token: DELIM_SEMCOL
Line 23: Lexeme: meanwhile       Token: NUM            
Line 23: Lexeme: (               Token: DELIM_O_PAREN
Line 23: Lexeme: i               Token: IDENTIFIER
Line 23: Lexeme: <               Token: <
Line 23: Lexeme: 5               Token: CONSTANT_NUM
Line 23: Lexeme: )               Token: DELIM_C_PAREN
Line 23: Lexeme: {               Token: DELIM_O_BRACE
Line 24: Lexeme: out             Token: OUT            
Line 24: Lexeme: (               Token: DELIM_O_PAREN
Line 24: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 24: Lexeme: ,               Token: DELIM_COMMA
Line 24: Lexeme: identifier      Token: IDENTIFIER
Line 24: Lexeme: )               Token: DELIM_C_PAREN
Line 24: Lexeme: ;               Token: DELIM_SEMCOL
Line 25: Lexeme: j               Token: IDENTIFIER
Line 25: Lexeme: =               Token: =
Line 25: Lexeme: 0               Token: CONSTANT_NUM
Line 25: Lexeme: ;               Token: DELIM_SEMCOL
Line 26: Lexeme: meanwhile       Token: NUM            
Line 26: Lexeme: (               Token: DELIM_O_PAREN
Line 26: Lexeme: j               Token: IDENTIFIER
Line 26: Lexeme: <               Token: <
Line 26: Lexeme: 5               Token: CONSTANT_NUM
Line 26: Lexeme: )               Token: DELIM_C_PAREN
Line 26: Lexeme: {               Token: DELIM_O_BRACE
Line 27: Lexeme: out             Token: OUT            
Line 27: Lexeme: (               Token: DELIM_O_PAREN
Line 27: Lexeme: "J: %d"         Token: CONSTANT_TXTFS
Line 27: Lexeme: ,               Token: DELIM_COMMA
Line 27: Lexeme: j               Token: IDENTIFIER
Line 27: Lexeme: )               Token: DELIM_C_PAREN
Line 27: Lexeme: ;               Token: DELIM_SEMCOL
Line 28: Lexeme: j               Token: IDENTIFIER
Line 28: Lexeme: ++              Token: ++
Line 28: Lexeme: ;               Token: DELIM_SEMCOL
Line 29: Lexeme: }               Token: DELIM_C_BRACE
Line 30: Lexeme: i               Token: IDENTIFIER
Line 30: Lexeme: ++              Token: ++
Line 30: Lexeme: ;               Token: DELIM_SEMCOL
Line 31: Lexeme: }               Token: DELIM_C_BRACE
Line 33: Lexeme: num             Token: NUM            
Line 33: Lexeme: i               Token: IDENTIFIER
Line 33: Lexeme: =               Token: =
Line 33: Lexeme: 0               Token: CONSTANT_NUM
Line 33: Lexeme: ;               Token: DELIM_SEMCOL
Line 35: Lexeme: do              Token: NUM            
Line 35: Lexeme: {               Token: DELIM_O_BRACE
Line 36: Lexeme: out             Token: OUT            
Line 36: Lexeme: (               Token: DELIM_O_PAREN
Line 36: Lexeme: "Test Output"   Token: CONSTANT_TEXT
Line 36: Lexeme: )               Token: DELIM_C_PAREN
Line 36: Lexeme: ;               Token: DELIM_SEMCOL
Line 37: Lexeme: i               Token: IDENTIFIER
Line 37: Lexeme: ++              Token: ++
Line 37: Lexeme: ;               Token: DELIM_SEMCOL
Line 38: Lexeme: }               Token: DELIM_C_BRACE
Line 38: Lexeme: meanwhile       Token: NUM            
Line 38: Lexeme: (               Token: DELIM_O_PAREN
Line 38: Lexeme: i               Token: IDENTIFIER
Line 38: Lexeme: <               Token: <
Line 38: Lexeme: 5               Token: CONSTANT_NUM
Line 38: Lexeme: )               Token: DELIM_C_PAREN
Line 38: Lexeme: ;               Token: DELIM_SEMCOL
Line 40: Lexeme: num             Token: NUM            
Line 40: Lexeme: i               Token: IDENTIFIER
Line 40: Lexeme: =               Token: =
Line 40: Lexeme: 0               Token: CONSTANT_NUM
Line 40: Lexeme: ;               Token: DELIM_SEMCOL
Line 41: Lexeme: num             Token: NUM            
Line 41: Lexeme: j               Token: IDENTIFIER
Line 41: Lexeme: =               Token: =
Line 41: Lexeme: 0               Token: CONSTANT_NUM
Line 41: Lexeme: ;               Token: DELIM_SEMCOL
Line 43: Lexeme: do              Token: NUM            
Line 43: Lexeme: {               Token: DELIM_O_BRACE
Line 44: Lexeme: out             Token: OUT            
Line 44: Lexeme: (               Token: DELIM_O_PAREN
Line 44: Lexeme: "This is an output statement" Token: CONSTANT_TEXT
Line 44: Lexeme: )               Token: DELIM_C_PAREN
Line 44: Lexeme: ;               Token: DELIM_SEMCOL
Line 45: Lexeme: j               Token: IDENTIFIER
Line 45: Lexeme: =               Token: =
Line 45: Lexeme: 0               Token: CONSTANT_NUM
Line 45: Lexeme: ;               Token: DELIM_SEMCOL
Line 46: Lexeme: do              Token: NUM            
Line 46: Lexeme: {               Token: DELIM_O_BRACE
Line 47: Lexeme: out             Token: OUT            
Line 47: Lexeme: (               Token: DELIM_O_PAREN
Line 47: Lexeme: "OUTPUT"        Token: CONSTANT_TEXT
Line 47: Lexeme: )               Token: DELIM_C_PAREN
Line 47: Lexeme: ;               Token: DELIM_SEMCOL
Line 48: Lexeme: j               Token: IDENTIFIER
Line 48: Lexeme: ++              Token: ++
Line 48: Lexeme: ;               Token: DELIM_SEMCOL
Line 49: Lexeme: }               Token: DELIM_C_BRACE
Line 49: Lexeme: meanwhile       Token: NUM            
Line 49: Lexeme: (               Token: DELIM_O_PAREN
Line 49: Lexeme: j               Token: IDENTIFIER
Line 49: Lexeme: <               Token: <
Line 49: Lexeme: 5               Token: CONSTANT_NUM
Line 49: Lexeme: )               Token: DELIM_C_PAREN
Line 49: Lexeme: ;               Token: DELIM_SEMCOL
Line 50: Lexeme: i               Token: IDENTIFIER
Line 50: Lexeme: ++              Token: ++
Line 50: Lexeme: ;               Token: DELIM_SEMCOL
Line 51: Lexeme: }               Token: DELIM_C_BRACE
Line 51: Lexeme: meanwhile       Token: NUM            
Line 51: Lexeme: (               Token: DELIM_O_PAREN
Line 51: Lexeme: i               Token: IDENTIFIER
Line 51: Lexeme: <               Token: <
Line 51: Lexeme: 5               Token: CONSTANT_NUM
Line 51: Lexeme: )               Token: DELIM_C_PAREN
Line 51: Lexeme: ;               Token: DELIM_SEMCOL
Line 54: Lexeme: rep             Token: REP            
Line 54: Lexeme: (               Token: DELIM_O_PAREN
Line 54: Lexeme: num             Token: NUM            
Line 54: Lexeme: a               Token: IDENTIFIER
Line 54: Lexeme: =               Token: =
Line 54: Lexeme: 1               Token: CONSTANT_NUM
Line 54: Lexeme: ;               Token: DELIM_SEMCOL
Line 54: Lexeme: a               Token: IDENTIFIER
Line 54: Lexeme: >               Token: >
Line 54: Lexeme: 1               Token: CONSTANT_NUM
Line 54: Lexeme: ;               Token: DELIM_SEMCOL
Line 54: Lexeme: a               Token: IDENTIFIER
Line 54: Lexeme: ++              Token: ++
Line 54: Lexeme: )               Token: DELIM_C_PAREN
Line 54: Lexeme: {               Token: DELIM_O_BRACE
Line 55: Lexeme: meanwhile       Token: NUM            
Line 55: Lexeme: (               Token: DELIM_O_PAREN
Line 55: Lexeme: i               Token: IDENTIFIER
Line 55: Lexeme: >               Token: >
Line 55: Lexeme: 10              Token: CONSTANT_NUM
Line 55: Lexeme: )               Token: DELIM_C_PAREN
Line 55: Lexeme: {               Token: DELIM_O_BRACE
Line 56: Lexeme: do              Token: NUM            
Line 56: Lexeme: {               Token: DELIM_O_BRACE
Line 57: Lexeme: test            Token: IDENTIFIER
Line 57: Lexeme: =               Token: =
Line 57: Lexeme: test            Token: IDENTIFIER
Line 57: Lexeme: ;               Token: DELIM_SEMCOL
Line 58: Lexeme: }               Token: DELIM_C_BRACE
Line 58: Lexeme: meanwhile       Token: NUM            
Line 58: Lexeme: (               Token: DELIM_O_PAREN
Line 58: Lexeme: i               Token: IDENTIFIER
Line 58: Lexeme: <               Token: <
Line 58: Lexeme: 10              Token: CONSTANT_NUM
Line 58: Lexeme: )               Token: DELIM_C_PAREN
Line 58: Lexeme: ;               Token: DELIM_SEMCOL
Line 59: Lexeme: }               Token: DELIM_C_BRACE
Line 60: Lexeme: }               Token: DELIM_C_BRACE
Line 61: Lexeme: }               Token: DELIM_C_BRACE
