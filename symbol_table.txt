Lexical Analysis of loop_test.shs:

Line 1: Lexeme: toptier         Token: TOPTIER
Line 1: Lexeme: (               Token: DELIM_O_PAREN
Line 1: Lexeme: )               Token: DELIM_C_PAREN
Line 1: Lexeme: {               Token: DELIM_O_BRACE
Line 3: Lexeme: rep             Token: REP            
Line 3: Lexeme: (               Token: DELIM_O_PAREN
Line 3: Lexeme: num             Token: NUM            
Line 3: Lexeme: a               Token: IDENTIFIER
Line 3: Lexeme: =               Token: =
Line 3: Lexeme: 0               Token: CONSTANT_NUM
Line 3: Lexeme: ;               Token: DELIM_SEMCOL
Line 3: Lexeme: a               Token: IDENTIFIER
Line 3: Lexeme: <               Token: <
Line 3: Lexeme: 5               Token: CONSTANT_NUM
Line 3: Lexeme: ;               Token: DELIM_SEMCOL
Line 3: Lexeme: a               Token: IDENTIFIER
Line 3: Lexeme: ++              Token: ++
Line 3: Lexeme: )               Token: DELIM_C_PAREN
Line 3: Lexeme: {               Token: DELIM_O_BRACE
Line 4: Lexeme: out             Token: OUT            
Line 4: Lexeme: (               Token: DELIM_O_PAREN
Line 4: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 4: Lexeme: ,               Token: DELIM_COMMA
Line 4: Lexeme: a               Token: IDENTIFIER
Line 4: Lexeme: )               Token: DELIM_C_PAREN
Line 4: Lexeme: ;               Token: DELIM_SEMCOL
Line 5: Lexeme: }               Token: DELIM_C_BRACE
Line 7: Lexeme: rep             Token: REP            
Line 7: Lexeme: (               Token: DELIM_O_PAREN
Line 7: Lexeme: num             Token: NUM            
Line 7: Lexeme: i               Token: IDENTIFIER
Line 7: Lexeme: =               Token: =
Line 7: Lexeme: 0               Token: CONSTANT_NUM
Line 7: Lexeme: ;               Token: DELIM_SEMCOL
Line 7: Lexeme: i               Token: IDENTIFIER
Line 7: Lexeme: <               Token: <
Line 7: Lexeme: 5               Token: CONSTANT_NUM
Line 7: Lexeme: ;               Token: DELIM_SEMCOL
Line 7: Lexeme: i               Token: IDENTIFIER
Line 7: Lexeme: ++              Token: ++
Line 7: Lexeme: )               Token: DELIM_C_PAREN
Line 7: Lexeme: {               Token: DELIM_O_BRACE
Line 8: Lexeme: out             Token: OUT            
Line 8: Lexeme: (               Token: DELIM_O_PAREN
Line 8: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 8: Lexeme: ,               Token: DELIM_COMMA
Line 8: Lexeme: i               Token: IDENTIFIER
Line 8: Lexeme: )               Token: DELIM_C_PAREN
Line 8: Lexeme: ;               Token: DELIM_SEMCOL
Line 9: Lexeme: rep             Token: REP            
Line 9: Lexeme: (               Token: DELIM_O_PAREN
Line 9: Lexeme: num             Token: NUM            
Line 9: Lexeme: j               Token: IDENTIFIER
Line 9: Lexeme: =               Token: =
Line 9: Lexeme: 0               Token: CONSTANT_NUM
Line 9: Lexeme: ;               Token: DELIM_SEMCOL
Line 9: Lexeme: j               Token: IDENTIFIER
Line 9: Lexeme: <               Token: <
Line 9: Lexeme: 5               Token: CONSTANT_NUM
Line 9: Lexeme: ;               Token: DELIM_SEMCOL
Line 9: Lexeme: j               Token: IDENTIFIER
Line 9: Lexeme: ++              Token: ++
Line 9: Lexeme: )               Token: DELIM_C_PAREN
Line 9: Lexeme: {               Token: DELIM_O_BRACE
Line 10: Lexeme: out             Token: OUT            
Line 10: Lexeme: (               Token: DELIM_O_PAREN
Line 10: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 10: Lexeme: ,               Token: DELIM_COMMA
Line 10: Lexeme: j               Token: IDENTIFIER
Line 10: Lexeme: )               Token: DELIM_C_PAREN
Line 10: Lexeme: ;               Token: DELIM_SEMCOL
Line 11: Lexeme: }               Token: DELIM_C_BRACE
Line 12: Lexeme: }               Token: DELIM_C_BRACE
Line 14: Lexeme: num             Token: NUM            
Line 14: Lexeme: i               Token: IDENTIFIER
Line 14: Lexeme: =               Token: =
Line 14: Lexeme: 0               Token: CONSTANT_NUM
Line 14: Lexeme: ;               Token: DELIM_SEMCOL
Line 16: Lexeme: meanwhile       Token: NUM            
Line 16: Lexeme: (               Token: DELIM_O_PAREN
Line 16: Lexeme: i               Token: IDENTIFIER
Line 16: Lexeme: <               Token: <
Line 16: Lexeme: 5               Token: CONSTANT_NUM
Line 16: Lexeme: )               Token: DELIM_C_PAREN
Line 16: Lexeme: {               Token: DELIM_O_BRACE
Line 17: Lexeme: out             Token: OUT            
Line 17: Lexeme: (               Token: DELIM_O_PAREN
Line 17: Lexeme: "string test"   Token: CONSTANT_TEXT
Line 17: Lexeme: )               Token: DELIM_C_PAREN
Line 17: Lexeme: ;               Token: DELIM_SEMCOL
Line 18: Lexeme: i               Token: IDENTIFIER
Line 18: Lexeme: ++              Token: ++
Line 18: Lexeme: ;               Token: DELIM_SEMCOL
Line 19: Lexeme: }               Token: DELIM_C_BRACE
Line 21: Lexeme: num             Token: NUM            
Line 21: Lexeme: i               Token: IDENTIFIER
Line 21: Lexeme: =               Token: =
Line 21: Lexeme: 0               Token: CONSTANT_NUM
Line 21: Lexeme: ;               Token: DELIM_SEMCOL
Line 22: Lexeme: num             Token: NUM            
Line 22: Lexeme: j               Token: IDENTIFIER
Line 22: Lexeme: ;               Token: DELIM_SEMCOL
Line 24: Lexeme: meanwhile       Token: NUM            
Line 24: Lexeme: (               Token: DELIM_O_PAREN
Line 24: Lexeme: i               Token: IDENTIFIER
Line 24: Lexeme: <               Token: <
Line 24: Lexeme: 5               Token: CONSTANT_NUM
Line 24: Lexeme: )               Token: DELIM_C_PAREN
Line 24: Lexeme: {               Token: DELIM_O_BRACE
Line 25: Lexeme: out             Token: OUT            
Line 25: Lexeme: (               Token: DELIM_O_PAREN
Line 25: Lexeme: "%d"            Token: CONSTANT_TXTFS
Line 25: Lexeme: ,               Token: DELIM_COMMA
Line 25: Lexeme: identifier      Token: IDENTIFIER
Line 25: Lexeme: )               Token: DELIM_C_PAREN
Line 25: Lexeme: ;               Token: DELIM_SEMCOL
Line 26: Lexeme: j               Token: IDENTIFIER
Line 26: Lexeme: =               Token: =
Line 26: Lexeme: 0               Token: CONSTANT_NUM
Line 26: Lexeme: ;               Token: DELIM_SEMCOL
Line 27: Lexeme: meanwhile       Token: NUM            
Line 27: Lexeme: (               Token: DELIM_O_PAREN
Line 27: Lexeme: j               Token: IDENTIFIER
Line 27: Lexeme: <               Token: <
Line 27: Lexeme: 5               Token: CONSTANT_NUM
Line 27: Lexeme: )               Token: DELIM_C_PAREN
Line 27: Lexeme: {               Token: DELIM_O_BRACE
Line 28: Lexeme: out             Token: OUT            
Line 28: Lexeme: (               Token: DELIM_O_PAREN
Line 28: Lexeme: "J: %d"         Token: CONSTANT_TXTFS
Line 28: Lexeme: ,               Token: DELIM_COMMA
Line 28: Lexeme: j               Token: IDENTIFIER
Line 28: Lexeme: )               Token: DELIM_C_PAREN
Line 28: Lexeme: ;               Token: DELIM_SEMCOL
Line 29: Lexeme: j               Token: IDENTIFIER
Line 29: Lexeme: ++              Token: ++
Line 29: Lexeme: ;               Token: DELIM_SEMCOL
Line 30: Lexeme: }               Token: DELIM_C_BRACE
Line 31: Lexeme: i               Token: IDENTIFIER
Line 31: Lexeme: ++              Token: ++
Line 31: Lexeme: ;               Token: DELIM_SEMCOL
Line 32: Lexeme: }               Token: DELIM_C_BRACE
Line 34: Lexeme: num             Token: NUM            
Line 34: Lexeme: i               Token: IDENTIFIER
Line 34: Lexeme: =               Token: =
Line 34: Lexeme: 0               Token: CONSTANT_NUM
Line 34: Lexeme: ;               Token: DELIM_SEMCOL
Line 36: Lexeme: do              Token: NUM            
Line 36: Lexeme: {               Token: DELIM_O_BRACE
Line 37: Lexeme: out             Token: OUT            
Line 37: Lexeme: (               Token: DELIM_O_PAREN
Line 37: Lexeme: "Test Output"   Token: CONSTANT_TEXT
Line 37: Lexeme: )               Token: DELIM_C_PAREN
Line 37: Lexeme: ;               Token: DELIM_SEMCOL
Line 38: Lexeme: i               Token: IDENTIFIER
Line 38: Lexeme: ++              Token: ++
Line 38: Lexeme: ;               Token: DELIM_SEMCOL
Line 39: Lexeme: }               Token: DELIM_C_BRACE
Line 39: Lexeme: meanwhile       Token: NUM            
Line 39: Lexeme: (               Token: DELIM_O_PAREN
Line 39: Lexeme: i               Token: IDENTIFIER
Line 39: Lexeme: <               Token: <
Line 39: Lexeme: 5               Token: CONSTANT_NUM
Line 39: Lexeme: )               Token: DELIM_C_PAREN
Line 39: Lexeme: ;               Token: DELIM_SEMCOL
Line 41: Lexeme: num             Token: NUM            
Line 41: Lexeme: i               Token: IDENTIFIER
Line 41: Lexeme: =               Token: =
Line 41: Lexeme: 0               Token: CONSTANT_NUM
Line 41: Lexeme: ;               Token: DELIM_SEMCOL
Line 42: Lexeme: num             Token: NUM            
Line 42: Lexeme: j               Token: IDENTIFIER
Line 42: Lexeme: =               Token: =
Line 42: Lexeme: 0               Token: CONSTANT_NUM
Line 42: Lexeme: ;               Token: DELIM_SEMCOL
Line 44: Lexeme: do              Token: NUM            
Line 44: Lexeme: {               Token: DELIM_O_BRACE
Line 45: Lexeme: out             Token: OUT            
Line 45: Lexeme: (               Token: DELIM_O_PAREN
Line 45: Lexeme: "This is an output statement" Token: CONSTANT_TEXT
Line 45: Lexeme: )               Token: DELIM_C_PAREN
Line 45: Lexeme: ;               Token: DELIM_SEMCOL
Line 46: Lexeme: j               Token: IDENTIFIER
Line 46: Lexeme: =               Token: =
Line 46: Lexeme: 0               Token: CONSTANT_NUM
Line 46: Lexeme: ;               Token: DELIM_SEMCOL
Line 47: Lexeme: do              Token: NUM            
Line 47: Lexeme: {               Token: DELIM_O_BRACE
Line 48: Lexeme: out             Token: OUT            
Line 48: Lexeme: (               Token: DELIM_O_PAREN
Line 48: Lexeme: "OUTPUT"        Token: CONSTANT_TEXT
Line 48: Lexeme: )               Token: DELIM_C_PAREN
Line 48: Lexeme: ;               Token: DELIM_SEMCOL
Line 49: Lexeme: j               Token: IDENTIFIER
Line 49: Lexeme: ++              Token: ++
Line 49: Lexeme: ;               Token: DELIM_SEMCOL
Line 50: Lexeme: }               Token: DELIM_C_BRACE
Line 50: Lexeme: meanwhile       Token: NUM            
Line 50: Lexeme: (               Token: DELIM_O_PAREN
Line 50: Lexeme: j               Token: IDENTIFIER
Line 50: Lexeme: <               Token: <
Line 50: Lexeme: 5               Token: CONSTANT_NUM
Line 50: Lexeme: )               Token: DELIM_C_PAREN
Line 50: Lexeme: ;               Token: DELIM_SEMCOL
Line 51: Lexeme: i               Token: IDENTIFIER
Line 51: Lexeme: ++              Token: ++
Line 51: Lexeme: ;               Token: DELIM_SEMCOL
Line 52: Lexeme: }               Token: DELIM_C_BRACE
Line 52: Lexeme: meanwhile       Token: NUM            
Line 52: Lexeme: (               Token: DELIM_O_PAREN
Line 52: Lexeme: i               Token: IDENTIFIER
Line 52: Lexeme: <               Token: <
Line 52: Lexeme: 5               Token: CONSTANT_NUM
Line 52: Lexeme: )               Token: DELIM_C_PAREN
Line 52: Lexeme: ;               Token: DELIM_SEMCOL
Line 55: Lexeme: rep             Token: REP            
Line 55: Lexeme: (               Token: DELIM_O_PAREN
Line 55: Lexeme: num             Token: NUM            
Line 55: Lexeme: a               Token: IDENTIFIER
Line 55: Lexeme: =               Token: =
Line 55: Lexeme: 1               Token: CONSTANT_NUM
Line 55: Lexeme: ;               Token: DELIM_SEMCOL
Line 55: Lexeme: a               Token: IDENTIFIER
Line 55: Lexeme: >               Token: >
Line 55: Lexeme: 1               Token: CONSTANT_NUM
Line 55: Lexeme: ;               Token: DELIM_SEMCOL
Line 55: Lexeme: a               Token: IDENTIFIER
Line 55: Lexeme: ++              Token: ++
Line 55: Lexeme: )               Token: DELIM_C_PAREN
Line 55: Lexeme: {               Token: DELIM_O_BRACE
Line 56: Lexeme: meanwhile       Token: NUM            
Line 56: Lexeme: (               Token: DELIM_O_PAREN
Line 56: Lexeme: i               Token: IDENTIFIER
Line 56: Lexeme: >               Token: >
Line 56: Lexeme: 10              Token: CONSTANT_NUM
Line 56: Lexeme: )               Token: DELIM_C_PAREN
Line 56: Lexeme: {               Token: DELIM_O_BRACE
Line 57: Lexeme: do              Token: NUM            
Line 57: Lexeme: {               Token: DELIM_O_BRACE
Line 58: Lexeme: test            Token: IDENTIFIER
Line 58: Lexeme: =               Token: =
Line 58: Lexeme: test            Token: IDENTIFIER
Line 58: Lexeme: ;               Token: DELIM_SEMCOL
Line 59: Lexeme: }               Token: DELIM_C_BRACE
Line 59: Lexeme: meanwhile       Token: NUM            
Line 59: Lexeme: (               Token: DELIM_O_PAREN
Line 59: Lexeme: i               Token: IDENTIFIER
Line 59: Lexeme: <               Token: <
Line 59: Lexeme: 10              Token: CONSTANT_NUM
Line 59: Lexeme: )               Token: DELIM_C_PAREN
Line 59: Lexeme: ;               Token: DELIM_SEMCOL
Line 60: Lexeme: }               Token: DELIM_C_BRACE
Line 61: Lexeme: }               Token: DELIM_C_BRACE
Line 62: Lexeme: }               Token: DELIM_C_BRACE
